{"version":3,"file":"useTitle-7a0190e0.js","sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/states.js","../../src/utils/handle-content-links.js","../../src/utils/shorten-number.jsx","../../src/components/avatar.jsx","../../src/components/icon.jsx","../../src/components/link.jsx","../../src/utils/db.js","../../src/utils/open-compose.js","../../src/utils/supports.js","../../src/utils/useInterval.js","../../src/utils/visibility-icons-map.js","../../src/components/loader.jsx","../../src/components/modal.jsx","../../src/components/name-text.jsx","../../src/utils/html-content-length.js","../../src/utils/show-toast.js","../../src/components/media.jsx","../../src/components/MenuLink.jsx","../../src/components/relative-time.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\n\nexport function getAccount(id) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.info.id === id) || accounts[0];\n}\n\nexport function getCurrentAccount() {\n  const currentAccount = store.session.get('currentAccount');\n  const account = getAccount(currentAccount);\n  return account;\n}\n\nexport function getCurrentAccountNS() {\n  const account = getCurrentAccount();\n  const {\n    instanceURL,\n    info: { id },\n  } = account;\n  return `${id}@${instanceURL}`;\n}\n\nexport function saveAccount(account) {\n  const accounts = store.local.getJSON('accounts') || [];\n  const acc = accounts.find((a) => a.info.id === account.info.id);\n  if (acc) {\n    acc.info = account.info;\n    acc.instanceURL = account.instanceURL;\n    acc.accessToken = account.accessToken;\n  } else {\n    accounts.push(account);\n  }\n  store.local.setJSON('accounts', accounts);\n  store.session.set('currentAccount', account.info.id);\n}\n\nlet currentInstance = null;\nexport function getCurrentInstance() {\n  if (currentInstance) return currentInstance;\n  try {\n    const account = getCurrentAccount();\n    const instances = store.local.getJSON('instances');\n    const instance = account.instanceURL.toLowerCase();\n    return (currentInstance = instances[instance]);\n  } catch (e) {\n    console.error(e);\n    alert('Failed to load instance configuration. Please try again.');\n    // Temporary fix for corrupted data\n    store.local.del('instances');\n    location.reload();\n    return {};\n  }\n}\n","import { getCurrentAccountNS } from './store-utils';\n\nconst local = {\n  get: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(local.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return local.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nconst session = {\n  get: (key) => {\n    try {\n      return sessionStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(session.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return sessionStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return session.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return sessionStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\n// Store with account namespace (id@domain.tld) <- uses id, not username\nconst account = {\n  get: (key) => {\n    try {\n      return local.getJSON(key)[getCurrentAccountNS()];\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      const data = local.getJSON(key) || {};\n      data[getCurrentAccountNS()] = value;\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      const data = local.getJSON(key) || {};\n      delete data[getCurrentAccountNS()];\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nexport default { local, session, account };\n","import { createClient } from 'masto';\n\nimport store from './store';\nimport { getAccount, getCurrentAccount, saveAccount } from './store-utils';\n\n// Default *fallback* instance\nconst DEFAULT_INSTANCE = 'mastodon.social';\n\n// Per-instance masto instance\n// Useful when only one account is logged in\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\n// E.g. apis['mastodon.social']\nconst apis = {};\n\n// Per-account masto instance\n// Note: There can be many accounts per instance\n// Useful when multiple accounts are logged in or when certain actions require a specific account\n// Just in case if I need this one day.\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\nconst accountApis = {};\n\n// Current account masto instance\nlet currentAccountApi;\n\nexport function initClient({ instance, accessToken }) {\n  if (/^https?:\\/\\//.test(instance)) {\n    instance = instance\n      .replace(/^https?:\\/\\//, '')\n      .replace(/\\/+$/, '')\n      .toLowerCase();\n  }\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\n\n  const client = createClient({\n    url,\n    accessToken, // Can be null\n    disableVersionCheck: true, // Allow non-Mastodon instances\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\n  });\n  client.__instance__ = instance;\n\n  apis[instance] = client;\n  if (!accountApis[instance]) accountApis[instance] = {};\n  if (accessToken) accountApis[instance][accessToken] = client;\n\n  return client;\n}\n\n// Get the instance information\n// The config is needed for composing\nexport async function initInstance(client) {\n  const masto = client;\n  // Request v2, fallback to v1 if fail\n  let info;\n  try {\n    info = await masto.v2.instance.fetch();\n  } catch (e) {}\n  if (!info) {\n    try {\n      info = await masto.v1.instances.fetch();\n    } catch (e) {}\n  }\n  if (!info) return;\n  console.log(info);\n  const {\n    // v1\n    uri,\n    urls: { streamingApi } = {},\n    // v2\n    domain,\n    configuration: { urls: { streaming } = {} } = {},\n  } = info;\n  if (uri || domain) {\n    const instances = store.local.getJSON('instances') || {};\n    instances[\n      (domain || uri)\n        .replace(/^https?:\\/\\//, '')\n        .replace(/\\/+$/, '')\n        .toLowerCase()\n    ] = info;\n    store.local.setJSON('instances', instances);\n  }\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\n  if (streamingApi || streaming) {\n    console.log('üéè Streaming API URL:', streaming || streamingApi);\n    masto.config.props.streamingApiUrl = streaming || streamingApi;\n  }\n}\n\n// Get the account information and store it\nexport async function initAccount(client, instance, accessToken) {\n  const masto = client;\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\n\n  saveAccount({\n    info: mastoAccount,\n    instanceURL: instance.toLowerCase(),\n    accessToken,\n  });\n}\n\n// Get preferences\nexport async function initPreferences(client) {\n  try {\n    const masto = client;\n    const preferences = await masto.v1.preferences.fetch();\n    store.account.set('preferences', preferences);\n  } catch (e) {\n    // silently fail\n    console.error(e);\n  }\n}\n\n// Get the masto instance\n// If accountID is provided, get the masto instance for that account\nexport function api({ instance, accessToken, accountID, account } = {}) {\n  // Always lowercase and trim the instance\n  if (instance) {\n    instance = instance.toLowerCase().trim();\n  }\n\n  // If instance and accessToken are provided, get the masto instance for that account\n  if (instance && accessToken) {\n    return {\n      masto:\n        accountApis[instance]?.[accessToken] ||\n        initClient({ instance, accessToken }),\n      authenticated: true,\n      instance,\n    };\n  }\n\n  // If account is provided, get the masto instance for that account\n  if (account || accountID) {\n    account = account || getAccount(accountID);\n    if (account) {\n      const accessToken = account.accessToken;\n      const instance = account.instanceURL.toLowerCase().trim();\n      return {\n        masto:\n          accountApis[instance]?.[accessToken] ||\n          initClient({ instance, accessToken }),\n        authenticated: true,\n        instance,\n      };\n    } else {\n      throw new Error(`Account ${accountID} not found`);\n    }\n  }\n\n  // If only instance is provided, get the masto instance for that instance\n  if (instance) {\n    const masto = apis[instance] || initClient({ instance });\n    return {\n      masto,\n      authenticated: !!masto.config.props.accessToken,\n      instance,\n    };\n  }\n\n  // If no instance is provided, get the masto instance for the current account\n  if (currentAccountApi) {\n    return {\n      masto: currentAccountApi,\n      authenticated: true,\n      instance: currentAccountApi.__instance__,\n    };\n  }\n  const currentAccount = getCurrentAccount();\n  if (currentAccount) {\n    const { accessToken, instanceURL: instance } = currentAccount;\n    currentAccountApi =\n      accountApis[instance]?.[accessToken] ||\n      initClient({ instance, accessToken });\n    return {\n      masto: currentAccountApi,\n      authenticated: true,\n      instance,\n    };\n  }\n\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\n  return {\n    masto: apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE }),\n    authenticated: false,\n    instance: DEFAULT_INSTANCE,\n  };\n}\n\nwindow.__API__ = {\n  currentAccountApi,\n  apis,\n  accountApis,\n};\n","function emojifyText(text, emojis = []) {\n  if (!text) return '';\n  if (!emojis.length) return text;\n  // Replace shortcodes in text with emoji\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\n  emojis.forEach((emoji) => {\n    const { shortcode, staticUrl, url } = emoji;\n    text = text.replace(\n      new RegExp(`:${shortcode}:`, 'g'),\n      `<img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"12\" height=\"12\" loading=\"lazy\" />`,\n    );\n  });\n  // console.log(text, emojis);\n  return text;\n}\n\nexport default emojifyText;\n","import emojifyText from './emojify-text';\n\nconst fauxDiv = document.createElement('div');\n\nfunction enhanceContent(content, opts = {}) {\n  const { emojis, postEnhanceDOM = () => {} } = opts;\n  let enhancedContent = content;\n  const dom = document.createElement('div');\n  dom.innerHTML = enhancedContent;\n\n  // Add target=\"_blank\" to all links with no target=\"_blank\"\n  // E.g. `note` in `account`\n  const links = Array.from(dom.querySelectorAll('a:not([target=\"_blank\"])'));\n  links.forEach((link) => {\n    link.setAttribute('target', '_blank');\n  });\n\n  // EMOJIS\n  // ======\n  // Convert :shortcode: to <img />\n  let textNodes = extractTextNodes(dom);\n  textNodes.forEach((node) => {\n    let html = node.nodeValue.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    if (emojis) {\n      html = emojifyText(html, emojis);\n    }\n    fauxDiv.innerHTML = html;\n    const nodes = Array.from(fauxDiv.childNodes);\n    node.replaceWith(...nodes);\n  });\n\n  // CODE BLOCKS\n  // ===========\n  // Convert ```code``` to <pre><code>code</code></pre>\n  const blocks = Array.from(dom.querySelectorAll('p')).filter((p) =>\n    /^```[^]+```$/g.test(p.innerText.trim()),\n  );\n  blocks.forEach((block) => {\n    const pre = document.createElement('pre');\n    // Replace <br /> with newlines\n    block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n    pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\n    block.replaceWith(pre);\n  });\n\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\n  const paragraphs = Array.from(dom.querySelectorAll('p'));\n  // Filter out paragraphs with ``` in beginning only\n  const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\n  // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\n  codeBlocks.forEach((block) => {\n    const nextParagraphs = [block];\n    let hasCodeBlock = false;\n    let currentBlock = block;\n    while (currentBlock.nextElementSibling) {\n      const next = currentBlock.nextElementSibling;\n      if (next && next.tagName === 'P') {\n        if (/```$/g.test(next.innerText)) {\n          nextParagraphs.push(next);\n          hasCodeBlock = true;\n          break;\n        } else {\n          nextParagraphs.push(next);\n        }\n      } else {\n        break;\n      }\n      currentBlock = next;\n    }\n    if (hasCodeBlock) {\n      const pre = document.createElement('pre');\n      nextParagraphs.forEach((p) => {\n        // Replace <br /> with newlines\n        p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n      });\n      const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\n      pre.innerHTML = `<code>${codeText}</code>`;\n      block.replaceWith(pre);\n      nextParagraphs.forEach((p) => p.remove());\n    }\n  });\n\n  // INLINE CODE\n  // ===========\n  // Convert `code` to <code>code</code>\n  textNodes = extractTextNodes(dom);\n  textNodes.forEach((node) => {\n    let html = node.nodeValue.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    if (/`[^`]+`/g.test(html)) {\n      html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\n    }\n    fauxDiv.innerHTML = html;\n    const nodes = Array.from(fauxDiv.childNodes);\n    node.replaceWith(...nodes);\n  });\n\n  // TWITTER USERNAMES\n  // =================\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\n  textNodes = extractTextNodes(dom, {\n    rejectFilter: ['A'],\n  });\n  textNodes.forEach((node) => {\n    let html = node.nodeValue.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\n      html = html.replaceAll(\n        /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\n        '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\n      );\n    }\n    fauxDiv.innerHTML = html;\n    const nodes = Array.from(fauxDiv.childNodes);\n    node.replaceWith(...nodes);\n  });\n\n  if (postEnhanceDOM) {\n    postEnhanceDOM(dom); // mutate dom\n  }\n\n  enhancedContent = dom.innerHTML;\n\n  return enhancedContent;\n}\n\nconst defaultRejectFilter = [\n  // Document metadata\n  'STYLE',\n  // Image and multimedia\n  'IMG',\n  'VIDEO',\n  'AUDIO',\n  'AREA',\n  'MAP',\n  'TRACK',\n  // Embedded content\n  'EMBED',\n  'IFRAME',\n  'OBJECT',\n  'PICTURE',\n  'PORTAL',\n  'SOURCE',\n  // SVG and MathML\n  'SVG',\n  'MATH',\n  // Scripting\n  'CANVAS',\n  'NOSCRIPT',\n  'SCRIPT',\n  // Forms\n  'INPUT',\n  'OPTION',\n  'TEXTAREA',\n  // Web Components\n  'SLOT',\n  'TEMPLATE',\n];\nconst defaultRejectFilterMap = Object.fromEntries(\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\n);\nfunction extractTextNodes(dom, opts = {}) {\n  const textNodes = [];\n  const walk = document.createTreeWalker(\n    dom,\n    NodeFilter.SHOW_TEXT,\n    {\n      acceptNode(node) {\n        if (defaultRejectFilterMap[node.parentNode.nodeName]) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        if (\n          opts.rejectFilter &&\n          opts.rejectFilter.includes(node.parentNode.nodeName)\n        ) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        return NodeFilter.FILTER_ACCEPT;\n      },\n    },\n    false,\n  );\n  let node;\n  while ((node = walk.nextNode())) {\n    textNodes.push(node);\n  }\n  return textNodes;\n}\n\nexport default enhanceContent;\n","import mem from 'mem';\nimport { proxy, subscribe } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport { api } from './api';\nimport store from './store';\n\nconst states = proxy({\n  // history: [],\n  prevLocation: null,\n  currentLocation: null,\n  statuses: {},\n  statusThreadNumber: {},\n  home: [],\n  // specialHome: [],\n  homeNew: [],\n  homeLast: null, // Last item in 'home' list\n  homeLastFetchTime: null,\n  notifications: [],\n  notificationsLast: store.account.get('notificationsLast') || null, // Last read notification\n  notificationsNew: [],\n  notificationsShowNew: false,\n  notificationsLastFetchTime: null,\n  accounts: {},\n  reloadStatusPage: 0,\n  spoilers: {},\n  scrollPositions: {},\n  unfurledLinks: {},\n  // Modals\n  showCompose: false,\n  showSettings: false,\n  showAccount: false,\n  showDrafts: false,\n  showMediaModal: false,\n  showShortcutsSettings: false,\n  // Shortcuts\n  shortcuts: store.account.get('shortcuts') ?? [],\n  // Settings\n  settings: {\n    shortcutsViewMode: store.account.get('settings-shortcutsViewMode') ?? null,\n    shortcutsColumnsMode:\n      store.account.get('settings-shortcutsColumnsMode') ?? false,\n    boostsCarousel: store.account.get('settings-boostsCarousel') ?? true,\n  },\n});\n\nexport default states;\n\nsubscribeKey(states, 'notificationsLast', (v) => {\n  console.log('CHANGE', v);\n  store.account.set('notificationsLast', states.notificationsLast);\n});\nsubscribe(states, (v) => {\n  console.debug('STATES change', v);\n  const [action, path, value, prevValue] = v[0];\n  if (path.join('.') === 'settings.boostsCarousel') {\n    store.account.set('settings-boostsCarousel', !!value);\n  }\n  if (path.join('.') === 'settings.shortcutsColumnsMode') {\n    store.account.set('settings-shortcutsColumnsMode', !!value);\n  }\n  if (path.join('.') === 'settings.shortcutsViewMode') {\n    store.account.set('settings-shortcutsViewMode', value);\n  }\n  if (path?.[0] === 'shortcuts') {\n    store.account.set('shortcuts', states.shortcuts);\n  }\n});\n\nexport function hideAllModals() {\n  states.showCompose = false;\n  states.showSettings = false;\n  states.showAccount = false;\n  states.showDrafts = false;\n  states.showMediaModal = false;\n  states.showShortcutsSettings = false;\n}\n\nexport function statusKey(id, instance) {\n  return instance ? `${instance}/${id}` : id;\n}\n\nexport function getStatus(statusID, instance) {\n  if (instance) {\n    const key = statusKey(statusID, instance);\n    return states.statuses[key];\n  }\n  return states.statuses[statusID];\n}\n\nexport function saveStatus(status, instance, opts) {\n  if (typeof instance === 'object') {\n    opts = instance;\n    instance = null;\n  }\n  const { override, skipThreading } = Object.assign(\n    { override: true, skipThreading: false },\n    opts,\n  );\n  if (!status) return;\n  if (!override && getStatus(status.id)) return;\n  const key = statusKey(status.id, instance);\n  states.statuses[key] = status;\n  if (status.reblog) {\n    const key = statusKey(status.reblog.id, instance);\n    states.statuses[key] = status.reblog;\n  }\n\n  // THREAD TRAVERSER\n  if (!skipThreading) {\n    requestAnimationFrame(() => {\n      threadifyStatus(status, instance);\n      if (status.reblog) {\n        threadifyStatus(status.reblog, instance);\n      }\n    });\n  }\n}\n\nexport function threadifyStatus(status, propInstance) {\n  const { masto, instance } = api({ instance: propInstance });\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\n  let fetchIndex = 0;\n  async function traverse(status, index = 0) {\n    const { inReplyToId, inReplyToAccountId } = status;\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\n      return [status];\n    }\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\n      throw 'Not a thread';\n      // Possibly thread of replies by multiple people?\n    }\n    const key = statusKey(inReplyToId, instance);\n    let prevStatus = states.statuses[key];\n    if (!prevStatus) {\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\n      // prevStatus = await masto.v1.statuses.fetch(inReplyToId);\n      prevStatus = await fetchStatus(inReplyToId, masto);\n      saveStatus(prevStatus, instance, { skipThreading: true });\n    }\n    // Prepend so that first status in thread will be index 0\n    return [...(await traverse(prevStatus, ++index)), status];\n  }\n  return traverse(status)\n    .then((statuses) => {\n      if (statuses.length > 1) {\n        console.debug('THREAD', statuses);\n        statuses.forEach((status, index) => {\n          const key = statusKey(status.id, instance);\n          states.statusThreadNumber[key] = index + 1;\n        });\n      }\n    })\n    .catch((e) => {\n      console.error(e, status);\n    });\n}\n\nconst fetchStatus = mem((statusID, masto) => {\n  return masto.v1.statuses.fetch(statusID);\n});\n","import states from './states';\n\nfunction handleContentLinks(opts) {\n  const { mentions = [], instance } = opts || {};\n  return (e) => {\n    let { target } = e;\n    target = target.closest('a');\n    if (!target) return;\n    if (target.classList.contains('u-url')) {\n      const targetText = (\n        target.querySelector('span') || target\n      ).innerText.trim();\n      const username = targetText.replace(/^@/, '');\n      const url = target.getAttribute('href');\n      const mention = mentions.find(\n        (mention) =>\n          mention.username === username ||\n          mention.acct === username ||\n          mention.url === url,\n      );\n      if (mention) {\n        e.preventDefault();\n        e.stopPropagation();\n        states.showAccount = {\n          account: mention.acct,\n          instance,\n        };\n      } else if (!/^http/i.test(targetText)) {\n        console.log('mention not found', targetText);\n        e.preventDefault();\n        e.stopPropagation();\n        const href = target.getAttribute('href');\n        states.showAccount = {\n          account: href,\n          instance,\n        };\n      }\n    } else if (target.classList.contains('hashtag')) {\n      e.preventDefault();\n      e.stopPropagation();\n      const tag = target.innerText.replace(/^#/, '').trim();\n      const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\n      console.log({ hashURL });\n      location.hash = hashURL;\n    } else if (states.unfurledLinks[target.href]?.url) {\n      e.preventDefault();\n      e.stopPropagation();\n      location.hash = `#${states.unfurledLinks[target.href].url}`;\n    }\n  };\n}\n\nexport default handleContentLinks;\n","export default function shortenNumber(num) {\n  return Intl.NumberFormat('en-US', {\n    notation: 'compact',\n  }).format(num);\n}\n","import './avatar.css';\n\nconst SIZES = {\n  s: 16,\n  m: 20,\n  l: 24,\n  xl: 32,\n  xxl: 50,\n  xxxl: 64,\n};\n\nfunction Avatar({ url, size, alt = '', ...props }) {\n  size = SIZES[size] || size || SIZES.m;\n  return (\n    <span\n      class=\"avatar\"\n      style={{\n        width: size,\n        height: size,\n      }}\n      title={alt}\n      {...props}\n    >\n      {!!url && (\n        <img src={url} width={size} height={size} alt={alt} loading=\"lazy\" />\n      )}\n    </span>\n  );\n}\n\nexport default Avatar;\n","import { useEffect, useState } from 'preact/hooks';\n\nconst SIZES = {\n  s: 12,\n  m: 16,\n  l: 20,\n  xl: 24,\n  xxl: 32,\n};\n\nconst ICONS = {\n  x: 'mingcute:close-line',\n  heart: 'mingcute:heart-line',\n  bookmark: 'mingcute:bookmark-line',\n  'check-circle': 'mingcute:check-circle-line',\n  transfer: 'mingcute:transfer-4-line',\n  rocket: 'mingcute:rocket-line',\n  'arrow-left': 'mingcute:arrow-left-line',\n  'arrow-right': 'mingcute:arrow-right-line',\n  'arrow-up': 'mingcute:arrow-up-line',\n  'arrow-down': 'mingcute:arrow-down-line',\n  earth: 'mingcute:earth-line',\n  lock: 'mingcute:lock-line',\n  unlock: 'mingcute:unlock-line',\n  'eye-close': 'mingcute:eye-close-line',\n  'eye-open': 'mingcute:eye-2-line',\n  message: 'mingcute:mail-line',\n  comment: 'mingcute:chat-3-line',\n  home: 'mingcute:home-3-line',\n  notification: 'mingcute:notification-line',\n  follow: 'mingcute:user-follow-line',\n  'follow-add': 'mingcute:user-add-line',\n  poll: ['mingcute:chart-bar-line', '90deg'],\n  pencil: 'mingcute:pencil-line',\n  quill: 'mingcute:quill-pen-line',\n  at: 'mingcute:at-line',\n  attachment: 'mingcute:attachment-line',\n  upload: 'mingcute:upload-3-line',\n  gear: 'mingcute:settings-3-line',\n  more: 'mingcute:more-3-line',\n  external: 'mingcute:external-link-line',\n  popout: 'mingcute:external-link-line',\n  popin: ['mingcute:external-link-line', '180deg'],\n  plus: 'mingcute:add-circle-line',\n  'chevron-left': 'mingcute:left-line',\n  'chevron-right': 'mingcute:right-line',\n  reply: ['mingcute:share-forward-line', '180deg', 'horizontal'],\n  thread: 'mingcute:route-line',\n  group: 'mingcute:group-line',\n  bot: 'mingcute:android-2-line',\n  menu: 'mingcute:rows-4-line',\n  list: 'mingcute:list-check-line',\n  search: 'mingcute:search-2-line',\n  hashtag: 'mingcute:hashtag-line',\n  info: 'mingcute:information-line',\n  shortcut: 'mingcute:lightning-line',\n  user: 'mingcute:user-4-line',\n  following: 'mingcute:walk-line',\n  pin: 'mingcute:pin-line',\n  bus: 'mingcute:bus-2-line',\n  link: 'mingcute:link-2-line',\n  history: 'mingcute:history-line',\n  share: 'mingcute:share-2-line',\n};\n\nconst modules = import.meta.glob('/node_modules/@iconify-icons/mingcute/*.js');\n\nfunction Icon({ icon, size = 'm', alt, title, class: className = '' }) {\n  if (!icon) return null;\n\n  const iconSize = SIZES[size];\n  let iconName = ICONS[icon];\n  let rotate, flip;\n  if (Array.isArray(iconName)) {\n    [iconName, rotate, flip] = iconName;\n  }\n\n  const [iconData, setIconData] = useState(null);\n  useEffect(async () => {\n    const name = iconName.replace('mingcute:', '');\n    const icon = await modules[\n      `/node_modules/@iconify-icons/mingcute/${name}.js`\n    ]();\n    setIconData(icon.default);\n  }, [iconName]);\n\n  return (\n    <div\n      class={`icon ${className}`}\n      title={title || alt}\n      style={{\n        width: `${iconSize}px`,\n        height: `${iconSize}px`,\n        display: 'inline-block',\n        overflow: 'hidden',\n        lineHeight: 0,\n      }}\n    >\n      {iconData && (\n        <svg\n          width={iconSize}\n          height={iconSize}\n          viewBox={`0 0 ${iconData.width} ${iconData.height}`}\n          dangerouslySetInnerHTML={{ __html: iconData.body }}\n          style={{\n            transform: `${rotate ? `rotate(${rotate})` : ''} ${\n              flip ? `scaleX(-1)` : ''\n            }`,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Icon;\n","import { forwardRef } from 'preact/compat';\nimport { useLocation } from 'react-router-dom';\n\nimport states from '../utils/states';\n\n/* NOTES\n   =====\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\n*/\n\nconst Link = forwardRef((props, ref) => {\n  let routerLocation;\n  try {\n    routerLocation = useLocation();\n  } catch (e) {}\n  let hash = (location.hash || '').replace(/^#/, '').trim();\n  if (hash === '') hash = '/';\n  const { to, ...restProps } = props;\n  const isActive = hash === to;\n  return (\n    <a\n      ref={ref}\n      href={`#${to}`}\n      {...restProps}\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\n      onClick={(e) => {\n        if (routerLocation) states.prevLocation = routerLocation;\n        props.onClick?.(e);\n      }}\n    />\n  );\n});\n\nexport default Link;\n","import {\n  clear,\n  createStore,\n  del,\n  delMany,\n  get,\n  getMany,\n  keys,\n  set,\n} from 'idb-keyval';\n\nconst draftsStore = createStore('drafts-db', 'drafts-store');\n\n// Add additonal `draftsStore` parameter to all methods\n\nconst drafts = {\n  set: (key, val) => set(key, val, draftsStore),\n  get: (key) => get(key, draftsStore),\n  getMany: (keys) => getMany(keys, draftsStore),\n  del: (key) => del(key, draftsStore),\n  delMany: (keys) => delMany(keys, draftsStore),\n  clear: () => clear(draftsStore),\n  keys: () => keys(draftsStore),\n};\n\nexport default {\n  drafts,\n};\n","export default function openCompose(opts) {\n  const url = new URL('/compose/', window.location);\n  const { width: screenWidth, height: screenHeight } = window.screen;\n  const left = Math.max(0, (screenWidth - 600) / 2);\n  const top = Math.max(0, (screenHeight - 450) / 2);\n  const width = Math.min(screenWidth, 600);\n  const height = Math.min(screenHeight, 450);\n  const winUID = opts.uid || Math.random();\n  const newWin = window.open(\n    url,\n    'compose' + winUID,\n    `width=${width},height=${height},left=${left},top=${top}`,\n  );\n\n  if (newWin) {\n    // if (masto) {\n    //   newWin.masto = masto;\n    // }\n\n    newWin.__COMPOSE__ = opts;\n  }\n\n  return newWin;\n}\n","import { satisfies } from 'semver';\n\nimport features from '../data/features.json';\n\nimport { getCurrentInstance } from './store-utils';\n\nconst supportsCache = {};\n\nfunction supports(feature) {\n  try {\n    const { version, domain } = getCurrentInstance();\n    const key = `${domain}-${feature}`;\n    if (supportsCache[key]) return supportsCache[key];\n    const range = features[feature];\n    if (!range) return false;\n    return (supportsCache[key] = satisfies(version, range, {\n      includePrerelease: true,\n      loose: true,\n    }));\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default supports;\n","import { useEffect, useRef } from 'preact/hooks';\n\nconst noop = () => {};\n\nfunction useInterval(callback, delay, immediate) {\n  const savedCallback = useRef(noop);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, []);\n\n  useEffect(() => {\n    if (!immediate || delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n\n  useEffect(() => {\n    if (delay === null || delay === false) return;\n    const tick = () => savedCallback.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","export default {\n  public: 'earth',\n  unlisted: 'group',\n  private: 'lock',\n  direct: 'message',\n};\n","import './loader.css';\n\nfunction Loader({ abrupt, hidden }) {\n  return (\n    <div\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\n        hidden ? 'hidden' : ''\n      }`}\n    >\n      <div class=\"loader\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","import './modal.css';\n\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\n\nconst $modalContainer = document.getElementById('modal-container');\n\nfunction Modal({ children, onClick, class: className }) {\n  if (!children) return null;\n\n  const modalRef = useRef();\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\n      if (focusElement) {\n        focusElement.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const Modal = (\n    <div ref={modalRef} className={className} onClick={onClick}>\n      {children}\n    </div>\n  );\n\n  return createPortal(Modal, $modalContainer);\n\n  // return createPortal(children, $modalContainer);\n}\n\nexport default Modal;\n","import './name-text.css';\n\nimport emojifyText from '../utils/emojify-text';\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\n\nfunction NameText({\n  account,\n  instance,\n  showAvatar,\n  showAcct,\n  short,\n  external,\n  onClick,\n}) {\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis } = account;\n  let { username } = account;\n\n  const displayNameWithEmoji = emojifyText(displayName, emojis);\n\n  const trimmedUsername = username.toLowerCase().trim();\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\n  const shortenedDisplayName = trimmedDisplayName\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\n    .replace(/\\s+/g, '') // E.g. \"My name\" === \"myname\"\n    .replace(/[^a-z0-9]/gi, ''); // Remove non-alphanumeric characters\n\n  if (\n    !short &&\n    (trimmedUsername === trimmedDisplayName ||\n      trimmedUsername === shortenedDisplayName)\n  ) {\n    username = null;\n  }\n\n  return (\n    <a\n      class={`name-text ${short ? 'short' : ''}`}\n      href={url}\n      target={external ? '_blank' : null}\n      title={`@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        if (onClick) return onClick(e);\n        states.showAccount = {\n          account,\n          instance,\n        };\n      }}\n    >\n      {showAvatar && (\n        <>\n          <Avatar url={avatar} />{' '}\n        </>\n      )}\n      {displayName && !short ? (\n        <>\n          <b\n            dangerouslySetInnerHTML={{\n              __html: displayNameWithEmoji,\n            }}\n          />\n          {!showAcct && username && (\n            <>\n              {' '}\n              <i>@{username}</i>\n            </>\n          )}\n        </>\n      ) : short ? (\n        <i>@{username}</i>\n      ) : (\n        <b>@{username}</b>\n      )}\n      {showAcct && (\n        <>\n          <br />\n          <i>@{acct}</i>\n        </>\n      )}\n    </a>\n  );\n}\n\nexport default NameText;\n","const div = document.createElement('div');\nexport default function htmlContentLength(html) {\n  if (!html) return 0;\n  div.innerHTML = html;\n  return div.innerText.length;\n}\n","import Toastify from 'toastify-js';\n\nfunction showToast(props) {\n  if (typeof props === 'string') {\n    props = { text: props };\n  }\n  const { onClick = () => {}, delay, ...rest } = props;\n  const toast = Toastify({\n    className: 'shiny-pill',\n    gravity: 'bottom',\n    position: 'center',\n    ...rest,\n    onClick: () => {\n      onClick(toast); // Pass in the object itself!\n    },\n  });\n  if (delay) {\n    setTimeout(() => {\n      toast.showToast();\n    }, delay);\n  } else {\n    toast.showToast();\n  }\n}\n\nexport default showToast;\n","import { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useRef } from 'preact/hooks';\n\nimport { formatDuration } from './status';\n\n/*\nMedia type\n===\nunknown = unsupported or unrecognized file type\nimage = Static image\ngifv = Looping, soundless animation\nvideo = Video clip\naudio = Audio track\n*/\n\nfunction Media({ media, showOriginal, autoAnimate, onClick = () => {} }) {\n  const { blurhash, description, meta, previewUrl, remoteUrl, url, type } =\n    media;\n  const { original = {}, small, focus } = meta || {};\n\n  const width = showOriginal ? original?.width : small?.width;\n  const height = showOriginal ? original?.height : small?.height;\n  const mediaURL = showOriginal ? url : previewUrl;\n\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\n\n  const videoRef = useRef();\n\n  let focalBackgroundPosition;\n  if (focus) {\n    // Convert focal point to CSS background position\n    // Formula from jquery-focuspoint\n    // x = -1, y = 1 => 0% 0%\n    // x = 0, y = 0 => 50% 50%\n    // x = 1, y = -1 => 100% 100%\n    const x = ((focus.x + 1) / 2) * 100;\n    const y = ((1 - focus.y) / 2) * 100;\n    focalBackgroundPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\n  }\n\n  if (type === 'image' || (type === 'unknown' && previewUrl && url)) {\n    // Note: type: unknown might not have width/height\n    return (\n      <div\n        class={`media media-image`}\n        onClick={onClick}\n        style={\n          showOriginal && {\n            backgroundImage: `url(${previewUrl})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            aspectRatio: `${width}/${height}`,\n            width,\n            height,\n            maxWidth: '100%',\n            maxHeight: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }\n        }\n      >\n        <img\n          src={mediaURL}\n          alt={description}\n          width={width}\n          height={height}\n          loading={showOriginal ? 'eager' : 'lazy'}\n          style={\n            !showOriginal && {\n              backgroundColor:\n                rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n              backgroundPosition: focalBackgroundPosition || 'center',\n            }\n          }\n        />\n      </div>\n    );\n  } else if (type === 'gifv' || type === 'video') {\n    const shortDuration = original.duration < 31;\n    const isGIF = type === 'gifv' && shortDuration;\n    // If GIF is too long, treat it as a video\n    const loopable = original.duration < 61;\n    const formattedDuration = formatDuration(original.duration);\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\n    return (\n      <div\n        class={`media media-${isGIF ? 'gif' : 'video'} ${\n          autoGIFAnimate ? 'media-contain' : ''\n        }`}\n        data-formatted-duration={formattedDuration}\n        data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\n        style={{\n          backgroundColor:\n            rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n        }}\n        onClick={(e) => {\n          if (hoverAnimate) {\n            try {\n              videoRef.current.pause();\n            } catch (e) {}\n          }\n          onClick(e);\n        }}\n        onMouseEnter={() => {\n          if (hoverAnimate) {\n            try {\n              videoRef.current.play();\n            } catch (e) {}\n          }\n        }}\n        onMouseLeave={() => {\n          if (hoverAnimate) {\n            try {\n              videoRef.current.pause();\n            } catch (e) {}\n          }\n        }}\n      >\n        {showOriginal || autoGIFAnimate ? (\n          <div\n            style={{\n              width: '100%',\n              height: '100%',\n            }}\n            dangerouslySetInnerHTML={{\n              __html: `\n              <video\n                src=\"${url}\"\n                poster=\"${previewUrl}\"\n                width=\"${width}\"\n                height=\"${height}\"\n                preload=\"auto\"\n                autoplay\n                muted=\"${isGIF}\"\n                ${isGIF ? '' : 'controls'}\n                playsinline\n                loop=\"${loopable}\"\n                ${\n                  isGIF\n                    ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"'\n                    : ''\n                }\n              ></video>\n            `,\n            }}\n          />\n        ) : isGIF ? (\n          <video\n            ref={videoRef}\n            src={url}\n            poster={previewUrl}\n            width={width}\n            height={height}\n            preload=\"auto\"\n            // controls\n            playsinline\n            loop\n            muted\n          />\n        ) : (\n          <img\n            src={previewUrl}\n            alt={description}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n          />\n        )}\n      </div>\n    );\n  } else if (type === 'audio') {\n    const formattedDuration = formatDuration(original.duration);\n    return (\n      <div\n        class=\"media media-audio\"\n        data-formatted-duration={formattedDuration}\n        onClick={onClick}\n      >\n        {showOriginal ? (\n          <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\n        ) : previewUrl ? (\n          <img\n            src={previewUrl}\n            alt={description}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Media;\n","import { FocusableItem } from '@szhsin/react-menu';\n\nimport Link from './link';\n\nfunction MenuLink(props) {\n  return (\n    <FocusableItem>\n      {({ ref, closeMenu }) => (\n        <Link\n          {...props}\n          ref={ref}\n          onClick={({ detail }) =>\n            closeMenu(detail === 0 ? 'Enter' : undefined)\n          }\n        />\n      )}\n    </FocusableItem>\n  );\n}\n\nexport default MenuLink;\n","// Twitter-style relative time component\n// Seconds = 1s\n// Minutes = 1m\n// Hours = 1h\n// Days = 1d\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\nimport dayjs from 'dayjs';\nimport dayjsTwitter from 'dayjs-twitter';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useEffect, useState } from 'preact/hooks';\n\ndayjs.extend(dayjsTwitter);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst dtf = new Intl.DateTimeFormat();\n\nexport default function RelativeTime({ datetime, format }) {\n  if (!datetime) return null;\n  const date = dayjs(datetime);\n  const [dateStr, setDateStr] = useState('');\n\n  useEffect(() => {\n    let timer, raf;\n    const update = () => {\n      raf = requestAnimationFrame(() => {\n        let str;\n        if (format === 'micro') {\n          // If date <= 1 day ago or day is within this year\n          const now = dayjs();\n          const dayDiff = now.diff(date, 'day');\n          if (dayDiff <= 1 || now.year() === date.year()) {\n            str = date.twitter();\n          } else {\n            str = dtf.format(date.toDate());\n          }\n        } else {\n          str = date.fromNow();\n        }\n        setDateStr(str);\n\n        timer = setTimeout(update, 30_000);\n      });\n    };\n    raf = requestAnimationFrame(update);\n    return () => {\n      clearTimeout(timer);\n      cancelAnimationFrame(raf);\n    };\n  }, [date]);\n\n  return (\n    <time datetime={date.toISOString()} title={date.format('LLLL')}>\n      {dateStr}\n    </time>\n  );\n}\n","import './status.css';\n\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport mem from 'mem';\nimport pThrottle from 'p-throttle';\nimport { memo } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport 'swiped-events';\nimport useResizeObserver from 'use-resize-observer';\nimport { useSnapshot } from 'valtio';\n\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport handleContentLinks from '../utils/handle-content-links';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus, statusKey } from '../utils/states';\nimport store from '../utils/store';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './MenuLink';\nimport RelativeTime from './relative-time';\n\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 1000,\n});\n\nfunction fetchAccount(id, masto) {\n  try {\n    return masto.v1.accounts.fetch(id);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\nconst memFetchAccount = mem(fetchAccount);\n\nconst visibilityText = {\n  public: 'Public',\n  unlisted: 'Unlisted',\n  private: 'Followers only',\n  direct: 'Direct',\n};\n\nfunction Status({\n  statusID,\n  status,\n  instance: propInstance,\n  withinContext,\n  size = 'm',\n  skeleton,\n  readOnly,\n  contentTextWeight,\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"status skeleton\">\n        <Avatar size=\"xxl\" />\n        <div class=\"container\">\n          <div class=\"meta\">‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà</div>\n          <div class=\"content-container\">\n            <div class=\"content\">\n              <p>‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const { instance: currentInstance } = api();\n  const sameInstance = instance === currentInstance;\n\n  const sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n  } = status;\n\n  console.debug('RENDER Status', id, status?.account.displayName);\n\n  const createdAtDate = new Date(createdAt);\n  const editedAtDate = new Date(editedAt);\n\n  const isSelf = useMemo(() => {\n    const currentAccount = store.session.get('currentAccount');\n    return currentAccount && currentAccount === accountId;\n  }, [accountId]);\n\n  let inReplyToAccountRef = mentions?.find(\n    (mention) => mention.id === inReplyToAccountId,\n  );\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\n    inReplyToAccountRef = { url: accountURL, username, displayName };\n  }\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\n    const account = states.accounts[inReplyToAccountId];\n    if (account) {\n      setInReplyToAccount(account);\n    } else {\n      memFetchAccount(inReplyToAccountId, masto)\n        .then((account) => {\n          setInReplyToAccount(account);\n          states.accounts[account.id] = account;\n        })\n        .catch((e) => {});\n    }\n  }\n\n  const showSpoiler = !!snapStates.spoilers[id] || false;\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log(status);\n    }\n  };\n\n  if (reblog) {\n    return (\n      <div class=\"status-reblog\" onMouseEnter={debugHover}>\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\n          boosted\n        </div>\n        <Status\n          status={reblog}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n        />\n      </div>\n    );\n  }\n\n  const [showEdited, setShowEdited] = useState(false);\n\n  const currentYear = new Date().getFullYear();\n\n  const spoilerContentRef = useRef(null);\n  useResizeObserver({\n    ref: spoilerContentRef,\n    onResize: () => {\n      if (spoilerContentRef.current) {\n        const { scrollHeight, clientHeight } = spoilerContentRef.current;\n        spoilerContentRef.current.classList.toggle(\n          'truncated',\n          scrollHeight > clientHeight,\n        );\n      }\n    },\n  });\n  const contentRef = useRef(null);\n  useResizeObserver({\n    ref: contentRef,\n    onResize: () => {\n      if (contentRef.current) {\n        const { scrollHeight, clientHeight } = contentRef.current;\n        contentRef.current.classList.toggle(\n          'truncated',\n          scrollHeight > clientHeight,\n        );\n      }\n    },\n  });\n  const readMoreText = 'Read more ‚Üí';\n\n  const statusRef = useRef(null);\n\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this status from another instance.`;\n\n  const textWeight = () =>\n    Math.round((spoilerText.length + htmlContentLength(content)) / 140) || 1;\n\n  const locale = new Intl.DateTimeFormat().resolvedOptions().locale;\n  const createdDateText = Intl.DateTimeFormat(locale, {\n    // Show year if not current year\n    year: createdAtDate.getFullYear() === currentYear ? undefined : 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n  }).format(createdAtDate);\n  const editedDateText =\n    editedAt &&\n    Intl.DateTimeFormat(locale, {\n      // Show year if not this year\n      year: editedAtDate.getFullYear() === currentYear ? undefined : 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n    }).format(editedAtDate);\n\n  const isSizeLarge = size === 'l';\n  // TODO: if visibility = private, only can boost own statuses\n  const canBoost = authenticated && visibility !== 'direct';\n\n  const replyStatus = () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    states.showCompose = {\n      replyToStatus: status,\n    };\n  };\n\n  const boostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    try {\n      if (!reblogged) {\n        const yes = confirm('Boost this post?');\n        if (!yes) {\n          return;\n        }\n      }\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.unreblog(id);\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.reblog(id);\n        saveStatus(newStatus, instance);\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n    }\n  };\n\n  const favouriteStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        favourited: !favourited,\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\n      };\n      if (favourited) {\n        const newStatus = await masto.v1.statuses.unfavourite(id);\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.favourite(id);\n        saveStatus(newStatus, instance);\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n    }\n  };\n\n  const bookmarkStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        bookmarked: !bookmarked,\n      };\n      if (bookmarked) {\n        const newStatus = await masto.v1.statuses.unbookmark(id);\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.bookmark(id);\n        saveStatus(newStatus, instance);\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n    }\n  };\n\n  const StatusMenuItems = (\n    <>\n      {!isSizeLarge && (\n        <>\n          <MenuHeader>\n            <span class=\"ib\">\n              <Icon icon={visibilityIconsMap[visibility]} size=\"s\" />{' '}\n              <span>{visibilityText[visibility]}</span>\n            </span>{' '}\n            <span class=\"ib\">\n              {repliesCount > 0 && (\n                <span>\n                  <Icon icon=\"reply\" alt=\"Replies\" size=\"s\" />{' '}\n                  <span>{shortenNumber(repliesCount)}</span>\n                </span>\n              )}{' '}\n              {reblogsCount > 0 && (\n                <span>\n                  <Icon icon=\"rocket\" alt=\"Boosts\" size=\"s\" />{' '}\n                  <span>{shortenNumber(reblogsCount)}</span>\n                </span>\n              )}{' '}\n              {favouritesCount > 0 && (\n                <span>\n                  <Icon icon=\"heart\" alt=\"Favourites\" size=\"s\" />{' '}\n                  <span>{shortenNumber(favouritesCount)}</span>\n                </span>\n              )}\n            </span>\n            <br />\n            {createdDateText}\n          </MenuHeader>\n          <MenuLink to={instance ? `/${instance}/s/${id}` : `/s/${id}`}>\n            <Icon icon=\"arrow-right\" />\n            View post and replies\n          </MenuLink>\n        </>\n      )}\n      {!!editedAt && (\n        <MenuItem\n          onClick={() => {\n            setShowEdited(id);\n          }}\n        >\n          <Icon icon=\"history\" />\n          <span>\n            Show Edit History\n            <br />\n            <small class=\"more-insignificant\">Edited: {editedDateText}</small>\n          </span>\n        </MenuItem>\n      )}\n      {(!isSizeLarge || !!editedAt) && <MenuDivider />}\n      {!isSizeLarge && (\n        <>\n          <MenuItem onClick={replyStatus}>\n            <Icon icon=\"reply\" />\n            <span>Reply</span>\n          </MenuItem>\n          {canBoost && (\n            <MenuItem\n              onClick={async () => {\n                try {\n                  await boostStatus();\n                  if (!isSizeLarge)\n                    showToast(reblogged ? 'Unboosted' : 'Boosted');\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"rocket\" />\n              <span>{reblogged ? 'Unboost' : 'Boost‚Ä¶'}</span>\n            </MenuItem>\n          )}\n          <MenuItem\n            onClick={() => {\n              try {\n                favouriteStatus();\n                if (!isSizeLarge)\n                  showToast(favourited ? 'Unfavourited' : 'Favourited');\n              } catch (e) {}\n            }}\n          >\n            <Icon icon=\"heart\" />\n            <span>{favourited ? 'Unfavourite' : 'Favourite'}</span>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              try {\n                bookmarkStatus();\n                if (!isSizeLarge)\n                  showToast(bookmarked ? 'Unbookmarked' : 'Bookmarked');\n              } catch (e) {}\n            }}\n          >\n            <Icon icon=\"bookmark\" />\n            <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\n          </MenuItem>\n          <MenuDivider />\n        </>\n      )}\n      <MenuItem href={url} target=\"_blank\">\n        <Icon icon=\"external\" />\n        <span>Open link to post</span>\n      </MenuItem>\n      <MenuItem\n        onClick={() => {\n          // Copy url to clipboard\n          try {\n            navigator.clipboard.writeText(url);\n            showToast('Link copied');\n          } catch (e) {\n            console.error(e);\n            showToast('Unable to copy link');\n          }\n        }}\n      >\n        <Icon icon=\"link\" />\n        <span>Copy link to post</span>\n      </MenuItem>\n      {navigator?.share &&\n        navigator?.canShare?.({\n          url,\n        }) && (\n          <MenuItem\n            onClick={() => {\n              try {\n                navigator.share({\n                  url,\n                });\n              } catch (e) {\n                console.error(e);\n                alert(\"Sharing doesn't seem to work.\");\n              }\n            }}\n          >\n            <Icon icon=\"share\" />\n            <span>Share‚Ä¶</span>\n          </MenuItem>\n        )}\n      {isSelf && (\n        <>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              states.showCompose = {\n                editStatus: status,\n              };\n            }}\n          >\n            <Icon icon=\"pencil\" />\n            <span>Edit</span>\n          </MenuItem>\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <article\n      ref={statusRef}\n      tabindex=\"-1\"\n      class={`status ${\n        !withinContext && inReplyToAccount ? 'status-reply-to' : ''\n      } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\n        {\n          s: 'small',\n          m: 'medium',\n          l: 'large',\n        }[size]\n      }`}\n      onMouseEnter={debugHover}\n    >\n      {size !== 'l' && (\n        <div class=\"status-badge\">\n          {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\n          {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\n          {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\n          {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\n        </div>\n      )}\n      {size !== 's' && (\n        <a\n          href={accountURL}\n          tabindex=\"-1\"\n          // target=\"_blank\"\n          title={`@${acct}`}\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            states.showAccount = {\n              account: status.account,\n              instance,\n            };\n          }}\n        >\n          <Avatar url={avatarStatic} size=\"xxl\" />\n        </a>\n      )}\n      <div class=\"container\">\n        <div class=\"meta\">\n          {/* <span> */}\n          <NameText\n            account={status.account}\n            instance={instance}\n            showAvatar={size === 's'}\n            showAcct={isSizeLarge}\n          />\n          {/* {inReplyToAccount && !withinContext && size !== 's' && (\n              <>\n                {' '}\n                <span class=\"ib\">\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\n                  <NameText account={inReplyToAccount} instance={instance} short />\n                </span>\n              </>\n            )} */}\n          {/* </span> */}{' '}\n          {size !== 'l' &&\n            (url ? (\n              <Menu\n                portal={{\n                  target:\n                    document.querySelector('.status-deck') || document.body,\n                }}\n                align=\"end\"\n                offsetY={4}\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                boundingBoxPadding=\"8 8 8 8\"\n                menuButton={\n                  <Link\n                    to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      console.log('click', e);\n                    }}\n                    class=\"time\"\n                  >\n                    <Icon\n                      icon={visibilityIconsMap[visibility]}\n                      alt={visibilityText[visibility]}\n                      size=\"s\"\n                    />{' '}\n                    <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                  </Link>\n                }\n              >\n                {StatusMenuItems}\n              </Menu>\n            ) : (\n              <span class=\"time\">\n                <Icon\n                  icon={visibilityIconsMap[visibility]}\n                  alt={visibilityText[visibility]}\n                  size=\"s\"\n                />{' '}\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\n              </span>\n            ))}\n        </div>\n        {!withinContext && (\n          <>\n            {inReplyToAccountId === status.account?.id ||\n            !!snapStates.statusThreadNumber[sKey] ? (\n              <div class=\"status-thread-badge\">\n                <Icon icon=\"thread\" size=\"s\" />\n                Thread\n                {snapStates.statusThreadNumber[sKey]\n                  ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n                  : ''}\n              </div>\n            ) : (\n              !!inReplyToId &&\n              !!inReplyToAccount &&\n              (!!spoilerText ||\n                !mentions.find((mention) => {\n                  return mention.id === inReplyToAccountId;\n                })) && (\n                <div class=\"status-reply-badge\">\n                  <Icon icon=\"reply\" />{' '}\n                  <NameText\n                    account={inReplyToAccount}\n                    instance={instance}\n                    short\n                  />\n                </div>\n              )\n            )}\n          </>\n        )}\n        <div\n          class={`content-container ${\n            spoilerText || sensitive ? 'has-spoiler' : ''\n          } ${showSpoiler ? 'show-spoiler' : ''}`}\n          data-content-text-weight={contentTextWeight ? textWeight() : null}\n          style={\n            (isSizeLarge || contentTextWeight) && {\n              '--content-text-weight': textWeight(),\n            }\n          }\n        >\n          {!!spoilerText && (\n            <>\n              <div\n                class=\"content\"\n                lang={language}\n                ref={spoilerContentRef}\n                data-read-more={readMoreText}\n              >\n                <p>{spoilerText}</p>\n              </div>\n              <button\n                class={`light spoiler ${showSpoiler ? 'spoiling' : ''}`}\n                type=\"button\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  if (showSpoiler) {\n                    delete states.spoilers[id];\n                  } else {\n                    states.spoilers[id] = true;\n                  }\n                }}\n              >\n                <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\n                {showSpoiler ? 'Show less' : 'Show more'}\n              </button>\n            </>\n          )}\n          <div\n            class=\"content\"\n            lang={language}\n            ref={contentRef}\n            data-read-more={readMoreText}\n            onClick={handleContentLinks({ mentions, instance })}\n            dangerouslySetInnerHTML={{\n              __html: enhanceContent(content, {\n                emojis,\n                postEnhanceDOM: (dom) => {\n                  // Remove target=\"_blank\" from links\n                  dom\n                    .querySelectorAll('a.u-url[target=\"_blank\"]')\n                    .forEach((a) => {\n                      if (!/http/i.test(a.innerText.trim())) {\n                        a.removeAttribute('target');\n                      }\n                    });\n                  // Unfurl Mastodon links\n                  dom\n                    .querySelectorAll(\n                      'a[href]:not(.u-url):not(.mention):not(.hashtag)',\n                    )\n                    .forEach((a) => {\n                      if (isMastodonLinkMaybe(a.href)) {\n                        unfurlMastodonLink(currentInstance, a.href).then(() => {\n                          a.removeAttribute('target');\n                        });\n                      }\n                    });\n                },\n              }),\n            }}\n          />\n          {!!poll && (\n            <Poll\n              lang={language}\n              poll={poll}\n              readOnly={readOnly || !sameInstance || !authenticated}\n              onUpdate={(newPoll) => {\n                states.statuses[sKey].poll = newPoll;\n              }}\n              refresh={() => {\n                return masto.v1.polls\n                  .fetch(poll.id)\n                  .then((pollResponse) => {\n                    states.statuses[sKey].poll = pollResponse;\n                  })\n                  .catch((e) => {}); // Silently fail\n              }}\n              votePoll={(choices) => {\n                return masto.v1.polls\n                  .vote(poll.id, {\n                    choices,\n                  })\n                  .then((pollResponse) => {\n                    states.statuses[sKey].poll = pollResponse;\n                  })\n                  .catch((e) => {}); // Silently fail\n              }}\n            />\n          )}\n          {!spoilerText && sensitive && !!mediaAttachments.length && (\n            <button\n              class={`plain spoiler ${showSpoiler ? 'spoiling' : ''}`}\n              type=\"button\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                if (showSpoiler) {\n                  delete states.spoilers[id];\n                } else {\n                  states.spoilers[id] = true;\n                }\n              }}\n            >\n              <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} /> Sensitive\n              content\n            </button>\n          )}\n          {!!mediaAttachments.length && (\n            <div\n              class={`media-container media-eq${mediaAttachments.length} ${\n                mediaAttachments.length > 2 ? 'media-gt2' : ''\n              } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\n            >\n              {mediaAttachments\n                .slice(0, isSizeLarge ? undefined : 4)\n                .map((media, i) => (\n                  <Media\n                    key={media.id}\n                    media={media}\n                    autoAnimate={isSizeLarge}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      states.showMediaModal = {\n                        mediaAttachments,\n                        index: i,\n                        instance,\n                        statusID: readOnly ? null : id,\n                      };\n                    }}\n                  />\n                ))}\n            </div>\n          )}\n          {!!card &&\n            !sensitive &&\n            !spoilerText &&\n            !poll &&\n            !mediaAttachments.length && (\n              <Card card={card} instance={currentInstance} />\n            )}\n        </div>\n        {isSizeLarge && (\n          <>\n            <div class=\"extra-meta\">\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />{' '}\n              <a href={url} target=\"_blank\">\n                <time class=\"created\" datetime={createdAtDate.toISOString()}>\n                  {createdDateText}\n                </time>\n              </a>\n              {editedAt && (\n                <>\n                  {' '}\n                  &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\n                  <time\n                    class=\"edited\"\n                    datetime={editedAtDate.toISOString()}\n                    onClick={() => {\n                      setShowEdited(id);\n                    }}\n                  >\n                    {editedDateText}\n                  </time>\n                </>\n              )}\n            </div>\n            <div class=\"actions\">\n              <div class=\"action has-count\">\n                <StatusButton\n                  title=\"Reply\"\n                  alt=\"Comments\"\n                  class=\"reply-button\"\n                  icon=\"comment\"\n                  count={repliesCount}\n                  onClick={replyStatus}\n                />\n              </div>\n              {canBoost && (\n                <div class=\"action has-count\">\n                  <StatusButton\n                    checked={reblogged}\n                    title={['Boost', 'Unboost']}\n                    alt={['Boost', 'Boosted']}\n                    class=\"reblog-button\"\n                    icon=\"rocket\"\n                    count={reblogsCount}\n                    onClick={boostStatus}\n                  />\n                </div>\n              )}\n              <div class=\"action has-count\">\n                <StatusButton\n                  checked={favourited}\n                  title={['Favourite', 'Unfavourite']}\n                  alt={['Favourite', 'Favourited']}\n                  class=\"favourite-button\"\n                  icon=\"heart\"\n                  count={favouritesCount}\n                  onClick={favouriteStatus}\n                />\n              </div>\n              <div class=\"action\">\n                <StatusButton\n                  checked={bookmarked}\n                  title={['Bookmark', 'Unbookmark']}\n                  alt={['Bookmark', 'Bookmarked']}\n                  class=\"bookmark-button\"\n                  icon=\"bookmark\"\n                  onClick={bookmarkStatus}\n                />\n              </div>\n              <Menu\n                portal={{\n                  target:\n                    document.querySelector('.status-deck') || document.body,\n                }}\n                align=\"end\"\n                offsetY={4}\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                boundingBoxPadding=\"8 8 8 8\"\n                menuButton={\n                  <div class=\"action\">\n                    <button\n                      type=\"button\"\n                      title=\"More\"\n                      class=\"plain more-button\"\n                    >\n                      <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                    </button>\n                  </div>\n                }\n              >\n                {StatusMenuItems}\n              </Menu>\n            </div>\n          </>\n        )}\n      </div>\n      {!!showEdited && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEdited(false);\n              statusRef.current?.focus();\n            }\n          }}\n        >\n          <EditedAtModal\n            statusID={showEdited}\n            instance={instance}\n            fetchStatusHistory={() => {\n              return masto.v1.statuses.listHistory(showEdited);\n            }}\n            onClose={() => {\n              setShowEdited(false);\n              statusRef.current?.focus();\n            }}\n          />\n        </Modal>\n      )}\n    </article>\n  );\n}\n\nfunction Card({ card, instance }) {\n  const {\n    blurhash,\n    title,\n    description,\n    html,\n    providerName,\n    authorName,\n    width,\n    height,\n    image,\n    url,\n    type,\n    embedUrl,\n  } = card;\n\n  /* type\n  link = Link OEmbed\n  photo = Photo OEmbed\n  video = Video OEmbed\n  rich = iframe OEmbed. Not currently accepted, so won‚Äôt show up in practice.\n  */\n\n  const hasText = title || providerName || authorName;\n  const isLandscape = width / height >= 1.2;\n  const size = isLandscape ? 'large' : '';\n\n  const [cardStatusURL, setCardStatusURL] = useState(null);\n  // const [cardStatusID, setCardStatusID] = useState(null);\n  useEffect(() => {\n    if (hasText && image && isMastodonLinkMaybe(url)) {\n      unfurlMastodonLink(instance, url).then((result) => {\n        if (!result) return;\n        const { id, url } = result;\n        setCardStatusURL('#' + url);\n\n        // NOTE: This is for quote post\n        // (async () => {\n        //   const { masto } = api({ instance });\n        //   const status = await masto.v1.statuses.fetch(id);\n        //   saveStatus(status, instance);\n        //   setCardStatusID(id);\n        // })();\n      });\n    }\n  }, [hasText, image]);\n\n  // if (cardStatusID) {\n  //   return (\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\n  //   );\n  // }\n\n  if (hasText && image) {\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link ${size}`}\n      >\n        <div class=\"card-image\">\n          <img\n            src={image}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n            alt=\"\"\n            onError={(e) => {\n              try {\n                e.target.style.display = 'none';\n              } catch (e) {}\n            }}\n          />\n        </div>\n        <div class=\"meta-container\">\n          <p class=\"meta domain\">{domain}</p>\n          <p class=\"title\">{title}</p>\n          <p class=\"meta\">{description || providerName || authorName}</p>\n        </div>\n      </a>\n    );\n  } else if (type === 'photo') {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"nofollow noopener noreferrer\"\n        class=\"card photo\"\n      >\n        <img\n          src={embedUrl}\n          width={width}\n          height={height}\n          alt={title || description}\n          loading=\"lazy\"\n          style={{\n            height: 'auto',\n            aspectRatio: `${width}/${height}`,\n          }}\n        />\n      </a>\n    );\n  } else if (type === 'video') {\n    return (\n      <div\n        class=\"card video\"\n        style={{\n          aspectRatio: `${width}/${height}`,\n        }}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    );\n  }\n}\n\nfunction Poll({\n  poll,\n  lang,\n  readOnly,\n  refresh = () => {},\n  votePoll = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n\n  const {\n    expired,\n    expiresAt,\n    id,\n    multiple,\n    options,\n    ownVotes,\n    voted,\n    votersCount,\n    votesCount,\n  } = poll;\n\n  const expiresAtDate = !!expiresAt && new Date(expiresAt);\n\n  // Update poll at point of expiry\n  useEffect(() => {\n    let timeout;\n    if (!expired && expiresAtDate) {\n      const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\n      if (ms > 0) {\n        timeout = setTimeout(() => {\n          setUIState('loading');\n          (async () => {\n            await refresh();\n            setUIState('default');\n          })();\n        }, ms);\n      }\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [expired, expiresAtDate]);\n\n  const pollVotesCount = votersCount || votesCount;\n  let roundPrecision = 0;\n  if (pollVotesCount <= 1000) {\n    roundPrecision = 0;\n  } else if (pollVotesCount <= 10000) {\n    roundPrecision = 1;\n  } else if (pollVotesCount <= 100000) {\n    roundPrecision = 2;\n  }\n\n  return (\n    <div\n      lang={lang}\n      class={`poll ${readOnly ? 'read-only' : ''} ${\n        uiState === 'loading' ? 'loading' : ''\n      }`}\n    >\n      {voted || expired ? (\n        options.map((option, i) => {\n          const { title, votesCount: optionVotesCount } = option;\n          const percentage = pollVotesCount\n            ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\n                roundPrecision,\n              )\n            : 0;\n          // check if current poll choice is the leading one\n          const isLeading =\n            optionVotesCount > 0 &&\n            optionVotesCount === Math.max(...options.map((o) => o.votesCount));\n          return (\n            <div\n              key={`${i}-${title}-${optionVotesCount}`}\n              class={`poll-option ${isLeading ? 'poll-option-leading' : ''}`}\n              style={{\n                '--percentage': `${percentage}%`,\n              }}\n            >\n              <div class=\"poll-option-title\">\n                {title}\n                {voted && ownVotes.includes(i) && (\n                  <>\n                    {' '}\n                    <Icon icon=\"check-circle\" />\n                  </>\n                )}\n              </div>\n              <div\n                class=\"poll-option-votes\"\n                title={`${optionVotesCount} vote${\n                  optionVotesCount === 1 ? '' : 's'\n                }`}\n              >\n                {percentage}%\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const form = e.target;\n            const formData = new FormData(form);\n            const choices = [];\n            formData.forEach((value, key) => {\n              if (key === 'poll') {\n                choices.push(value);\n              }\n            });\n            if (!choices.length) return;\n            setUIState('loading');\n            await votePoll(choices);\n            setUIState('default');\n          }}\n        >\n          {options.map((option, i) => {\n            const { title } = option;\n            return (\n              <div class=\"poll-option\">\n                <label class=\"poll-label\">\n                  <input\n                    type={multiple ? 'checkbox' : 'radio'}\n                    name=\"poll\"\n                    value={i}\n                    disabled={uiState === 'loading'}\n                    readOnly={readOnly}\n                  />\n                  <span class=\"poll-option-title\">{title}</span>\n                </label>\n              </div>\n            );\n          })}\n          {!readOnly && (\n            <button\n              class=\"poll-vote-button\"\n              type=\"submit\"\n              disabled={uiState === 'loading'}\n            >\n              Vote\n            </button>\n          )}\n        </form>\n      )}\n      {!readOnly && (\n        <p class=\"poll-meta\">\n          {!expired && (\n            <>\n              <button\n                type=\"button\"\n                class=\"textual\"\n                disabled={uiState === 'loading'}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setUIState('loading');\n                  (async () => {\n                    await refresh();\n                    setUIState('default');\n                  })();\n                }}\n              >\n                Refresh\n              </button>{' '}\n              &bull;{' '}\n            </>\n          )}\n          <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\n          {votesCount === 1 ? '' : 's'}\n          {!!votersCount && votersCount !== votesCount && (\n            <>\n              {' '}\n              &bull;{' '}\n              <span title={votersCount}>{shortenNumber(votersCount)}</span>{' '}\n              voter\n              {votersCount === 1 ? '' : 's'}\n            </>\n          )}{' '}\n          &bull; {expired ? 'Ended' : 'Ending'}{' '}\n          {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\n        </p>\n      )}\n    </div>\n  );\n}\n\nfunction EditedAtModal({\n  statusID,\n  instance,\n  fetchStatusHistory = () => {},\n  onClose = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const [editHistory, setEditHistory] = useState([]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const editHistory = await fetchStatusHistory();\n        console.log(editHistory);\n        setEditHistory(editHistory);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <div id=\"edit-history\" class=\"sheet\">\n      <header>\n        {/* <button type=\"button\" class=\"close-button plain large\" onClick={onClose}>\n        <Icon icon=\"x\" alt=\"Close\" />\n      </button> */}\n        <h2>Edit History</h2>\n        {uiState === 'error' && <p>Failed to load history</p>}\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> Loading&hellip;\n          </p>\n        )}\n      </header>\n      <main tabIndex=\"-1\">\n        {editHistory.length > 0 && (\n          <ol>\n            {editHistory.map((status) => {\n              const { createdAt } = status;\n              const createdAtDate = new Date(createdAt);\n              return (\n                <li key={createdAt} class=\"history-item\">\n                  <h3>\n                    <time>\n                      {Intl.DateTimeFormat('en', {\n                        // Show year if not current year\n                        year:\n                          createdAtDate.getFullYear() === currentYear\n                            ? undefined\n                            : 'numeric',\n                        month: 'short',\n                        day: 'numeric',\n                        weekday: 'short',\n                        hour: 'numeric',\n                        minute: '2-digit',\n                        second: '2-digit',\n                      }).format(createdAtDate)}\n                    </time>\n                  </h3>\n                  <Status\n                    status={status}\n                    instance={instance}\n                    size=\"s\"\n                    withinContext\n                    readOnly\n                  />\n                </li>\n              );\n            })}\n          </ol>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction StatusButton({\n  checked,\n  count,\n  class: className,\n  title,\n  alt,\n  icon,\n  onClick,\n  ...props\n}) {\n  if (typeof title === 'string') {\n    title = [title, title];\n  }\n  if (typeof alt === 'string') {\n    alt = [alt, alt];\n  }\n\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\n\n  useEffect(() => {\n    if (checked) {\n      setButtonTitle(title[1] || '');\n      setIconAlt(alt[1] || '');\n    } else {\n      setButtonTitle(title[0] || '');\n      setIconAlt(alt[0] || '');\n    }\n  }, [checked, title, alt]);\n\n  return (\n    <button\n      type=\"button\"\n      title={buttonTitle}\n      class={`plain ${className} ${checked ? 'checked' : ''}`}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n      {...props}\n    >\n      <Icon icon={icon} size=\"l\" alt={iconAlt} />\n      {!!count && (\n        <>\n          {' '}\n          <small title={count}>{shortenNumber(count)}</small>\n        </>\n      )}\n    </button>\n  );\n}\n\nexport function formatDuration(time) {\n  if (!time) return;\n  let hours = Math.floor(time / 3600);\n  let minutes = Math.floor((time % 3600) / 60);\n  let seconds = Math.round(time % 60);\n\n  if (hours === 0) {\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  } else {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\n      .toString()\n      .padStart(2, '0')}`;\n  }\n}\n\nfunction isMastodonLinkMaybe(url) {\n  return /^https:\\/\\/.*\\/\\d+$/i.test(url);\n}\n\nconst denylistDomains = /(twitter|github)\\.com/i;\nconst failedUnfurls = {};\n\nfunction _unfurlMastodonLink(instance, url) {\n  if (denylistDomains.test(url)) {\n    return;\n  }\n  if (failedUnfurls[url]) {\n    return;\n  }\n  const instanceRegex = new RegExp(instance + '/');\n  if (instanceRegex.test(states.unfurledLinks[url]?.url)) {\n    return Promise.resolve(states.unfurledLinks[url]);\n  }\n  console.debug('ü¶¶ Unfurling URL', url);\n  const { masto } = api({ instance });\n  return masto.v2\n    .search({\n      q: url,\n      type: 'statuses',\n      resolve: true,\n      limit: 1,\n    })\n    .then((results) => {\n      if (results.statuses.length > 0) {\n        const status = results.statuses[0];\n        const { id } = status;\n        const statusURL = `/${instance}/s/${id}`;\n        const result = {\n          id,\n          url: statusURL,\n        };\n        console.debug('ü¶¶ Unfurled URL', url, id, statusURL);\n        states.unfurledLinks[url] = result;\n        return result;\n      } else {\n        failedUnfurls[url] = true;\n        throw new Error('No results');\n      }\n    })\n    .catch((e) => {\n      failedUnfurls[url] = true;\n      // console.warn(e);\n      // Silently fail\n    });\n}\n\nconst unfurlMastodonLink = throttle(_unfurlMastodonLink);\n\nexport default memo(Status);\n","import './compose.css';\n\nimport '@github/text-expander-element';\nimport equal from 'fast-deep-equal';\nimport { forwardRef } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport stringLength from 'string-length';\nimport { uid } from 'uid/single';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport supportedLanguages from '../data/status-supported-languages';\nimport urlRegex from '../data/url-regex';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport openCompose from '../utils/open-compose';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getCurrentAccount,\n  getCurrentAccountNS,\n  getCurrentInstance,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useInterval from '../utils/useInterval';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Modal from './modal';\nimport Status from './status';\n\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\n  const [code, common, native] = l;\n  acc[code] = {\n    common,\n    native,\n  };\n  return acc;\n}, {});\n\n/* NOTES:\n  - Max character limit includes BOTH status text and Content Warning text\n*/\n\nconst expiryOptions = {\n  '5 minutes': 5 * 60,\n  '30 minutes': 30 * 60,\n  '1 hour': 60 * 60,\n  '6 hours': 6 * 60 * 60,\n  '12 hours': 12 * 60 * 60,\n  '1 day': 24 * 60 * 60,\n  '3 days': 3 * 24 * 60 * 60,\n  '7 days': 7 * 24 * 60 * 60,\n};\nconst expirySeconds = Object.values(expiryOptions);\nconst oneDay = 24 * 60 * 60;\n\nconst expiresInFromExpiresAt = (expiresAt) => {\n  if (!expiresAt) return oneDay;\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\n  return expirySeconds.find((s) => s >= delta) || oneDay;\n};\n\nconst menu = document.createElement('ul');\nmenu.role = 'listbox';\nmenu.className = 'text-expander-menu';\n\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\nconst windowMargin = 16;\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const { left, width } = entry.boundingClientRect;\n      const { innerWidth } = window;\n      if (left + width > innerWidth) {\n        menu.style.left = innerWidth - width - windowMargin + 'px';\n      }\n    }\n  });\n});\nobserver.observe(menu);\n\nconst DEFAULT_LANG = 'en';\n\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\nfunction countableText(inputText) {\n  return inputText\n    .replace(urlRegexObj, urlPlaceholder)\n    .replace(usernameRegex, '$1@$3');\n}\n\nfunction Compose({\n  onClose,\n  replyToStatus,\n  editStatus,\n  draftStatus,\n  standalone,\n  hasOpener,\n}) {\n  console.warn('RENDER COMPOSER');\n  const { masto, instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const UID = useRef(draftStatus?.uid || uid());\n  console.log('Compose UID', UID.current);\n\n  const currentAccount = getCurrentAccount();\n  const currentAccountInfo = currentAccount.info;\n\n  const { configuration } = getCurrentInstance();\n  console.log('‚öôÔ∏è Configuration', configuration);\n\n  const {\n    statuses: { maxCharacters, maxMediaAttachments, charactersReservedPerUrl },\n    mediaAttachments: {\n      supportedMimeTypes,\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    },\n    polls: { maxOptions, maxCharactersPerOption, maxExpiration, minExpiration },\n  } = configuration;\n\n  const textareaRef = useRef();\n  const spoilerTextRef = useRef();\n  const [visibility, setVisibility] = useState('public');\n  const [sensitive, setSensitive] = useState(false);\n  const [language, setLanguage] = useState(\n    store.session.get('currentLanguage') || DEFAULT_LANG,\n  );\n  const [mediaAttachments, setMediaAttachments] = useState([]);\n  const [poll, setPoll] = useState(null);\n\n  const prefs = store.account.get('preferences') || {};\n\n  const oninputTextarea = () => {\n    if (!textareaRef.current) return;\n    textareaRef.current.dispatchEvent(new Event('input'));\n  };\n  const focusTextarea = () => {\n    setTimeout(() => {\n      console.debug('FOCUS textarea');\n      textareaRef.current?.focus();\n    }, 300);\n  };\n\n  useEffect(() => {\n    if (replyToStatus) {\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\n      if (spoilerText && spoilerTextRef.current) {\n        spoilerTextRef.current.value = spoilerText;\n      }\n      const mentions = new Set([\n        replyToStatus.account.acct,\n        ...replyToStatus.mentions.map((m) => m.acct),\n      ]);\n      const allMentions = [...mentions].filter(\n        (m) => m !== currentAccountInfo.acct,\n      );\n      if (allMentions.length > 0) {\n        textareaRef.current.value = `${allMentions\n          .map((m) => `@${m}`)\n          .join(' ')} `;\n        oninputTextarea();\n      }\n      focusTextarea();\n      setVisibility(visibility);\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      setSensitive(sensitive);\n    } else if (editStatus) {\n      const { visibility, language, sensitive, poll, mediaAttachments } =\n        editStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      setUIState('loading');\n      (async () => {\n        try {\n          const statusSource = await masto.v1.statuses.fetchSource(\n            editStatus.id,\n          );\n          console.log({ statusSource });\n          const { text, spoilerText } = statusSource;\n          textareaRef.current.value = text;\n          textareaRef.current.dataset.source = text;\n          oninputTextarea();\n          focusTextarea();\n          spoilerTextRef.current.value = spoilerText;\n          setVisibility(visibility);\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\n          setSensitive(sensitive);\n          setPoll(composablePoll);\n          setMediaAttachments(mediaAttachments);\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          alert(e?.reason || e);\n          setUIState('error');\n        }\n      })();\n    } else {\n      focusTextarea();\n      console.log('Apply prefs', prefs);\n      if (prefs.postingDefaultVisibility) {\n        setVisibility(prefs.postingDefaultVisibility);\n      }\n      if (prefs.postingDefaultLanguage) {\n        setLanguage(prefs.postingDefaultLanguage);\n      }\n      if (prefs.postingDefaultSensitive) {\n        setSensitive(prefs.postingDefaultSensitive);\n      }\n    }\n    if (draftStatus) {\n      const {\n        status,\n        spoilerText,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      } = draftStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      textareaRef.current.value = status;\n      oninputTextarea();\n      focusTextarea();\n      spoilerTextRef.current.value = spoilerText;\n      setVisibility(visibility);\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      setSensitive(sensitive);\n      setPoll(composablePoll);\n      setMediaAttachments(mediaAttachments);\n    }\n  }, [draftStatus, editStatus, replyToStatus]);\n\n  const formRef = useRef();\n\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\n  const canClose = () => {\n    const { value, dataset } = textareaRef.current;\n\n    // check if loading\n    if (uiState === 'loading') {\n      console.log('canClose', { uiState });\n      return false;\n    }\n\n    // check for status and media attachments\n    const hasMediaAttachments = mediaAttachments.length > 0;\n    if (!value && !hasMediaAttachments) {\n      console.log('canClose', { value, mediaAttachments });\n      return true;\n    }\n\n    // check if all media attachments have IDs\n    const hasIDMediaAttachments =\n      mediaAttachments.length > 0 &&\n      mediaAttachments.every((media) => media.id);\n    if (hasIDMediaAttachments) {\n      console.log('canClose', { hasIDMediaAttachments });\n      return true;\n    }\n\n    // check if status contains only \"@acct\", if replying\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\n    const hasOnlyAcct =\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\n    if (!isSelf && hasOnlyAcct) {\n      console.log('canClose', { isSelf, hasOnlyAcct });\n      return true;\n    }\n\n    // check if status is same with source\n    const sameWithSource = value === dataset?.source;\n    if (sameWithSource) {\n      console.log('canClose', { sameWithSource });\n      return true;\n    }\n\n    console.log('canClose', {\n      value,\n      hasMediaAttachments,\n      hasIDMediaAttachments,\n      poll,\n      isSelf,\n      hasOnlyAcct,\n      sameWithSource,\n      uiState,\n    });\n\n    return false;\n  };\n\n  const confirmClose = () => {\n    if (!canClose()) {\n      const yes = confirm(beforeUnloadCopy);\n      return yes;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // Show warning if user tries to close window with unsaved changes\n    const handleBeforeUnload = (e) => {\n      if (!canClose()) {\n        e.preventDefault();\n        e.returnValue = beforeUnloadCopy;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\n        capture: true,\n      });\n  }, []);\n\n  const getCharCount = () => {\n    const { value } = textareaRef.current;\n    const { value: spoilerText } = spoilerTextRef.current;\n    return stringLength(countableText(value)) + stringLength(spoilerText);\n  };\n  const updateCharCount = () => {\n    const count = getCharCount();\n    states.composerCharacterCount = count;\n  };\n  useEffect(updateCharCount, []);\n\n  useHotkeys(\n    'esc',\n    () => {\n      if (!standalone && confirmClose()) {\n        onClose();\n      }\n    },\n    {\n      enableOnFormTags: true,\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\n      keyup: true,\n    },\n  );\n\n  const prevBackgroundDraft = useRef({});\n  const draftKey = () => {\n    const ns = getCurrentAccountNS();\n    return `${ns}#${UID.current}`;\n  };\n  const saveUnsavedDraft = () => {\n    // Not enabling this for editing status\n    // I don't think this warrant a draft mode for a status that's already posted\n    // Maybe it could be a big edit change but it should be rare\n    if (editStatus) return;\n    const key = draftKey();\n    const backgroundDraft = {\n      key,\n      replyTo: replyToStatus\n        ? {\n            /* Smaller payload of replyToStatus. Reasons:\n              - No point storing whole thing\n              - Could have media attachments\n              - Could be deleted/edited later\n            */\n            id: replyToStatus.id,\n            account: {\n              id: replyToStatus.account.id,\n              username: replyToStatus.account.username,\n              acct: replyToStatus.account.acct,\n            },\n          }\n        : null,\n      draftStatus: {\n        uid: UID.current,\n        status: textareaRef.current.value,\n        spoilerText: spoilerTextRef.current.value,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      },\n    };\n    if (!equal(backgroundDraft, prevBackgroundDraft.current) && !canClose()) {\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\n      db.drafts\n        .set(key, {\n          ...backgroundDraft,\n          state: 'unsaved',\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          console.debug('DRAFT saved', key, backgroundDraft);\n        })\n        .catch((e) => {\n          console.error('DRAFT failed', key, e);\n        });\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\n    }\n  };\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\n  useEffect(() => {\n    saveUnsavedDraft();\n    // If unmounted, means user discarded the draft\n    // Also means pop-out üôà, but it's okay because the pop-out will persist the ID and re-create the draft\n    return () => {\n      db.drafts.del(draftKey());\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleItems = (e) => {\n      if (mediaAttachments.length >= maxMediaAttachments) {\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\n        return;\n      }\n      const { items } = e.clipboardData || e.dataTransfer;\n      const files = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file && supportedMimeTypes.includes(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      console.log({ files });\n      if (files.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\n        const max = maxMediaAttachments - mediaAttachments.length;\n        const allowedFiles = files.slice(0, max);\n        if (allowedFiles.length <= 0) {\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\n          return;\n        }\n        const mediaFiles = allowedFiles.map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null,\n          description: null,\n        }));\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\n      }\n    };\n    window.addEventListener('paste', handleItems);\n    const handleDragover = (e) => {\n      // Prevent default if there's files\n      if (e.dataTransfer.items.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    window.addEventListener('dragover', handleDragover);\n    window.addEventListener('drop', handleItems);\n    return () => {\n      window.removeEventListener('paste', handleItems);\n      window.removeEventListener('dragover', handleDragover);\n      window.removeEventListener('drop', handleItems);\n    };\n  }, [mediaAttachments]);\n\n  return (\n    <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\n      <div class=\"compose-top\">\n        {currentAccountInfo?.avatarStatic && (\n          <Avatar\n            url={currentAccountInfo.avatarStatic}\n            size=\"l\"\n            alt={currentAccountInfo.username}\n          />\n        )}\n        {!standalone ? (\n          <span>\n            <button\n              type=\"button\"\n              class=\"light pop-button\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                // const containNonIDMediaAttachments =\n                //   mediaAttachments.length > 0 &&\n                //   mediaAttachments.some((media) => !media.id);\n                // if (containNonIDMediaAttachments) {\n                //   const yes = confirm(\n                //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                //   );\n                //   if (!yes) {\n                //     return;\n                //   }\n                // }\n\n                // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                //   (media) => media.id,\n                // );\n\n                const newWin = openCompose({\n                  editStatus,\n                  replyToStatus,\n                  draftStatus: {\n                    uid: UID.current,\n                    status: textareaRef.current.value,\n                    spoilerText: spoilerTextRef.current.value,\n                    visibility,\n                    language,\n                    sensitive,\n                    poll,\n                    mediaAttachments,\n                  },\n                });\n\n                if (!newWin) {\n                  alert('Looks like your browser is blocking popups.');\n                  return;\n                }\n\n                onClose();\n              }}\n            >\n              <Icon icon=\"popout\" alt=\"Pop out\" />\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"light close-button\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                if (confirmClose()) {\n                  onClose();\n                }\n              }}\n            >\n              <Icon icon=\"x\" />\n            </button>\n          </span>\n        ) : (\n          hasOpener && (\n            <button\n              type=\"button\"\n              class=\"light pop-button\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                // const containNonIDMediaAttachments =\n                //   mediaAttachments.length > 0 &&\n                //   mediaAttachments.some((media) => !media.id);\n                // if (containNonIDMediaAttachments) {\n                //   const yes = confirm(\n                //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                //   );\n                //   if (!yes) {\n                //     return;\n                //   }\n                // }\n\n                if (!window.opener) {\n                  alert('Looks like you closed the parent window.');\n                  return;\n                }\n\n                if (window.opener.__STATES__.showCompose) {\n                  const yes = confirm(\n                    'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\n                  );\n                  if (!yes) return;\n                }\n\n                // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                //   (media) => media.id,\n                // );\n\n                onClose({\n                  fn: () => {\n                    const passData = {\n                      editStatus,\n                      replyToStatus,\n                      draftStatus: {\n                        uid: UID.current,\n                        status: textareaRef.current.value,\n                        spoilerText: spoilerTextRef.current.value,\n                        visibility,\n                        language,\n                        sensitive,\n                        poll,\n                        mediaAttachments,\n                      },\n                    };\n                    window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\n                    window.opener.__STATES__.showCompose = true;\n                  },\n                });\n              }}\n            >\n              <Icon icon=\"popin\" alt=\"Pop in\" />\n            </button>\n          )\n        )}\n      </div>\n      {!!replyToStatus && (\n        <div class=\"status-preview\">\n          <Status status={replyToStatus} size=\"s\" />\n          <div class=\"status-preview-legend reply-to\">\n            Replying to @\n            {replyToStatus.account.acct || replyToStatus.account.username}\n            &rsquo;s status\n          </div>\n        </div>\n      )}\n      {!!editStatus && (\n        <div class=\"status-preview\">\n          <Status status={editStatus} size=\"s\" />\n          <div class=\"status-preview-legend\">Editing source status</div>\n        </div>\n      )}\n      <form\n        ref={formRef}\n        style={{\n          pointerEvents: uiState === 'loading' ? 'none' : 'auto',\n          opacity: uiState === 'loading' ? 0.5 : 1,\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n            formRef.current.dispatchEvent(\n              new Event('submit', { cancelable: true }),\n            );\n          }\n        }}\n        onSubmit={(e) => {\n          e.preventDefault();\n\n          const formData = new FormData(e.target);\n          const entries = Object.fromEntries(formData.entries());\n          console.log('ENTRIES', entries);\n          let { status, visibility, sensitive, spoilerText } = entries;\n\n          // Pre-cleanup\n          sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\n\n          // Validation\n          /* Let the backend validate this\n          if (stringLength(status) > maxCharacters) {\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\n            return;\n          }\n          if (\n            sensitive &&\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\n          ) {\n            alert(\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\n            );\n            return;\n          }\n          */\n          if (poll) {\n            if (poll.options.length < 2) {\n              alert('Poll must have at least 2 options');\n              return;\n            }\n            if (poll.options.some((option) => option === '')) {\n              alert('Some poll choices are empty');\n              return;\n            }\n          }\n          // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\n\n          // Post-cleanup\n          spoilerText = (sensitive && spoilerText) || undefined;\n          status = status === '' ? undefined : status;\n\n          setUIState('loading');\n          (async () => {\n            try {\n              console.log('MEDIA ATTACHMENTS', mediaAttachments);\n              if (mediaAttachments.length > 0) {\n                // Upload media attachments first\n                const mediaPromises = mediaAttachments.map((attachment) => {\n                  const { file, description, id } = attachment;\n                  console.log('UPLOADING', attachment);\n                  if (id) {\n                    // If already uploaded\n                    return attachment;\n                  } else {\n                    const params = removeNullUndefined({\n                      file,\n                      description,\n                    });\n                    return masto.v2.mediaAttachments\n                      .create(params)\n                      .then((res) => {\n                        if (res.id) {\n                          attachment.id = res.id;\n                        }\n                        return res;\n                      });\n                  }\n                });\n                const results = await Promise.allSettled(mediaPromises);\n\n                // If any failed, return\n                if (\n                  results.some((result) => {\n                    return result.status === 'rejected' || !result.value?.id;\n                  })\n                ) {\n                  setUIState('error');\n                  // Alert all the reasons\n                  results.forEach((result) => {\n                    if (result.status === 'rejected') {\n                      console.error(result);\n                      alert(result.reason || `Attachment #${i} failed`);\n                    }\n                  });\n                  return;\n                }\n\n                console.log({ results, mediaAttachments });\n              }\n\n              /* NOTE:\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\n              */\n              let params = {\n                status,\n                // spoilerText,\n                spoiler_text: spoilerText,\n                language,\n                sensitive,\n                poll,\n                // mediaIds: mediaAttachments.map((attachment) => attachment.id),\n                media_ids: mediaAttachments.map((attachment) => attachment.id),\n              };\n              if (editStatus && supports('@mastodon/edit-media-attributes')) {\n                params.media_attributes = mediaAttachments.map((attachment) => {\n                  return {\n                    id: attachment.id,\n                    description: attachment.description,\n                    // focus\n                    // thumbnail\n                  };\n                });\n              } else if (!editStatus) {\n                params.visibility = visibility;\n                // params.inReplyToId = replyToStatus?.id || undefined;\n                params.in_reply_to_id = replyToStatus?.id || undefined;\n              }\n              params = removeNullUndefined(params);\n              console.log('POST', params);\n\n              let newStatus;\n              if (editStatus) {\n                newStatus = await masto.v1.statuses.update(\n                  editStatus.id,\n                  params,\n                );\n                saveStatus(newStatus, instance, {\n                  skipThreading: true,\n                });\n              } else {\n                newStatus = await masto.v1.statuses.create(params, {\n                  idempotencyKey: UID.current,\n                });\n              }\n              setUIState('default');\n\n              // Close\n              onClose({\n                newStatus,\n                instance,\n              });\n            } catch (e) {\n              console.error(e);\n              alert(e?.reason || e);\n              setUIState('error');\n            }\n          })();\n        }}\n      >\n        <div class=\"toolbar stretch\">\n          <input\n            ref={spoilerTextRef}\n            type=\"text\"\n            name=\"spoilerText\"\n            placeholder=\"Content warning\"\n            disabled={uiState === 'loading'}\n            class=\"spoiler-text-field\"\n            lang={language}\n            spellCheck=\"true\"\n            style={{\n              opacity: sensitive ? 1 : 0,\n              pointerEvents: sensitive ? 'auto' : 'none',\n            }}\n            onInput={() => {\n              updateCharCount();\n            }}\n          />\n          <label\n            class=\"toolbar-button\"\n            title=\"Content warning or sensitive media\"\n          >\n            <input\n              name=\"sensitive\"\n              type=\"checkbox\"\n              checked={sensitive}\n              disabled={uiState === 'loading'}\n              onChange={(e) => {\n                const sensitive = e.target.checked;\n                setSensitive(sensitive);\n                if (sensitive) {\n                  spoilerTextRef.current?.focus();\n                } else {\n                  textareaRef.current?.focus();\n                }\n              }}\n            />\n            <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n          </label>{' '}\n          <label\n            class={`toolbar-button ${\n              visibility !== 'public' && !sensitive ? 'show-field' : ''\n            }`}\n            title={`Visibility: ${visibility}`}\n          >\n            <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\n            <select\n              name=\"visibility\"\n              value={visibility}\n              onChange={(e) => {\n                setVisibility(e.target.value);\n              }}\n              disabled={uiState === 'loading' || !!editStatus}\n            >\n              <option value=\"public\">\n                Public <Icon icon=\"earth\" />\n              </option>\n              <option value=\"unlisted\">Unlisted</option>\n              <option value=\"private\">Followers only</option>\n              <option value=\"direct\">Direct</option>\n            </select>\n          </label>{' '}\n        </div>\n        <Textarea\n          ref={textareaRef}\n          placeholder={\n            replyToStatus\n              ? 'Post your reply'\n              : editStatus\n              ? 'Edit your status'\n              : 'What are you doing?'\n          }\n          required={mediaAttachments.length === 0}\n          disabled={uiState === 'loading'}\n          lang={language}\n          onInput={() => {\n            updateCharCount();\n          }}\n          maxCharacters={maxCharacters}\n          performSearch={(params) => {\n            return masto.v2.search(params);\n          }}\n        />\n        {mediaAttachments.length > 0 && (\n          <div class=\"media-attachments\">\n            {mediaAttachments.map((attachment, i) => {\n              const { id, file } = attachment;\n              const fileID = file?.size + file?.type + file?.name;\n              return (\n                <MediaAttachment\n                  key={id || fileID || i}\n                  attachment={attachment}\n                  disabled={uiState === 'loading'}\n                  lang={language}\n                  onDescriptionChange={(value) => {\n                    setMediaAttachments((attachments) => {\n                      const newAttachments = [...attachments];\n                      newAttachments[i].description = value;\n                      return newAttachments;\n                    });\n                  }}\n                  onRemove={() => {\n                    setMediaAttachments((attachments) => {\n                      return attachments.filter((_, j) => j !== i);\n                    });\n                  }}\n                />\n              );\n            })}\n            <label class=\"media-sensitive\">\n              <input\n                name=\"sensitive\"\n                type=\"checkbox\"\n                checked={sensitive}\n                disabled={uiState === 'loading'}\n                onChange={(e) => {\n                  const sensitive = e.target.checked;\n                  setSensitive(sensitive);\n                }}\n              />{' '}\n              <span>Mark media as sensitive</span>{' '}\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n            </label>\n          </div>\n        )}\n        {!!poll && (\n          <Poll\n            lang={language}\n            maxOptions={maxOptions}\n            maxExpiration={maxExpiration}\n            minExpiration={minExpiration}\n            maxCharactersPerOption={maxCharactersPerOption}\n            poll={poll}\n            disabled={uiState === 'loading'}\n            onInput={(poll) => {\n              if (poll) {\n                const newPoll = { ...poll };\n                setPoll(newPoll);\n              } else {\n                setPoll(null);\n              }\n            }}\n          />\n        )}\n        <div class=\"toolbar\">\n          <label class=\"toolbar-button\">\n            <input\n              type=\"file\"\n              accept={supportedMimeTypes.join(',')}\n              multiple={mediaAttachments.length < maxMediaAttachments - 1}\n              disabled={\n                uiState === 'loading' ||\n                mediaAttachments.length >= maxMediaAttachments ||\n                !!poll\n              }\n              onChange={(e) => {\n                const files = e.target.files;\n                if (!files) return;\n\n                const mediaFiles = Array.from(files).map((file) => ({\n                  file,\n                  type: file.type,\n                  size: file.size,\n                  url: URL.createObjectURL(file),\n                  id: null, // indicate uploaded state\n                  description: null,\n                }));\n                console.log('MEDIA ATTACHMENTS', files, mediaFiles);\n\n                // Validate max media attachments\n                if (\n                  mediaAttachments.length + mediaFiles.length >\n                  maxMediaAttachments\n                ) {\n                  alert(\n                    `You can only attach up to ${maxMediaAttachments} files.`,\n                  );\n                } else {\n                  setMediaAttachments((attachments) => {\n                    return attachments.concat(mediaFiles);\n                  });\n                }\n                // Reset\n                e.target.value = '';\n              }}\n            />\n            <Icon icon=\"attachment\" />\n          </label>{' '}\n          <button\n            type=\"button\"\n            class=\"toolbar-button\"\n            disabled={\n              uiState === 'loading' || !!poll || !!mediaAttachments.length\n            }\n            onClick={() => {\n              setPoll({\n                options: ['', ''],\n                expiresIn: 24 * 60 * 60, // 1 day\n                multiple: false,\n              });\n            }}\n          >\n            <Icon icon=\"poll\" alt=\"Add poll\" />\n          </button>{' '}\n          <div class=\"spacer\" />\n          {uiState === 'loading' && <Loader abrupt />}{' '}\n          {uiState !== 'loading' && (\n            <CharCountMeter maxCharacters={maxCharacters} />\n          )}\n          <label class=\"toolbar-button\">\n            <span class=\"icon-text\">\n              {supportedLanguagesMap[language]?.native}\n            </span>\n            <select\n              name=\"language\"\n              value={language}\n              onChange={(e) => {\n                const { value } = e.target;\n                setLanguage(value || DEFAULT_LANG);\n                store.session.set('language', value);\n              }}\n              disabled={uiState === 'loading'}\n            >\n              {supportedLanguages\n                .sort(([, commonA], [, commonB]) => {\n                  return commonA.localeCompare(commonB);\n                })\n                .map(([code, common, native]) => (\n                  <option value={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n            </select>\n          </label>{' '}\n          <button type=\"submit\" class=\"large\" disabled={uiState === 'loading'}>\n            {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst Textarea = forwardRef((props, ref) => {\n  const { masto } = api();\n  const [text, setText] = useState(ref.current?.value || '');\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n\n  const customEmojis = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        console.log({ emojis });\n        customEmojis.current = emojis;\n      } catch (e) {\n        // silent fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  const textExpanderRef = useRef();\n  const textExpanderTextRef = useRef('');\n  useEffect(() => {\n    let handleChange, handleValue, handleCommited;\n    if (textExpanderRef.current) {\n      handleChange = (e) => {\n        // console.log('text-expander-change', e);\n        const { key, provide, text } = e.detail;\n        textExpanderTextRef.current = text;\n\n        if (text === '') {\n          provide(\n            Promise.resolve({\n              matched: false,\n            }),\n          );\n          return;\n        }\n\n        if (key === ':') {\n          // const emojis = customEmojis.current.filter((emoji) =>\n          //   emoji.shortcode.startsWith(text),\n          // );\n          const emojis = filterShortcodes(customEmojis.current, text);\n          let html = '';\n          emojis.forEach((emoji) => {\n            const { shortcode, url } = emoji;\n            html += `\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\n                <img src=\"${encodeHTML(\n                  url,\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \n                :${encodeHTML(shortcode)}:\n              </li>`;\n          });\n          // console.log({ emojis, html });\n          menu.innerHTML = html;\n          provide(\n            Promise.resolve({\n              matched: emojis.length > 0,\n              fragment: menu,\n            }),\n          );\n          return;\n        }\n\n        const type = {\n          '@': 'accounts',\n          '#': 'hashtags',\n        }[key];\n        provide(\n          new Promise((resolve) => {\n            const searchResults = performSearch({\n              type,\n              q: text,\n              limit: 5,\n            });\n            searchResults.then((value) => {\n              if (text !== textExpanderTextRef.current) {\n                return;\n              }\n              console.log({ value, type, v: value[type] });\n              const results = value[type];\n              console.log('RESULTS', value, results);\n              let html = '';\n              results.forEach((result) => {\n                const {\n                  name,\n                  avatarStatic,\n                  displayName,\n                  username,\n                  acct,\n                  emojis,\n                } = result;\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\n                // const item = menuItem.cloneNode();\n                if (acct) {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\n                      <span class=\"avatar\">\n                        <img src=\"${encodeHTML(\n                          avatarStatic,\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\n                      </span>\n                      <span>\n                        <b>${displayNameWithEmoji || username}</b>\n                        <br>@${encodeHTML(acct)}\n                      </span>\n                    </li>\n                  `;\n                } else {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\n                      <span>#<b>${encodeHTML(name)}</b></span>\n                    </li>\n                  `;\n                }\n                menu.innerHTML = html;\n              });\n              console.log('MENU', results, menu);\n              resolve({\n                matched: results.length > 0,\n                fragment: menu,\n              });\n            });\n          }),\n        );\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-change',\n        handleChange,\n      );\n\n      handleValue = (e) => {\n        const { key, item } = e.detail;\n        if (key === ':') {\n          e.detail.value = `:${item.dataset.value}:`;\n        } else {\n          e.detail.value = `${key}${item.dataset.value}`;\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-value',\n        handleValue,\n      );\n\n      handleCommited = (e) => {\n        const { input } = e.detail;\n        setText(input.value);\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-committed',\n        handleCommited,\n      );\n    }\n\n    return () => {\n      if (textExpanderRef.current) {\n        textExpanderRef.current.removeEventListener(\n          'text-expander-change',\n          handleChange,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-value',\n          handleValue,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-committed',\n          handleCommited,\n        );\n      }\n    };\n  }, []);\n\n  return (\n    <text-expander ref={textExpanderRef} keys=\"@ # :\">\n      <textarea\n        autoCapitalize=\"sentences\"\n        autoComplete=\"on\"\n        autoCorrect=\"on\"\n        spellCheck=\"true\"\n        dir=\"auto\"\n        rows=\"6\"\n        cols=\"50\"\n        {...textareaProps}\n        ref={ref}\n        name=\"status\"\n        value={text}\n        onInput={(e) => {\n          const { scrollHeight, offsetHeight, clientHeight, value } = e.target;\n          setText(value);\n          const offset = offsetHeight - clientHeight;\n          e.target.style.height = value ? scrollHeight + offset + 'px' : null;\n          props.onInput?.(e);\n        }}\n        style={{\n          width: '100%',\n          height: '4em',\n          '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\n        }}\n      />\n    </text-expander>\n  );\n});\n\nfunction CharCountMeter({ maxCharacters = 500 }) {\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n  const leftChars = maxCharacters - charCount;\n  if (charCount <= maxCharacters / 2) {\n    return null;\n  }\n  return (\n    <meter\n      class={`donut ${\n        leftChars <= -10\n          ? 'explode'\n          : leftChars <= 0\n          ? 'danger'\n          : leftChars <= 20\n          ? 'warning'\n          : ''\n      }`}\n      value={charCount}\n      max={maxCharacters}\n      data-left={leftChars}\n      style={{\n        '--percentage': (charCount / maxCharacters) * 100,\n      }}\n    />\n  );\n}\n\nfunction MediaAttachment({\n  attachment,\n  disabled,\n  lang,\n  onDescriptionChange = () => {},\n  onRemove = () => {},\n}) {\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\n  const { url, type, id } = attachment;\n  console.log({ attachment });\n  const [description, setDescription] = useState(attachment.description);\n  const suffixType = type.split('/')[0];\n  const debouncedOnDescriptionChange = useDebouncedCallback(\n    onDescriptionChange,\n    500,\n  );\n\n  const [showModal, setShowModal] = useState(false);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    let timer;\n    if (showModal && textareaRef.current) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  const descTextarea = (\n    <>\n      {!!id && !supportsEdit ? (\n        <div class=\"media-desc\">\n          <span class=\"tag\">Uploaded</span>\n          <p title={description}>\n            {attachment.description || <i>No description</i>}\n          </p>\n        </div>\n      ) : (\n        <textarea\n          ref={textareaRef}\n          value={description || ''}\n          lang={lang}\n          placeholder={\n            {\n              image: 'Image description',\n              video: 'Video description',\n              audio: 'Audio description',\n            }[suffixType]\n          }\n          autoCapitalize=\"sentences\"\n          autoComplete=\"on\"\n          autoCorrect=\"on\"\n          spellCheck=\"true\"\n          dir=\"auto\"\n          disabled={disabled}\n          maxlength=\"1500\" // Not unicode-aware :(\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\n          onInput={(e) => {\n            const { value } = e.target;\n            setDescription(value);\n            debouncedOnDescriptionChange(value);\n          }}\n        ></textarea>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <div class=\"media-attachment\">\n        <div\n          class=\"media-preview\"\n          onClick={() => {\n            setShowModal(true);\n          }}\n        >\n          {suffixType === 'image' ? (\n            <img src={url} alt=\"\" />\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\n            <video src={url} playsinline muted />\n          ) : suffixType === 'audio' ? (\n            <audio src={url} controls />\n          ) : null}\n        </div>\n        {descTextarea}\n        <div class=\"media-aside\">\n          <button\n            type=\"button\"\n            class=\"plain close-button\"\n            disabled={disabled}\n            onClick={onRemove}\n          >\n            <Icon icon=\"x\" />\n          </button>\n        </div>\n      </div>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowModal(false);\n            }\n          }}\n        >\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\n            <header>\n              <h2>\n                {\n                  {\n                    image: 'Edit image description',\n                    video: 'Edit video description',\n                    audio: 'Edit audio description',\n                  }[suffixType]\n                }\n              </h2>\n            </header>\n            <main tabIndex=\"-1\">\n              <div class=\"media-preview\">\n                {suffixType === 'image' ? (\n                  <img src={url} alt=\"\" />\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\n                  <video src={url} playsinline controls />\n                ) : suffixType === 'audio' ? (\n                  <audio src={url} controls />\n                ) : null}\n              </div>\n              {descTextarea}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction Poll({\n  lang,\n  poll,\n  disabled,\n  onInput = () => {},\n  maxOptions,\n  maxExpiration,\n  minExpiration,\n  maxCharactersPerOption,\n}) {\n  const { options, expiresIn, multiple } = poll;\n\n  return (\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\n      <div class=\"poll-choices\">\n        {options.map((option, i) => (\n          <div class=\"poll-choice\" key={i}>\n            <input\n              required\n              type=\"text\"\n              value={option}\n              disabled={disabled}\n              maxlength={maxCharactersPerOption}\n              placeholder={`Choice ${i + 1}`}\n              lang={lang}\n              spellCheck=\"true\"\n              onInput={(e) => {\n                const { value } = e.target;\n                options[i] = value;\n                onInput(poll);\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"plain2 poll-button\"\n              disabled={disabled || options.length <= 1}\n              onClick={() => {\n                options.splice(i, 1);\n                onInput(poll);\n              }}\n            >\n              <Icon icon=\"x\" size=\"s\" />\n            </button>\n          </div>\n        ))}\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain2 poll-button\"\n          disabled={disabled || options.length >= maxOptions}\n          onClick={() => {\n            options.push('');\n            onInput(poll);\n          }}\n        >\n          +\n        </button>{' '}\n        <label class=\"multiple-choices\">\n          <input\n            type=\"checkbox\"\n            checked={multiple}\n            disabled={disabled}\n            onChange={(e) => {\n              const { checked } = e.target;\n              poll.multiple = checked;\n              onInput(poll);\n            }}\n          />{' '}\n          Multiple choices\n        </label>\n        <label class=\"expires-in\">\n          Duration{' '}\n          <select\n            value={expiresIn}\n            disabled={disabled}\n            onChange={(e) => {\n              const { value } = e.target;\n              poll.expiresIn = value;\n              onInput(poll);\n            }}\n          >\n            {Object.entries(expiryOptions)\n              .filter(([label, value]) => {\n                return value >= minExpiration && value <= maxExpiration;\n              })\n              .map(([label, value]) => (\n                <option value={value} key={value}>\n                  {label}\n                </option>\n              ))}\n          </select>\n        </label>\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain remove-poll-button\"\n          disabled={disabled}\n          onClick={() => {\n            onInput(null);\n          }}\n        >\n          Remove poll\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction filterShortcodes(emojis, searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\n  return emojis\n    .sort((a, b) => {\n      let aLower = a.shortcode.toLowerCase();\n      let bLower = b.shortcode.toLowerCase();\n\n      let aStartsWith = aLower.startsWith(searchTerm);\n      let bStartsWith = bLower.startsWith(searchTerm);\n      let aContains = aLower.includes(searchTerm);\n      let bContains = bLower.includes(searchTerm);\n      let bothStartWith = aStartsWith && bStartsWith;\n      let bothContain = aContains && bContains;\n\n      return bothStartWith\n        ? a.length - b.length\n        : aStartsWith\n        ? -1\n        : bStartsWith\n        ? 1\n        : bothContain\n        ? a.length - b.length\n        : aContains\n        ? -1\n        : bContains\n        ? 1\n        : 0;\n    })\n    .slice(0, 5);\n}\n\nfunction encodeHTML(str) {\n  return str.replace(/[&<>\"']/g, function (char) {\n    return '&#' + char.charCodeAt(0) + ';';\n  });\n}\n\nfunction removeNullUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === null || obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\nexport default Compose;\n","import { useEffect } from 'preact/hooks';\nimport { matchPath } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport states from './states';\n\nconst { VITE_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\n\nexport default function useTitle(title, path) {\n  const snapStates = useSnapshot(states);\n  const { currentLocation } = snapStates;\n  const hasPaths = Array.isArray(path);\n  let paths = hasPaths ? path : [];\n  // Workaround for matchPath not working for optional path segments\n  // https://github.com/remix-run/react-router/discussions/9862\n  if (!hasPaths && /:?\\w+\\?/.test(path)) {\n    paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\n    paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\n  }\n  let matched = false;\n  if (paths.length) {\n    matched = paths.some((p) => matchPath(p, currentLocation));\n  } else if (path) {\n    matched = matchPath(path, currentLocation);\n  }\n  console.debug({ paths, matched, currentLocation });\n  useEffect(() => {\n    if (!matched) return;\n    document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\n  }, [title, matched]);\n}\n"],"names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getCurrentAccount","currentAccount","session","get","getCurrentAccountNS","account","instanceURL","saveAccount","acc","accessToken","push","setJSON","set","currentInstance","getCurrentInstance","instances","instance","toLowerCase","console","key","localStorage","getItem","e","value","warn","JSON","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","currentAccountApi","initClient","test","replace","url","client","createClient","disableVersionCheck","timeout","__instance__","initInstance","masto","v2","fetch","v1","uri","urls","streamingApi","domain","configuration","streaming","mastoAccount","preferences","initPreferences","api","accountID","_a","_b","Error","authenticated","_c","emojifyText","text","emojis","length","forEach","emoji","shortcode","staticUrl","RegExp","fauxDiv","document","createElement","enhanceContent","content","opts","postEnhanceDOM","enhancedContent","dom","innerHTML","Array","from","querySelectorAll","link","setAttribute","textNodes","extractTextNodes","node","html","nodeValue","nodes","childNodes","replaceWith","filter","p","innerText","trim","block","pre","br","nextParagraphs","hasCodeBlock","currentBlock","nextElementSibling","next","tagName","codeText","map","join","remove","replaceAll","rejectFilter","defaultRejectFilter","defaultRejectFilterMap","Object","fromEntries","nodeName","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","parentNode","includes","FILTER_REJECT","FILTER_ACCEPT","nextNode","states","proxy","prevLocation","currentLocation","statuses","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","spoilers","scrollPositions","unfurledLinks","showCompose","showSettings","showAccount","showDrafts","showMediaModal","showShortcutsSettings","shortcuts","settings","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","subscribeKey","v","subscribe","action","prevValue","path","hideAllModals","statusKey","getStatus","statusID","override","skipThreading","status","threadifyStatus","requestAnimationFrame","propInstance","fetchIndex","traverse","index","inReplyToId","inReplyToAccountId","prevStatus","r","Promise","fetchStatus","saveStatus","mem","handleContentLinks","mentions","target","closest","classList","contains","targetText","querySelector","username","getAttribute","mention","acct","preventDefault","stopPropagation","tag","hashURL","location","hash","shortenNumber","num","Intl","NumberFormat","notation","format","SIZES","s","m","l","xl","xxl","xxxl","Avatar","size","alt","props","_jsx","width","height","ICONS","x","heart","bookmark","transfer","rocket","earth","lock","unlock","message","comment","notification","follow","poll","pencil","quill","at","attachment","upload","gear","more","external","popout","popin","plus","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","bus","history","share","modules","Icon","icon","title","class","className","iconSize","iconName","rotate","flip","isArray","iconData","setIconData","useState","useEffect","name","default","display","overflow","lineHeight","__html","body","transform","Link","forwardRef","ref","routerLocation","useLocation","to","restProps","isActive","onClick","draftsStore","createStore","drafts","val","getMany","keys","delMany","clear","db","openCompose","URL","window","screenWidth","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","supportsCache","supports","feature","version","range","features","satisfies","includePrerelease","loose","noop","useInterval","callback","delay","immediate","savedCallback","useRef","current","setInterval","clearInterval","visibilityIconsMap","public","unlisted","private","direct","Loader","abrupt","hidden","$modalContainer","getElementById","Modal","children","modalRef","timer","setTimeout","focusElement","focus","clearTimeout","createPortal","NameText","showAvatar","showAcct","short","avatar","avatarStatic","displayName","displayNameWithEmoji","trimmedUsername","trimmedDisplayName","shortenedDisplayName","_jsxs","_Fragment","div","htmlContentLength","showToast","rest","toast","Toastify","gravity","position","Media","media","showOriginal","autoAnimate","blurhash","description","meta","previewUrl","remoteUrl","type","original","small","mediaURL","rgbAverageColor","getBlurHashAverageColor","videoRef","focalBackgroundPosition","y","toFixed","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","aspectRatio","maxWidth","maxHeight","justifyContent","alignItems","backgroundColor","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","pause","play","MenuLink","FocusableItem","closeMenu","detail","undefined","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","DateTimeFormat","RelativeTime","datetime","date","dateStr","setDateStr","raf","update","str","now","diff","year","twitter","toDate","fromNow","cancelAnimationFrame","toISOString","throttle","pThrottle","limit","interval","fetchAccount","reject","memFetchAccount","visibilityText","Status","withinContext","skeleton","readOnly","contentTextWeight","sameInstance","sKey","snapStates","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","muted","sensitive","spoilerText","visibility","language","editedAt","filtered","card","createdAt","mediaAttachments","reblog","_deleted","_pinned","createdAtDate","Date","editedAtDate","isSelf","inReplyToAccountRef","inReplyToAccount","setInReplyToAccount","account2","showSpoiler","debugHover","showEdited","setShowEdited","currentYear","spoilerContentRef","useResizeObserver","scrollHeight","clientHeight","contentRef","readMoreText","statusRef","unauthInteractionErrorMessage","locale","createdDateText","month","editedDateText","isSizeLarge","canBoost","newStatus","unreblog","favouriteStatus","StatusMenuItems","MenuHeader","MenuItem","MenuDivider","replyStatus","boostStatus","bookmarkStatus","clipboard","error","navigator","alert","Menu","log","textWeight","isMastodonLinkMaybe","unfurlMastodonLink","newPoll","pollResponse","choices","then","catch","i","Card","StatusButton","EditedAtModal","providerName","image","authorName","embedUrl","hasText","isLandscape","cardStatusURL","url2","result","setCardStatusURL","Poll","lang","refresh","votePoll","setUIState","multiple","ownVotes","voted","votersCount","votesCount","expired","expiresAt","options","expiresAtDate","roundPrecision","pollVotesCount","uiState","option","percentage","optionVotesCount","o","isLeading","form","formData","FormData","fetchStatusHistory","setEditHistory","editHistory2","editHistory","checked","count","setButtonTitle","setIconAlt","buttonTitle","time","iconAlt","hours","minutes","seconds","denylistDomains","failedUnfurls","_unfurlMastodonLink","results","debug","statusURL","memo","supportedLanguagesMap","supportedLanguages","reduce","code","common","native","expiryOptions","expirySeconds","values","oneDay","expiresInFromExpiresAt","delta","getTime","role","windowMargin","observer","IntersectionObserver","entries","entry","isIntersecting","boundingClientRect","innerWidth","style","observe","DEFAULT_LANG","urlRegexObj","urlRegex","source","flags","usernameRegex","urlPlaceholder","countableText","inputText","Compose","onClose","replyToStatus","editStatus","draftStatus","standalone","hasOpener","UID","maxMediaAttachments","charactersReservedPerUrl","maxCharacters","imageSizeLimit","imageMatrixLimit","supportedMimeTypes","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxCharactersPerOption","maxExpiration","maxOptions","minExpiration","spoilerTextRef","textareaRef","setMediaAttachments","prefs","setLanguage","oninputTextarea","focusTextarea","dispatchEvent","visibility2","language2","sensitive2","currentAccountInfo","allMentions","setSensitive","setVisibility","poll2","expiresIn","statusSource","mediaAttachments2","setPoll","composablePoll","formRef","hasMediaAttachments","canClose","dataset","hasOnlyAcct","confirmClose","hasIDMediaAttachments","beforeUnloadCopy","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","useHotkeys","yes","prevBackgroundDraft","draftKey","saveUnsavedDraft","addEventListener","capture","backgroundDraft","equal","handleItems","items","files","state","allowedFiles","updatedAt","file","mediaFiles","handleDragover","clipboardData","dataTransfer","item","passData","createObjectURL","removeEventListener","opener","mediaPromises","pointerEvents","params2","removeNullUndefined","res","some","params","media_attributes","in_reply_to_id","opacity","Textarea","i2","fileID","MediaAttachment","newAttachments","attachments","_","j","CharCountMeter","commonA","commonB","textareaProps","charCount","customEmojis","textExpanderRef","textExpanderTextRef","handleChange","handleValue","handleCommited","text2","encodeHTML","resolve","provide","matched","input","searchResults","offsetHeight","setText","offset","leftChars","disabled","onDescriptionChange","onRemove","setDescription","suffixType","debouncedOnDescriptionChange","useDebouncedCallback","showModal","setShowModal","composerCharacterCount","supportsEdit","descTextarea","onInput","label","filterShortcodes","searchTerm","splice","bLower","b","aStartsWith","bStartsWith","aContains","aLower","bContains","char","obj","VITE_CLIENT_NAME","CLIENT_NAME","import","useTitle","hasPaths","paths","matchPath"],"mappings":"oyDAEO,SAASA,GAAWC,EAAI,CAC7B,MAAMC,EAAWC,EAAMC,MAAMC,QAAQ,UAAU,GAAK,GACpD,OAAOH,EAASI,KAAMC,GAAMA,EAAEC,KAAKP,KAAOA,CAAE,GAAKC,EAAS,CAAC,CAC7D,CAEO,SAASO,IAAoB,CAClC,MAAMC,EAAiBP,EAAMQ,QAAQC,IAAI,gBAAgB,EAEzD,OADgBZ,GAAWU,CAAc,CAE3C,CAEO,SAASG,IAAsB,CACpC,MAAMC,EAAUL,KACV,CACJM,YAAAA,EACAP,KAAM,CAAEP,GAAAA,CAAG,CACZ,EAAGa,EACJ,MAAQ,GAAEb,KAAMc,GAClB,CAEO,SAASC,GAAYF,EAAS,CACnC,MAAMZ,EAAWC,EAAMC,MAAMC,QAAQ,UAAU,GAAK,GAC9CY,EAAMf,EAASI,KAAMC,GAAMA,EAAEC,KAAKP,KAAOa,EAAQN,KAAKP,EAAE,EAC1DgB,GACFA,EAAIT,KAAOM,EAAQN,KACnBS,EAAIF,YAAcD,EAAQC,YAC1BE,EAAIC,YAAcJ,EAAQI,aAE1BhB,EAASiB,KAAKL,CAAO,EAEvBX,EAAMC,MAAMgB,QAAQ,WAAYlB,CAAQ,EACxCC,EAAMQ,QAAQU,IAAI,iBAAkBP,EAAQN,KAAKP,EAAE,CACrD,CAEA,IAAIqB,GAAkB,KACf,SAASC,IAAqB,CACnC,GAAID,GAAiB,OAAOA,GAC5B,GAAI,CACF,MAAMR,EAAUL,KACVe,EAAYrB,EAAMC,MAAMC,QAAQ,WAAW,EAC3CoB,EAAWX,EAAQC,YAAYW,YAAW,EAChD,OAAQJ,GAAkBE,EAAUC,CAAQ,CAC7C,MAAC,CACAE,aAAAA,0DAAgB,EAEhBxB,EAAA,MAAA,IAAA,WAAA,EACAA,SAAW,OAAI,EACP,EACR,CACF,CCjDF,MAAMC,GAAQ,CACZQ,IAAMgB,GAAQ,CACZ,GAAI,CACF,OAAOC,aAAaC,QAAQF,CAAG,CAChC,MAAC,CACAD,OAAO,IACP,CACF,EACF,QAACC,GAAA,CACM,GAAA,CACD,OAAA,KAAA,MAAAxB,GAAA,IAAAwB,CAAA,CAAA,OACF,CACA,OAAOG,IACPJ,CACA,EACF,IAAA,CAAAC,EAAAI,IAAA,CACD,GAAA,CACI,OAAMA,aAAU,QAAAJ,EAAAI,CAAA,CACf,MAAA,CACF,OAAOH,IACR,CACCF,EACA,QAAA,CAAAC,EAAWI,IAAA,CACb,GAAA,CACD,OAAA5B,GAAA,IAAAwB,EAAA,KAAA,UAAAI,CAAA,CAAA,CACDZ,MAAAA,CACM,OAAA,IACF,GAEAO,IAAAA,GAAQM,CACR,GAAA,CACF,OAAA,aAAA,WAAAL,CAAA,CACD,MAAA,CACE,OAAW,IACR,CACF,GAEAD,GAAQM,CACR,IAAAL,GAAW,CACb,GAAA,CACF,OAAA,eAAA,QAAAA,CAAA,CACD,MAAA,CAEKjB,OAAO,IACR,GAEC,QAAAiB,GAAqB,CACvB,GAASG,CACPJ,OAAO,KAAK,MAAGhB,GAAA,IAAAiB,CAAA,CAAA,CACf,MAAA,CACF,OAAA,IACD,CACM,MACD,CAAAA,EAAAI,IAAA,IACKE,CACP,OAAOH,eAAG,QAAAH,EAAAI,CAAA,CACVL,MAAAA,CACA,OAAO,IACT,CACD,EACDN,QAAS,CAAAO,MAAY,CACnB,GAAI,CACF,OAAOO,SAAeC,KAAO,WAAY,CAAA,CAC1C,MAAC,CACAT,OAAO,IACP,CACF,EACF,IAACC,GAAA,CACDR,GAAAA,CACM,OAAA,eAAA,WAAAQ,CAAA,CACF,MAAA,CACA,OAAOG,IACPJ,CACA,CACF,EAGIb,GAAA,CACF,IAAAc,GAAqB,CACvB,GAASG,CACPJ,OAAOvB,GAAM2B,QAAEH,CAAA,EAAAf,GAAA,CAAA,CACf,MAAA,CACF,OAAA,IACF,CACD,cAED,GAAA,CACMC,QAAUV,GAAA,QAAAwB,CAAA,GAAA,CAAA,EACX,OAAAS,EAAWxB,IAAA,EAAAmB,EACR5B,GAAA,QAAAwB,EAAAS,CAAA,OACF,CACA,OAAON,IACPJ,CACA,EACF,IAAAC,GAAA,CACD,GAAA,CACI,MAAIS,EAAYjC,GAAA,QAAAwB,CAAA,GAAA,CAAA,EACf,cAAAS,EAAAxB,GAAA,CAAA,EACIwB,GAAOjC,QAAMC,EAAOgC,CAAI,CAC9BA,MAAAA,CACA,OAAOjC,IACR,CACCuB,CACA,EACFxB,EAAA,CACF,MAAAC,GACAkC,QAAAA,eCtGIC,GAAmB,kBAMnBC,GAAO,CAAA,EAOPC,GAAc,CAAA,EAGpB,IAAIC,GAEG,SAASC,GAAW,CAAElB,SAAAA,EAAUP,YAAAA,CAAY,EAAG,CAChD,eAAe0B,KAAKnB,CAAQ,IAC9BA,EAAWA,EACRoB,QAAQ,eAAgB,EAAE,EAC1BA,QAAQ,OAAQ,EAAE,EAClBnB,eAEL,MAAMoB,EAAMrB,EAAY,WAAUA,IAAc,WAAUc,KAEpDQ,EAASC,GAAa,CAC1BF,IAAAA,EACA5B,YAAAA,EACA+B,oBAAqB,GACrBC,QAAS,GACX,CAAC,EACDH,OAAAA,EAAOI,aAAe1B,EAEtBe,GAAKf,CAAQ,EAAIsB,EACZN,GAAYhB,CAAQ,IAAGgB,GAAYhB,CAAQ,EAAI,IAChDP,IAAauB,GAAYhB,CAAQ,EAAEP,CAAW,EAAI6B,GAE/CA,CACT,CAIO,eAAeK,GAAaL,EAAQ,CACzC,MAAMM,EAAQN,EAEd,IAAIvC,EACJ,GAAI,CACFA,EAAO,MAAM6C,EAAMC,GAAG7B,SAAS8B,MAAK,CACtC,MAAE,CAAW,CACb,GAAI,CAAC/C,EACH,GAAI,CACFA,EAAO,MAAM6C,EAAMG,GAAGhC,UAAU+B,MAAK,CACvC,MAAE,CAAW,CAEf,GAAI,CAAC/C,EAAM,OACXmB,KAAAA,CAEE,IAAA8B,EACAA,KAAG,CACHC,aAAAA,CAAQC,EAAAA,CAAAA,EACR,OAAAC,EACAA,cAAM,CACNC,KAAAA,CAAiBH,UAAAA,CAAQI,EAAAA,CAAAA,CAAU,GAAI,CAAG,IAC5C,GAAItD,GAAIoD,EAAA,CACJH,MAAOG,EAAQzD,EAAA,MAAA,QAAA,WAAA,GAAA,GACjBqB,GAAeoC,GAAQH,GAAM,QAAQ,eAAa,EAAI,EAAA,QAAE,OAAA,EAAA,EAAA,YAAA,CAAA,EAAAjD,EACxDgB,EAAS,MACNoC,QAAUH,YACDjC,CAAe,GAO7BmC,GAAAG,KACIH,EAAAA,OAAAA,MAAgBG,gBAAWA,GAAAH,4BAO1B,MAAAI,QADPhB,EACkCA,GAAAA,SAAgB,kBAAe,EAC/D/B,IACM+C,KAAAA,EAEN/C,YAAYS,EAAA,YAAA,EACVjB,YAAAA,CACAO,CAAAA,CACAG,sBAIJ,GAAA,CAEM,MAAA8C,EAAA,MADgBC,EAChB,GAAA,YAAA,MAAA,EACF9D,EAAMkD,QAAQN,IAAM,cAAAiB,CAAA,OACpB,CAAMA,EAKR,SAAAE,GAAA,CACF,SAAAzC,gBAEA,UAAA0C,EACA,QAAArD,CACA,EAAO,GAAA,WAEL,GAFyCW,IAAWA,EAAAA,EAAA,YAAA,EAAA,KAAA,GAEhDA,GAAUP,EACZO,MAAAA,CACF,QAAA2C,EAAA3B,GAAAhB,CAAA,IAAA,YAAA2C,EAAAlD,KAAAyB,GAAA,YAEA,YAAAzB,EACIO,EACK,cAAA,GACL4B,SAAAA,GAIA5B,GAAAA,GAAAA,EAEJ,GADEX,EAACA,GAAAd,GAAAmE,CAAA,EACHrD,EAAA,uBAEAW,EAAAX,EAAA,YAAA,YAAA,EAAA,KAAA,EACIA,MAAO,CACTA,QAAiBuD,EAAA5B,GAAchB,CAAA,IAAd,YAAA4C,OAAyB1B,GAAA,YAExC,YAAAzB,EACMO,EACC,cAAA,GACL4B,SAAAA,EAEyBnC,KAAY,OAAE,IAAA,MAAA,WAAAiD,aAAA,EAKzC,GAAA1C,EAAU6C,CACZ,MAAAjB,EAAAb,GAAAf,CAAA,GAAAkB,GAAA,CACF,SAAAlB,IAEA,MAAA,CACIA,MAAAA,EACI4B,cAAY,CAAA,CAAC5B,SAAakB,kBAAalB,SAAAA,CAAS,EAIpDA,GAAAA,GACF,MAAC,CACH,MAAAiB,oBAEA,SAAAA,GAAA,YACA,EAEIW,MAAAA,EAAwB5C,KACxB8D,GAAAA,EAAmB,MACX,CACT,YAAArD,EACH,YAAAO,CACMf,EAAAA,EACN,OAAAgC,KAAoB8B,EAAA/B,GAAAhB,CAAA,IAAA,YAAA+C,EAAAtD,KAAAyB,GAAA,CACZ,SAAAlB,EAAEP,YAAAA,CAAaH,CAAAA,EAAwC,CAC5C,MAAA2B,GAEFjB,cAAQ,GAAEP,SAAAA,CAAY,EAInCO,MAAAA,CACF,MAACe,GAAAD,EAAA,GAAAI,GAAA,CACH,SAAAJ,KAEA,cAAA,GACO,SAAAA,EACLc,CAA8C5B,CAA2B,OAAE,QAAA,CAC3E8C,kBAAAA,GACA9C,KAAAA,GACF,YAAAgB,EACF,EC5LA,SAASgC,GAAYC,EAAMC,EAAS,GAAI,CACtC,OAAKD,GACAC,EAAOC,QAGZD,EAAOE,QAASC,GAAU,CACxB,KAAM,CAAEC,UAAAA,EAAWC,UAAAA,EAAWlC,IAAAA,CAAK,EAAGgC,EACtCJ,EAAOA,EAAK7B,QACV,IAAIoC,OAAQ,IAAGF,KAAc,GAAG,EAC/B,2CAA0CjC,YAAciC,8CAAsD,CAEnH,CAAC,EAEML,GAZW,EAapB,CCZA,MAAMQ,GAAUC,SAASC,cAAc,KAAK,EAE5C,SAASC,GAAeC,EAASC,EAAO,GAAI,CAC1C,KAAM,CAAEZ,OAAAA,EAAQa,eAAAA,EAAiB,IAAM,CAAC,CAAG,EAAGD,EAC9C,IAAIE,EAAkBH,EACtB,MAAMI,EAAMP,SAASC,cAAc,KAAK,EACxCM,EAAIC,UAAYF,EAIFG,MAAMC,KAAKH,EAAII,iBAAiB,0BAA0B,CAAC,EACnEjB,QAASkB,GAAS,CACtBA,EAAKC,aAAa,SAAU,QAAQ,CACtC,CAAC,EAKD,IAAIC,EAAYC,GAAiBR,CAAG,EACpCO,OAAAA,EAAUpB,QAASsB,GAAS,CAC1B,IAAIC,EAAOD,EAAKE,UAAUxD,QAAQ,KAAM,MAAM,EAAEA,QAAQ,KAAM,MAAM,EAChE8B,IACFyB,EAAO3B,GAAY2B,EAAMzB,CAAM,GAEjCO,GAAQS,UAAYS,EACpB,MAAME,EAAQV,MAAMC,KAAKX,GAAQqB,UAAU,EAC3CJ,EAAKK,YAAY,GAAGF,CAAK,CAC3B,CAAC,EAKcV,MAAMC,KAAKH,EAAII,iBAAiB,GAAG,CAAC,EAAEW,OAAQC,GAC3D,gBAAgB9D,KAAK8D,EAAEC,UAAUC,KAAM,CAAA,CAAC,EAEnC/B,QAASgC,GAAU,CACxB,MAAMC,EAAM3B,SAASC,cAAc,KAAK,EAExCyB,EAAMf,iBAAiB,IAAI,EAAEjB,QAASkC,GAAOA,EAAGP,YAAY;AAAA,CAAI,CAAC,EACjEM,EAAInB,UAAa,SAAQkB,EAAMlB,UAAUiB,KAAI,WAC7CC,EAAML,YAAYM,CAAG,CACvB,CAAC,EAGkBlB,MAAMC,KAAKH,EAAII,iBAAiB,GAAG,CAAC,EAEzBW,OAAQC,GAAM,QAAQ9D,KAAK8D,EAAEC,SAAS,CAAC,EAE1D9B,QAASgC,GAAU,CAC5B,MAAMG,EAAiB,CAACH,CAAK,EAC7B,IAAII,EAAe,GACfC,EAAeL,EACnB,KAAOK,EAAaC,oBAAoB,CACtC,MAAMC,EAAOF,EAAaC,mBAC1B,GAAIC,GAAQA,EAAKC,UAAY,IAC3B,GAAI,QAAQzE,KAAKwE,EAAKT,SAAS,EAAG,CAChCK,EAAe7F,KAAKiG,CAAI,EACxBH,EAAe,GACf,KACF,MACED,EAAe7F,KAAKiG,CAAI,MAG1B,OAEFF,EAAeE,CACjB,CACA,GAAIH,EAAc,CAChB,MAAMH,EAAM3B,SAASC,cAAc,KAAK,EACxC4B,EAAenC,QAAS6B,GAAM,CAE5BA,EAAEZ,iBAAiB,IAAI,EAAEjB,QAASkC,GAAOA,EAAGP,YAAY;AAAA,CAAI,CAAC,CAC/D,CAAC,EACD,MAAMc,EAAWN,EAAeO,IAAKb,GAAMA,EAAEf,SAAS,EAAE6B,KAAK;AAAA;AAAA,CAAM,EACnEV,EAAInB,UAAa,SAAQ2B,WACzBT,EAAML,YAAYM,CAAG,EACrBE,EAAenC,QAAS6B,GAAMA,EAAEe,OAAQ,CAAA,CAC1C,CACF,CAAC,EAKDxB,EAAYC,GAAiBR,CAAG,EAChCO,EAAUpB,QAASsB,GAAS,CAC1B,IAAIC,EAAOD,EAAKE,UAAUxD,QAAQ,KAAM,MAAM,EAAEA,QAAQ,KAAM,MAAM,EAChE,WAAWD,KAAKwD,CAAI,IACtBA,EAAOA,EAAKsB,WAAW,aAAc,iBAAiB,GAExDxC,GAAQS,UAAYS,EACpB,MAAME,EAAQV,MAAMC,KAAKX,GAAQqB,UAAU,EAC3CJ,EAAKK,YAAY,GAAGF,CAAK,CAC3B,CAAC,EAKDL,EAAYC,GAAiBR,EAAK,CAChCiC,aAAc,CAAC,GAAG,CACpB,CAAC,EACD1B,EAAUpB,QAASsB,GAAS,CAC1B,IAAIC,EAAOD,EAAKE,UAAUxD,QAAQ,KAAM,MAAM,EAAEA,QAAQ,KAAM,MAAM,EAChE,+BAA+BD,KAAKwD,CAAI,IAC1CA,EAAOA,EAAKsB,WACV,mCACA,4FAA4F,GAGhGxC,GAAQS,UAAYS,EACpB,MAAME,EAAQV,MAAMC,KAAKX,GAAQqB,UAAU,EAC3CJ,EAAKK,YAAY,GAAGF,CAAK,CAC3B,CAAC,EAEGd,GACFA,EAAeE,CAAG,EAGpBD,EAAkBC,EAAIC,UAEfF,CACT,CAEA,MAAMmC,GAAsB,CAE1B,QAEA,MACA,QACA,QACA,OACA,MACA,QAEA,QACA,SACA,SACA,UACA,SACA,SAEA,MACA,OAEA,SACA,WACA,SAEA,QACA,SACA,WAEA,OACA,UAAU,EAENC,GAAyBC,OAAOC,YACpCH,GAAoBL,IAAKS,GAAa,CAACA,EAAU,EAAI,CAAC,CAAC,EAEzD,SAAS9B,GAAiBR,EAAKH,EAAO,GAAI,CACxC,MAAMU,EAAY,CAAA,EACZgC,EAAO9C,SAAS+C,iBACpBxC,EACAyC,WAAWC,UACX,CACEC,WAAWlC,EAAM,CAIf,OAHI0B,GAAuB1B,EAAKmC,WAAWN,QAAQ,GAIjDzC,EAAKoC,cACLpC,EAAKoC,aAAaY,SAASpC,EAAKmC,WAAWN,QAAQ,EAE5CG,WAAWK,cAEbL,WAAWM,aACpB,CACD,EACD,EAAK,EAEP,IAAItC,EACJ,KAAQA,EAAO8B,EAAKS,YAClBzC,EAAU9E,KAAKgF,CAAI,EAErB,OAAOF,CACT,CClLM0C,MAAAA,EAASC,GAAM,CAEnBC,aAAc,KACdC,gBAAiB,KACjBC,SAAU,CAAE,EACZC,mBAAoB,CAAE,EACtBC,KAAM,CAAE,EAERC,QAAS,CAAE,EACXC,SAAU,KACVC,kBAAmB,KACnBC,cAAe,CAAE,EACjBC,kBAAmBnJ,EAAMW,QAAQF,IAAI,mBAAmB,GAAK,KAC7D2I,iBAAkB,CAAE,EACpBC,qBAAsB,GACtBC,2BAA4B,KAC5BvJ,SAAU,CAAE,EACZwJ,iBAAkB,EAClBC,SAAU,CAAE,EACZC,gBAAiB,CAAE,EACnBC,cAAe,CAAE,EAEjBC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,WAAY,GACZC,eAAgB,GAChBC,sBAAuB,GAEvBC,UAAWjK,EAAMW,QAAQF,IAAI,WAAW,GAAK,CAAE,EAE/CyJ,SAAU,CACRC,kBAAmBnK,EAAMW,QAAQF,IAAI,4BAA4B,GAAK,KACtE2J,qBACEpK,EAAMW,QAAQF,IAAI,+BAA+B,GAAK,GACxD4J,eAAgBrK,EAAMW,QAAQF,IAAI,yBAAyB,GAAK,EAClE,CACF,CAAC,EAID6J,GAAa9B,EAAQ,oBAAsB+B,GAAM,CAC/C/I,EAAAA,QAAoB,IAAA,oBAAIgH,EAAA,iBAAA,IAE1BgC,GAAEhC,EAAA+B,GAAA,CACFC,KAAAA,CAASC,EAAUF,EAAM1I,EAAA6I,CAAA,EAAAH,EAAA,CAAA,EACvB/I,EAAa,KAAC,GAAe,IAAA,2BAC7BxB,EAAOyK,QAAQE,IAAM9I,0BAAwB,CAAA,CAAAA,CAAA,EAEtC8I,EAAQ,KAAA,GAAI,qCACnB3K,EAAA,QAAA,IAAA,gCAAA,CAAA,CAAA6B,CAAA,EAEO8I,EAAQ,KAAA,GAAI,kCACnB3K,EAAA,QAAA,IAAA,6BAAA6B,CAAA,GAEO8I,GAAA,YAAAA,QAASzJ,aAChBlB,EAAA,QAAA,IAAA,YAAAwI,EAAA,SAAA,IAGA,SAAAoC,IAAA,CACApC,EAAA,YAAA,GAEKA,EAAA,gBACLA,EAAOmB,YAAc,GACrBnB,EAAOoB,WAAY,GACnBpB,EAAOqB,eAAmB,GAC1BrB,EAAOsB,sBAAkB,GAEnB,SAAsBe,GAAA/K,EAAAwB,EAAQ,CACtC,OAAAA,EAAA,GAAAA,KAAAxB,IAAAA,CAEA,CACSwB,SAAAA,GAAcA,EAAeA,EAAM,CAC5C,GAAAA,EAAA,CAEA,QAAgBwJ,GAAUC,EAAUzJ,CAAQ,EAC1C,SAAc,SAAAG,CAAA,CACZ,CACA,OAAA+G,EAAa,SAASuC,CAAK,CAC7B,CACA,SAAcnC,KAAkBtH,EAAA8D,EAAA,CAClC,OAAA9D,GAAA,WAEO8D,EAAA9D,EACLA,EAAWA,MAETA,KAAAA,CACF,SAAA0J,EACM,cAAAC,GAAU,OAAA,OAAA,CAAEA,SAAAA,GAAkBtD,cAAa,EAC7CqD,EAAAA,CAAAA,EAAqC,GAArBC,CAAAA,OAEnBH,GAAAI,EAAA,EAAA,EAAA,OACD,QAAaL,GAAAK,EAAA,GAAA5J,CAAA,EAEb,GADAkH,WAAiBsC,CAAAA,EAAAA,EACXrJ,SAAe,CACrB+G,MAAe/G,EAAAoJ,GAAcK,EAAA,OAAA,GAAA5J,CAAA,EACzB4J,EAAAA,SAAezJ,CAAA,EAAAyJ,EAAA,UAKnB,sBAAA,IAAA,CACIC,GAAgBD,EAAA5J,CAAA,EAClB8J,EAAAA,QACED,GAAgBD,EAAQ5J,OAASA,CAAA,CAE/B6J,CAAAA,CAEJ,CACF,SAAAA,GAAAD,EAAAG,EAAA,CACF,KAAA,CAEA,MAAAnI,EACQ,SAAA5B,GAAOyC,GAAA,CAAEzC,SAAAA,EAAU,EAAgC,IAAEgK,EAAA,EAC3D,eAAAC,EAAAL,EAAAM,EAAA,EAAA,CACIF,KAAAA,CACJ,YAAAG,EACQ,mBAAAC,GAAaR,EAAEQ,GAAAA,CAAAA,GAAAA,IAAAA,EAAAA,QAAAA,SAA6B,CAAAR,CAAA,KAEzCO,GAAQC,IAAAR,EAAA,QAAA,GACjB,KAAA,eAIA,MAAAzJ,EAAAoJ,GAAAY,EAAAnK,CAAA,sBACA,GAAA,CAAAqK,EAAYd,CACZ,OAAiBrC,EAAOI,KAAQ,8BAC5B,kBAAagD,GAAA,WAAAA,EAAA,IAAAN,CAAA,CAAA,EAEfK,EAAUE,MAAUC,GAAeL,EAAUH,CAAAA,EAC7CS,GAAAJ,EAAArK,EAAA,CACAqK,cAAmBG,EACnBC,CAAAA,CAAmCd,CACrC,MAAA,CAAA,GAAA,MAAAM,EAAAI,EAAA,EAAAH,CAAA,EAAAN,CAAA,CACA,CACA,OAAAK,EAAkBA,CAAAA,EAAAA,KAASI,GAAY,CACzC/C,EAAA,OAAA,GACO2C,EAAAA,QAAe,CAAAL,MACA,CACdtC,MAAQnH,EAAOoJ,GAAMK,EAAA,GAAA5J,CAAA,EACvBE,EAAa,sBAAoBgK,EAAA,CACjC5C,CAAAA,UAEQhH,MACR,CACF,MAAAkK,GAAAE,GAAA,CAAAjB,EAAA7H,IAEIA,EAAQ,GAAA,SAAA,MAAA6H,CAAA,CACZvJ,ECzJN,SAASyK,GAAmB7G,EAAM,CAChC,KAAM,CAAE8G,SAAAA,EAAW,CAAE,EAAE5K,SAAAA,CAAS,EAAI8D,GAAQ,CAAA,EAC5C,OAAQxD,GAAM,OACZ,GAAI,CAAEuK,OAAAA,CAAQ,EAAGvK,EAEjB,GADAuK,EAASA,EAAOC,QAAQ,GAAG,EACvB,EAACD,EACL,GAAIA,EAAOE,UAAUC,SAAS,OAAO,EAAG,CACtC,MAAMC,GACJJ,EAAOK,cAAc,MAAM,GAAKL,GAChC3F,UAAUC,OACNgG,EAAWF,EAAW7J,QAAQ,KAAM,EAAE,EACtCC,EAAMwJ,EAAOO,aAAa,MAAM,EAChCC,EAAUT,EAAS/L,KACtBwM,GACCA,EAAQF,WAAaA,GACrBE,EAAQC,OAASH,GACjBE,EAAQhK,MAAQA,CAAG,EAEvB,GAAIgK,EACF/K,EAAEiL,eAAc,EAChBjL,EAAEkL,gBAAe,EACjBtE,EAAOqB,YAAc,CACnBlJ,QAASgM,EAAQC,KACjBtL,SAAAA,WAEO,CAAC,SAASmB,KAAK8J,CAAU,EAAG,CACrC/K,EAAAA,eAA+B,EAC/BI,EAAEiL,gBAAgB,EAClBjL,UAAmB,aAAA,MAAA,EACnB4G,cAAgC,CAC1B,UACJ7H,SAAAA,CACAW,EAEJ,SAAA6K,EAAA,UAAA,SAAA,SAAA,EAAA,CACDvK,EAAA,eAAiByK,EAChBzK,EAAEiL,gBAAgB,EAClBjL,UAAmB,UAAA,QAAA,KAAA,EAAA,EAAA,OACbmL,EAAYzL,OAAWoB,OAAiBqK,IAAO,OAAAA,IACrD,SAAa,KAAGzL,WACJ,cAAA6K,EAAA,IAAA,YAAA,MAAEa,EAAAA,eAAAA,EAAQpL,EAAE,gBAAA,EACxBqL,SAASC,KAAOF,IAAOxE,EAAA,cAAA2D,EAAA,IAAA,EAAA,QC3C7B,SAAwBgB,GAAcC,EAAK,CAClCC,OAAAA,KAAKC,aAAa,QAAS,CAChCC,SAAU,SAAA,CACX,EAAEC,OAAOJ,CAAG,CACf,CCFA,MAAMK,GAAQ,CACZC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,IAAK,GACLC,KAAM,EACR,EAEA,SAASC,GAAO,CAAErL,IAAAA,EAAKsL,KAAAA,EAAMC,IAAAA,EAAM,GAAI,GAAGC,CAAM,EAAG,CACjDF,OAAAA,EAAOR,GAAMQ,CAAI,GAAKA,GAAQR,GAAME,EAElCS,EAAA,OAAA,CACE,MAAM,SACN,MAAO,CACLC,MAAOJ,EACPK,OAAQL,CACV,EACA,MAAOC,EAAI,GACPC,EAAK,SAER,CAAC,CAACxL,GACDyL,EAAA,MAAA,CAAK,IAAKzL,EAAK,MAAOsL,EAAM,OAAQA,EAAM,IAAAC,EAAU,QAAQ,MAAA,CAAM,CAAA,CAE/D,CAEX,CC1BA,MAAMT,GAAQ,CACZC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,IAAK,EACP,EAEMS,GAAQ,CACZC,EAAG,sBACHC,MAAO,sBACPC,SAAU,yBACV,eAAgB,6BAChBC,SAAU,2BACVC,OAAQ,uBACR,aAAc,2BACd,cAAe,4BACf,WAAY,yBACZ,aAAc,2BACdC,MAAO,sBACPC,KAAM,qBACNC,OAAQ,uBACR,YAAa,0BACb,WAAY,sBACZC,QAAS,qBACTC,QAAS,uBACTnG,KAAM,uBACNoG,aAAc,6BACdC,OAAQ,4BACR,aAAc,yBACdC,KAAM,CAAC,0BAA2B,OAAO,EACzCC,OAAQ,uBACRC,MAAO,0BACPC,GAAI,mBACJC,WAAY,2BACZC,OAAQ,yBACRC,KAAM,2BACNC,KAAM,uBACNC,SAAU,8BACVC,OAAQ,8BACRC,MAAO,CAAC,8BAA+B,QAAQ,EAC/CC,KAAM,2BACN,eAAgB,qBAChB,gBAAiB,sBACjBC,MAAO,CAAC,8BAA+B,SAAU,YAAY,EAC7DC,OAAQ,sBACRC,MAAO,sBACPC,IAAK,0BACLC,KAAM,uBACNC,KAAM,2BACNC,OAAQ,yBACRC,QAAS,wBACTlQ,KAAM,4BACNmQ,SAAU,0BACVC,KAAM,uBACNC,UAAW,qBACXC,IAAK,oBACLC,IAAK,sBACLhL,KAAM,uBACNiL,QAAS,wBACTC,MAAO,uBACT,EAEMC,47oNAEN,SAASC,EAAK,CAAEC,KAAAA,EAAMhD,KAAAA,EAAO,IAAKC,IAAAA,EAAKgD,MAAAA,EAAOC,MAAOC,EAAY,EAAG,EAAG,CACrE,GAAI,CAACH,EAAa,OAAA,KAEZI,MAAAA,EAAW5D,GAAMQ,CAAI,EACvBqD,IAAAA,EAAW/C,GAAM0C,CAAI,EACrBM,EAAQC,EACR/L,MAAMgM,QAAQH,CAAQ,IACvBA,CAAAA,EAAUC,EAAQC,CAAI,EAAIF,GAG7B,KAAM,CAACI,EAAUC,CAAW,EAAIC,EAAS,IAAI,EAC7CC,OAAAA,EAAU,SAAY,CACpB,MAAMC,EAAOR,EAAS5O,QAAQ,YAAa,EAAE,EACvCuO,EAAO,MAAMF,GAChB,yCAAwCe,MAAS,IAEpDH,EAAYV,EAAKc,OAAO,CAAA,EACvB,CAACT,CAAQ,CAAC,EAGXlD,EAAA,MAAA,CACE,MAAQ,QAAOgD,IACf,MAAOF,GAAShD,EAChB,MAAO,CACLG,MAAQ,GAAEgD,MACV/C,OAAS,GAAE+C,MACXW,QAAS,eACTC,SAAU,SACVC,WAAY,CACd,EAAE,SAEDR,GACCtD,EAAA,MAAA,CACE,MAAOiD,EACP,OAAQA,EACR,QAAU,OAAMK,EAASrD,SAASqD,EAASpD,SAC3C,wBAAyB,CAAE6D,OAAQT,EAASU,IAAK,EACjD,MAAO,CACLC,UAAY,GAAEd,EAAU,UAASA,KAAY,MAC3CC,EAAQ,aAAc,IAE1B,CAAA,CAAE,CAAA,CAGF,CAEV,CCpGA,MAAMc,GAAOC,GAAW,CAACpE,EAAOqE,IAAQ,CAClCC,IAAAA,EACA,GAAA,CACFA,EAAiBC,GAAa,QACnB,CACTxF,IAAAA,GAAQD,SAASC,MAAQ,IAAIxK,QAAQ,KAAM,EAAE,EAAE+D,OAC/CyG,IAAS,KAAWA,EAAA,KAClB,KAAA,CAAEyF,GAAAA,EAAI,GAAGC,CAAczE,EAAAA,EACvB0E,EAAW3F,IAASyF,EAC1B,OACEvE,EAAA,IAAA,CACE,IAAAoE,EACA,KAAO,IAAGG,IAAK,GACXC,EACJ,MAAQ,GAAEzE,EAAMgD,OAAS,MAAM0B,EAAW,YAAc,KACxD,QAAgBjR,GAAA,OACV6Q,IAAgBjK,EAAOE,aAAe+J,IAC1CtE,EAAAA,EAAM2E,UAAN3E,MAAAA,EAAAA,KAAAA,EAAgBvM,EAClB,CAAA,CACA,CAEN,CAAC,01mBCvBKmR,GAAcC,GAAY,YAAa,cAAc,EAIrDC,GAAS,CACb/R,IAAK,CAACO,EAAKyR,IAAQhS,GAAIO,EAAKyR,EAAKH,EAAW,EAC5CtS,IAAMgB,GAAQhB,GAAIgB,EAAKsR,EAAW,EAClCI,QAAUC,GAASD,GAAQC,EAAML,EAAW,EAC5C5Q,IAAMV,GAAQU,GAAIV,EAAKsR,EAAW,EAClCM,QAAUD,GAASC,GAAQD,EAAML,EAAW,EAC5CO,MAAO,IAAMA,GAAMP,EAAW,EAC9BK,KAAM,IAAMA,GAAKL,EAAW,CAC9B,EAEeQ,GAAA,CACbN,OAAAA,EACF,EC3Be,SAASO,GAAYpO,EAAM,CACxC,MAAMzC,EAAM,IAAI8Q,IAAI,YAAaC,OAAOzG,QAAQ,EAC1C,CAAEoB,MAAOsF,EAAarF,OAAQsF,GAAiBF,OAAOG,OACtDC,EAAOC,KAAKC,IAAI,GAAIL,EAAc,KAAO,CAAC,EAC1CM,EAAMF,KAAKC,IAAI,GAAIJ,EAAe,KAAO,CAAC,EAC1CvF,EAAQ0F,KAAKG,IAAIP,EAAa,GAAG,EACjCrF,EAASyF,KAAKG,IAAIN,EAAc,GAAG,EACnCO,EAAS/O,EAAKgP,KAAOL,KAAKM,OAAM,EAChCC,EAASZ,OAAOa,KACpB5R,EACA,UAAYwR,EACX,SAAQ9F,YAAgBC,UAAewF,SAAYG,GAAK,EAG3D,OAAIK,IAKFA,EAAOE,YAAcpP,GAGhBkP,CACT,sDCjBMG,GAAgB,CAAA,EAEtB,SAASC,GAASC,EAAS,CACzB,GAAI,CACF,KAAM,CAAEC,QAAAA,EAASnR,OAAAA,CAAQ,EAAGrC,GAAkB,EACxCK,EAAO,GAAEgC,KAAUkR,IACzB,GAAIF,GAAchT,CAAG,EAAG,OAAOgT,GAAchT,CAAG,EAChD,MAAMoT,EAAQC,GAASH,CAAO,EAC9B,OAAKE,EACGJ,GAAchT,CAAG,EAAIsT,GAAAA,UAAUH,EAASC,EAAO,CACrDG,kBAAmB,GACnBC,MAAO,EACT,CAAC,EAJkB,EAKpB,MAAC,CACA,MAAO,EACT,CACF,CCpBA,MAAMC,GAAO,IAAM,CAAA,EAEnB,SAASC,GAAYC,EAAUC,EAAOC,EAAW,CAC/C,MAAMC,EAAgBC,GAAON,EAAI,EAEjCrD,EAAU,IAAM,CACd0D,EAAcE,QAAUL,CACzB,EAAE,CAAE,CAAA,EAELvD,EAAU,IAAM,CACV,CAACyD,GAAaD,IAAU,MAAQA,IAAU,IAC9CE,EAAcE,QAAO,CACvB,EAAG,CAACH,CAAS,CAAC,EAEdzD,EAAU,IAAM,CACd,GAAIwD,IAAU,MAAQA,IAAU,GAAO,OAEvC,MAAMvV,EAAK4V,YADE,IAAMH,EAAcE,UACJJ,CAAK,EAClC,MAAO,IAAMM,cAAc7V,CAAE,CAC/B,EAAG,CAACuV,CAAK,CAAC,CACZ,CCtBA,MAAeO,GAAA,CACbC,OAAQ,QACRC,SAAU,QACVC,QAAS,OACTC,OAAQ,SACV,ECHA,SAASC,GAAO,CAAEC,OAAAA,EAAQC,OAAAA,CAAO,EAAG,CAClC,OACE/H,EAAA,MAAA,CACE,MAAQ,oBAAmB8H,EAAS,SAAW,MAC7CC,EAAS,SAAW,KACnB,SAEH/H,EAAA,MAAA,CAAK,MAAM,QAAA,CAAQ,CAAA,CACf,CAEV,CCPA,MAAMgI,GAAkBpR,SAASqR,eAAe,iBAAiB,EAEjE,SAASC,GAAM,CAAEC,SAAAA,EAAUzD,QAAAA,EAAS3B,MAAOC,CAAU,EAAG,CACtD,GAAI,CAACmF,EAAiB,OAAA,KAEtB,MAAMC,EAAWhB,KACjB3D,EAAU,IAAM,CACV4E,IAAAA,EAAQC,WAAW,IAAM,OAC3B,MAAMC,GAAeH,EAAAA,EAASf,UAATe,YAAAA,EAAkBhK,cAAc,mBACjDmK,GACFA,EAAaC,MAAO,GAErB,GAAG,EACC,MAAA,IAAMC,aAAaJ,CAAK,CACjC,EAAG,CAAE,CAAA,EAECH,MAAAA,EACJlI,EAAA,MAAA,CAAK,IAAKoI,EAAU,UAAApF,EAAsB,QAAA0B,EAAiB,SAAAyD,CAAA,CAG5D,EAEMO,OAAAA,GAAaR,EAAOF,EAAe,CAG5C,CCvBA,SAASW,GAAS,CAChBpW,QAAAA,EACAW,SAAAA,EACA0V,WAAAA,EACAC,SAAAA,EACAC,MAAAA,EACAtH,SAAAA,EACAkD,QAAAA,CACF,EAAG,CACK,KAAA,CAAElG,KAAAA,EAAMuK,OAAAA,EAAQC,aAAAA,EAActX,GAAAA,EAAI6C,IAAAA,EAAK0U,YAAAA,EAAa7S,OAAAA,CAAW7D,EAAAA,EACjE,GAAA,CAAE8L,SAAAA,CAAa9L,EAAAA,EAEb2W,MAAAA,EAAuBhT,GAAY+S,EAAa7S,CAAM,EAEtD+S,EAAkB9K,EAASlL,YAAa,EAACkF,KAAM,EAC/C+Q,GAAsBH,GAAe,IAAI9V,YAAAA,EAAckF,OACvDgR,EAAuBD,EAC1B9U,QAAQ,oCAAqC,EAAE,EAC/CA,QAAQ,OAAQ,EAAE,EAClBA,QAAQ,cAAe,EAAE,EAE5B,MACE,CAACwU,IACAK,IAAoBC,GACnBD,IAAoBE,KAEXhL,EAAA,MAIXiL,EAAA,IAAA,CACE,MAAQ,aAAYR,EAAQ,QAAU,KACtC,KAAMvU,EACN,OAAQiN,EAAW,SAAW,KAC9B,MAAQ,IAAGhD,IACX,QAAgBhL,GAAA,CACVgO,GAAAA,CAAAA,EAEAkD,IADJlR,EAAEiL,eAAgB,EACdiG,EAAS,OAAOA,EAAQlR,CAAC,EAC7B4G,EAAOqB,YAAc,CACnBlJ,QAAAA,EACAW,SAAAA,CAAAA,EAEJ,EAAE,SAAA,CAED0V,GACCU,EAAAC,EAAA,CAAA,SAAA,CACEvJ,EAACJ,GAAM,CAAC,IAAKmJ,CAAO,CAAA,EAAI,GAAG,CAAA,CAAA,EAG9BE,GAAe,CAACH,EACfQ,EAAAC,EAAA,CAAA,SACE,CAAAvJ,EAAA,IAAA,CACE,wBAAyB,CACvB+D,OAAQmF,CACV,CAAE,CAAA,EAEH,CAACL,GAAYxK,GACZiL,EAAAC,EAAA,CAAA,SAAA,CACG,IACDD,EAAA,IAAA,CAAA,SAAA,CAAA,IAAKjL,CAAQ,CAAA,CAAK,CAAA,CAAA,CAErB,CAAA,CAAA,CACA,EACDyK,EACFQ,EAAA,IAAA,CAAA,SAAA,CAAA,IAAKjL,CAAQ,CAAA,CAAA,EAEbiL,EAAA,IAAA,CAAA,SAAA,CAAA,IAAKjL,CAAQ,CAAA,CACd,EACAwK,GACCS,EAAAC,EAAA,CAAA,SAAA,CACEvJ,WACAsJ,EAAA,IAAA,CAAA,SAAA,CAAA,IAAK9K,CAAI,CAAA,CAAK,CAAA,CAAA,CAEjB,CAAA,CAAA,CACC,CAER,CCpFA,MAAMgL,GAAM5S,SAASC,cAAc,KAAK,EACzB,SAAS4S,GAAkB5R,EAAM,CAC9C,OAAKA,GACL2R,GAAIpS,UAAYS,EACT2R,GAAIpR,UAAU/B,QAFH,CAGpB,CCHA,SAASqT,GAAU3J,EAAO,CACpB,OAAOA,GAAU,WACnBA,EAAQ,CAAE5J,KAAM4J,IAElB,KAAM,CAAE2E,QAAAA,EAAU,IAAM,CAAE,EAAEuC,MAAAA,EAAO,GAAG0C,CAAM,EAAG5J,EACzC6J,EAAQC,GAAS,CACrB7G,UAAW,aACX8G,QAAS,SACTC,SAAU,SACV,GAAGJ,EACHjF,QAAS,IAAM,CACbA,EAAQkF,CAAK,CACf,CACF,CAAC,EACG3C,EACFqB,WAAW,IAAM,CACfsB,EAAMF,UAAS,CAChB,EAAEzC,CAAK,EAER2C,EAAMF,UAAS,CAEnB,CCRA,SAASM,GAAM,CAAEC,MAAAA,EAAOC,aAAAA,EAAcC,YAAAA,EAAazF,QAAAA,EAAU,IAAM,CAAC,CAAE,EAAG,CACjE,KAAA,CAAE0F,SAAAA,EAAUC,YAAAA,EAAaC,KAAAA,EAAMC,WAAAA,EAAYC,UAAAA,EAAWjW,IAAAA,EAAKkW,KAAAA,CAC/DR,EAAAA,EACI,CAAES,SAAAA,EAAW,CAAC,EAAGC,MAAAA,EAAOnC,MAAAA,CAAAA,EAAU8B,GAAQ,CAAA,EAE1CrK,EAAQiK,EAAeQ,GAAAA,YAAAA,EAAUzK,MAAQ0K,GAAAA,YAAAA,EAAO1K,MAChDC,EAASgK,EAAeQ,GAAAA,YAAAA,EAAUxK,OAASyK,GAAAA,YAAAA,EAAOzK,OAClD0K,EAAWV,EAAe3V,EAAMgW,EAEhCM,EAAkBT,EAAWU,GAAwBV,CAAQ,EAAI,KAEjEW,EAAW3D,KAEb4D,IAAAA,EACJ,GAAIxC,EAAO,CAMT,MAAMpI,GAAMoI,EAAMpI,EAAI,GAAK,EAAK,IAC1B6K,GAAM,EAAIzC,EAAMyC,GAAK,EAAK,IAChCD,EAA2B,GAAE5K,EAAE8K,QAAQ,CAAC,MAAMD,EAAEC,QAAQ,CAAC,IAC3D,CAEA,GAAIT,IAAS,SAAYA,IAAS,WAAaF,GAAchW,EAE3D,OACEyL,EAAA,MAAA,CACE,MAAQ,oBACR,QAAA0E,EACA,MACEwF,GAAgB,CACdiB,gBAAkB,OAAMZ,KACxBa,eAAgB,UAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,YAAc,GAAEtL,KAASC,IACzBD,MAAAA,EACAC,OAAAA,EACAsL,SAAU,OACVC,UAAW,OACX7H,QAAS,OACT8H,eAAgB,SAChBC,WAAY,QACd,EACD,SAED3L,EAAA,MAAA,CACE,IAAK4K,EACL,IAAKP,EACL,MAAApK,EACA,OAAAC,EACA,QAASgK,EAAe,QAAU,OAClC,MACE,CAACA,GAAgB,CACf0B,gBACEf,GAAoB,OAAMA,EAAgB5R,KAAK,GAAG,KACpDqS,mBAAoBN,GAA2B,QACjD,CAAA,CACD,CAAA,CAEC,EAECP,GAAAA,IAAS,QAAUA,IAAS,QAAS,CACxCoB,MAAAA,EAAgBnB,EAASoB,SAAW,GACpCC,EAAQtB,IAAS,QAAUoB,EAE3BG,EAAWtB,EAASoB,SAAW,GAC/BG,EAAoBC,GAAexB,EAASoB,QAAQ,EACpDK,EAAe,CAACjC,GAAgB,CAACC,GAAe4B,EAChDK,EAAiB,CAAClC,GAAgBC,GAAe4B,EACvD,OACE/L,EAAA,MAAA,CACE,MAAQ,eAAc+L,EAAQ,MAAQ,WACpCK,EAAiB,gBAAkB,KAErC,0BAAyBH,EACzB,aAAYF,GAAS,CAAC7B,GAAgB,CAACkC,EAAiB,MAAQ,GAChE,MAAO,CACLR,gBACEf,GAAoB,OAAMA,EAAgB5R,KAAK,GAAG,IACtD,EACA,QAAgBzF,GAAA,CACd,GAAI2Y,EACE,GAAA,CACFpB,EAAS1D,QAAQgF,cACN,CAEf3H,EAAQlR,CAAC,CACX,EACA,aAAc,IAAM,CAClB,GAAI2Y,EACE,GAAA,CACFpB,EAAS1D,QAAQiF,aACN,CAEjB,EACA,aAAc,IAAM,CAClB,GAAIH,EACE,GAAA,CACFpB,EAAS1D,QAAQgF,cACN,CAEjB,EAAE,SAEDnC,GAAgBkC,EACfpM,EAAA,MAAA,CACE,MAAO,CACLC,MAAO,OACPC,OAAQ,MACV,EACA,wBAAyB,CACvB6D,OAAS;AAAA;AAAA,uBAEAxP;AAAAA,0BACGgW;AAAAA,yBACDtK;AAAAA,0BACCC;AAAAA;AAAAA;AAAAA,yBAGD6L;AAAAA,kBACPA,EAAQ,GAAK;AAAA;AAAA,wBAEPC;AAAAA,kBAEND,EACI,wDACA;AAAA;AAAA,aAIV,CAAA,CACA,EACAA,EACF/L,EAAA,QAAA,CACE,IAAK+K,EACL,IAAKxW,EACL,OAAQgW,EACR,MAAAtK,EACA,OAAAC,EACA,QAAQ,OAER,YAAW,GACX,KAAI,GACJ,MAAK,EAAA,CAAA,EAGPF,EAAA,MAAA,CACE,IAAKuK,EACL,IAAKF,EACL,MAAApK,EACA,OAAAC,EACA,QAAQ,MAAA,CAAM,CAAA,CAGd,CAAA,SAECuK,IAAS,QAAS,CACrBwB,MAAAA,EAAoBC,GAAexB,EAASoB,QAAQ,EAC1D,OACE9L,EAAA,MAAA,CACE,MAAM,oBACN,0BAAyBiM,EACzB,QAAAvH,EAAiB,SAEhBwF,EACClK,EAAA,QAAA,CAAO,IAAKwK,GAAajW,EAAK,QAAQ,OAAO,SAAQ,GAAC,SAAQ,EAAA,CAAG,EAC/DgW,EACFvK,EAAA,MAAA,CACE,IAAKuK,EACL,IAAKF,EACL,MAAApK,EACA,OAAAC,EACA,QAAQ,MAAM,CAAA,EAEd,IAAA,CACA,CAEV,CACF,CC/LA,SAASqM,GAASxM,EAAO,CACvB,OACEC,EAACwM,GAAa,CAAA,SACX,CAAC,CAAEpI,IAAAA,EAAKqI,UAAAA,CAAAA,IACPzM,EAACkE,GAAI,CAAA,GACCnE,EACJ,IAAAqE,EACA,QAAS,CAAC,CAAEsI,OAAAA,CACVD,IAAAA,EAAUC,IAAW,EAAI,QAAUC,MAAS,CAAA,CAC7C,CAAA,CAGS,CAEpB,CCNAC,GAAMC,OAAOC,EAAY,EACzBF,GAAMC,OAAOE,EAAe,EAC5BH,GAAMC,OAAOG,EAAY,EAEzB,MAAMC,GAAM,IAAIhO,KAAKiO,eAErB,SAAwBC,GAAa,CAAEC,SAAAA,EAAUhO,OAAAA,CAAO,EAAG,CACzD,GAAI,CAACgO,EAAiB,OAAA,KAChBC,MAAAA,EAAOT,GAAMQ,CAAQ,EACrB,CAACE,EAASC,CAAU,EAAI/J,EAAS,EAAE,EAEzCC,OAAAA,EAAU,IAAM,CACd,IAAI4E,EAAOmF,EACX,MAAMC,EAAS,IAAM,CACnBD,EAAMxQ,sBAAsB,IAAM,CAC5B0Q,IAAAA,EACJ,GAAItO,IAAW,QAAS,CAEtB,MAAMuO,EAAMf,KACIe,EAAIC,KAAKP,EAAM,KAAK,GACrB,GAAKM,EAAIE,SAAWR,EAAKQ,OACtCH,EAAML,EAAKS,UAEXJ,EAAMT,GAAI7N,OAAOiO,EAAKU,OAAQ,CAAA,CAChC,MAEAL,EAAML,EAAKW,UAEbT,EAAWG,CAAG,EAENpF,EAAAA,WAAWmF,EAAQ,GAAM,CAAA,CAClC,CAAA,EAEHD,OAAAA,EAAMxQ,sBAAsByQ,CAAM,EAC3B,IAAM,CACXhF,aAAaJ,CAAK,EAClB4F,qBAAqBT,CAAG,CAAA,CAC1B,EACC,CAACH,CAAI,CAAC,EAGPrN,EAAA,OAAA,CAAM,SAAUqN,EAAKa,YAAc,EAAC,MAAOb,EAAKjO,OAAO,MAAM,EAAE,SAC5DkO,CAAAA,CACI,CAEX,CC1BA,MAAMa,GAAWC,GAAU,CACzBC,MAAO,EACPC,SAAU,GACZ,CAAC,EAED,SAASC,GAAa7c,EAAIoD,EAAO,CAC3B,GAAA,CACF,OAAOA,EAAMG,GAAGtD,SAASqD,MAAMtD,CAAE,QAC1B8B,GACAiK,OAAAA,QAAQ+Q,OAAOhb,CAAC,CACzB,CACF,CACA,MAAMib,GAAkB7Q,GAAI2Q,EAAY,EAElCG,GAAiB,CACrBjH,OAAQ,SACRC,SAAU,WACVC,QAAS,iBACTC,OAAQ,QACV,EAEA,SAAS+G,GAAO,CACdhS,SAAAA,EACAG,OAAAA,EACA5J,SAAU+J,EACV2R,cAAAA,EACA/O,KAAAA,EAAO,IACPgP,SAAAA,EACAC,SAAAA,EACAC,kBAAAA,CACF,EAAG,WACD,GAAIF,EACF,OACEvF,EAAA,MAAA,CAAK,MAAM,kBAAiB,SAAA,CAC1BtJ,EAACJ,GAAM,CAAC,KAAK,KAAA,CAAK,EAClB0J,EAAA,MAAA,CAAK,MAAM,YAAW,SACpB,CAAAtJ,EAAA,MAAA,CAAK,MAAM,OAAM,SAAA,cAAA,CAAA,EACjBA,EAAA,MAAA,CAAK,MAAM,oBAAmB,SAC5BA,EAAA,MAAA,CAAK,MAAM,UAAS,SAClBA,EAAA,IAAA,CAAA,SAAA,eAAA,CAAA,CAAA,CAAoB,CAAA,CAElB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGJ,KAAA,CAAElL,MAAAA,EAAO5B,SAAAA,EAAU8C,cAAAA,GAAkBL,GAAI,CAAEzC,SAAU+J,CAAAA,CAAc,EACnE,CAAE/J,SAAUH,GAAoB4C,GAAK,EACrCqZ,EAAe9b,IAAaH,EAE5Bkc,EAAOxS,GAAUE,EAAUzJ,CAAQ,EACnCgc,EAAaC,GAAY/U,CAAM,EAIrC,GAHK0C,IACHA,EAASoS,EAAW1U,SAASyU,CAAI,GAAKC,EAAW1U,SAASmC,CAAQ,GAEhE,CAACG,EACI,OAAA,KAGH,KAAA,CACJvK,QAAS,CACPiM,KAAAA,EACAuK,OAAAA,EACAC,aAAAA,EACAtX,GAAI0d,EACJ7a,IAAK8a,EACLpG,YAAAA,EACA5K,SAAAA,EACAjI,OAAQkZ,CACV,EACA5d,GAAAA,EACA6d,aAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,WAAAA,EACAC,gBAAAA,EACAC,WAAAA,EACA5O,KAAAA,GACA6O,MAAAA,GACAC,UAAAA,GACAC,YAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,SAAAA,GACAC,SAAAA,GACAC,KAAAA,GACAC,UAAAA,GACAhT,YAAAA,GACAC,mBAAAA,GACAvG,QAAAA,GACA+G,SAAAA,GACAwS,iBAAAA,GACAC,OAAAA,GACArb,IAAAA,GACAX,IAAAA,GACA6B,OAAAA,GAEAoa,SAAAA,GACAC,QAAAA,EACE3T,EAAAA,EAEJ1J,GAAc,IAAA,KAAiB1B,EAAIoL,EAE7B4T,EAAAA,IAAoBC,KAAAA,EAAc,EAClCC,EAAAA,GAAmBD,IAAAA,CAEnBE,MAAAA,EAAuBjf,EAAA,QAAA,IAAA,gBAAA,EAC3B,OAAuBA,GAAAA,IAAkCwd,CACzD,EAAA,CAAAA,IACF,IAAIA,EAAUtR,IAAA,YAAAA,GAAA,KAAAS,GAAAA,EAAA,KAAAjB,IAEVwT,IAAgC/e,KACrBwM,IAEXuS,EAAwBxT,CACJ,IAAA+R,EAAE9a,SAAAA,EAAiB8J,YAAAA,CAAAA,GAC3C,KAAA,CAAA0S,EAAAC,CAAA,EAAAxN,EAAAsN,CAAA,EACA,GAAA,CAAAlC,GAAOmC,CAAAA,GAAqCzT,GAAgC,CAC5E,MAAKsR,EAAAA,EAAkBmC,SAAAA,EAAwC,EACvDxe,EACNye,EAAaze,CAAA,EAENkc,GAAAnR,GAAAxI,CAAA,EAAA,KAAAmc,GAAA,CACLxC,EAAoC3Z,CAAAA,EAEhCkc,EAAAA,SAAAA,EAA2B,EAAA,EAAAC,CAC3B7W,CAAOzI,EAAAA,MAAAA,GAAAA,CAAuBY,CAC/B,CAEL,CACF,MAAA2e,EAAA,CAAA,CAAAhC,EAAA,SAAAxd,CAAA,GAAA,GAEMwf,EAAc1d,GAAa4H,CAE3B+V,UACJ,EACE/d,GAAAA,GACF,OAAAkW,EAAA,MAAA,CACF,MAAA,gBAEIiH,aAAQY,EACV,UACE7H,EAAA,MAAA,CAAW,MAAA,kBAA8B6H,SAAAA,CAAAA,EAAAA,EAAAA,CAAW,KAClD,SAAW,KAAA,GAAA,CAAiB,EAAA,IAAAnR,EAC1B2I,GAAK,CAAC,QAAK7L,EAAA,QAAS,SAAA5J,EAAQ,WAC3B,EAAQ,CAAA,eAAiBX,CAAAA,CAAS,EAAAyN,EAAA2O,GAAA,CAAA,OAA8B4B,GAAA,SAAArd,EAGnE,KAAA2M,EACE,kBAAAkP,CAAQwB,CACR,CAAA,CAAA,CACA,EACA,KACA,CAAAa,EAAAC,CAAA,EAAA7N,EAAA,EAAA,EACE8N,GAAA,IAAA,KAAA,EAAA,YAAA,EAEVC,GAAAnK,GAAA,IAAA,EAEAoK,GAAOJ,CAEP,IAAoBG,GAEdA,SAAAA,IAAAA,CACY,GAAAA,GAAA,QAAA,CACXA,KAAAA,gBAECA,aAAAA,CACF,EAAMA,GAAA,QAAEE,GAAAA,QAAAA,UAAAA,OAAAA,YAAAA,EAAAA,CAAAA,CAAcC,CAAAA,CACtBH,CAAAA,EAIF,MAAAI,EAAAvK,GAAA,IAAA,EACFoK,GAAA,CACD,IAAAG,EACKA,SAAAA,IAAAA,CACY,GAAAA,EAAA,QAAA,CACXA,KAAAA,gBAECA,aAAAA,CACF,EAAMA,EAAA,QAAEF,EAAAA,QAAAA,UAAAA,OAAAA,YAAAA,EAAAA,CAAAA,CAAcC,CAAAA,CACtBC,CAAAA,EAIF,MAAAC,GAAA,cACFC,GAAAzK,GAAA,IAAA,EACD0K,GAAA,gGACKF,GAAe,IAAA,KAAA,OAAA7B,EAAA,OAAAtG,GAAA1S,EAAA,GAAA,GAAA,GAAA,EAEf8a,GAAAA,wBAAuB,EAAA,gBAAA,EAAA,OAEvBC,GAAiC,KAAA,eAAAC,GAAA,CAKvC,QAAmB9S,YAAmB,IAAAqS,UAAqBS,UACrDC,MAAAA,QAA8C,IAAA,UAElDnE,KAAM6C,UACNuB,OAAO,SAAA,CAAA,EACF,OAAAvB,EAAA,EACCwB,GAAAhC,IAAA,KAAA,eAAA6B,GAAA,CAEL3S,KAAAA,EAAoB,YAAA,IAAAkS,GAAA,OAAA,UACvB,MACEpB,QAC4B,IAAA,UAE1BrC,KAAM+C,UACNqB,OAAO,SAAA,CAAA,EACF,OAAArB,CAAA,EACCuB,GAAAtS,IAAA,IACEuS,GAAApc,GAAAga,IAAA,SACP5Q,GAAmB,IAAA,CAExB,GAAM+S,IAAuB,CAAAnc,EAEvBoc,OAAAA,MAAWpc,EAAgC,EAG3CoE,EAAiB,YAAA,CACnB,cAA0C0C,CAAA,CAE5C1C,EACiB0C,GAAAA,SAAAA,CACjB,GAAA,CAAAkS,GAAA,CAAAhZ,EACF,OAAA,MAAA8b,EAAA,EAGM,GAAA,CACF,GAAA,CAAAtC,GAEE,CADJ,QAAA,kBAAA,EAEM,OAQC1S,GALD1C,EAAA,SAAA6U,CAAA,EAAA,CACF,GAAAnS,EACF,UAAA,CAAA0S,EAEOhV,aAASyU,GAAQO,EAAA,GAAA,EAAA,IAEVA,CACZC,MAAAA,EAA8BD,MAAAA,EAAAA,GAAAA,SAAY,SAAK9d,CAAA,EACjDiM,GAAA0U,EAAAnf,CAAA,CACA,KAAe,CACb,MAAMmf,EAAY,MAAMvd,EAAMG,GAAGuF,SAAS8X,QAAS5gB,EACnDiM,GAAW0U,EAAWnf,CAAQ,CACzB,CACL,MAAA,CACAyK,EAAAA,YAAsBzK,CACxB,CAAA,EAEAE,GAAe,SAAA,CAERoH,GAAAA,CAAAA,IAAaxE,EACtB,OAAA,MAAA8b,EAAA,EAGF,GAAMS,CAMsB,GALtBnY,EAAiB,SAAA6U,CAACjZ,EAAe,CACnC,GAAA8G,EACF,WAAA,CAAA4S,EACI,gBAAAC,GAAAD,EAAA,GAAA,EAEFtV,EACK0C,EAAAA,CACH4S,QAAaA,MAAAA,EAAAA,GAAAA,SAAAA,YAAAA,CAAAA,EACbC,GAAAA,EAAoCD,CAAAA,CAAkB,KACxD,CACA,MAAgB2C,EAAA,MAAAvd,EAAA,GAAA,SAAA,UAAApD,CAAA,EACdiM,KAAwB7I,CAAMG,CAC9B0I,CAA8B,MAChC,CACEvD,EAAA,UAAkB,EAAMtF,CACxB6I,CAA8B,KAEhC,SAAA,CACAvK,GAAAA,CAAAA,GAAe,CAAA4C,EAERwE,OAAAA,MAAAA,EAAiBsC,EAE5B,GAAA,CAMM,GAJN1C,YAAmC,EAAA,CAC7B,GAAiB0C,EACnB,WAA0C,CAAA8S,CAAA,EAExCA,EAAA,CAEKpV,MAAAA,EAAa,MAAI1F,EAAA,GAAA,SAAA,WAAApD,CAAA,EACtBiM,GAAGb,EAAAA,CAAAA,CAAAA,MAEL,MAAAuV,EAAA,MAAAvd,EAAA,GAAA,SAAA,SAAApD,CAAA,EACAiM,GAAgB0U,EAAAnf,CAAA,CACd,CACAyK,MAAAA,CACFvD,EAAO,SAAA6U,CAAA,EAAAnS,CACL,CACAa,EACF6U,GAAAlJ,EAAAC,EAAA,CACF,SAAE,CAAA,CAAA4I,IAAA7I,EAAAC,EAAA,CACAnW,YAAeqf,GAAA,CAERjY,SAAAA,CAAAA,SAAiBsC,CAC1B,MAAA,KACF,SAAA,CAAAkD,EAAA4C,EAAA,CAEM4P,KAAAA,GACJxC,CAAA,EACG,KAACmC,GACA,CAAA,EAAA,IACEnS,EAAW,OAAA,CAAA,SACT0O,GAAAsB,CAAA,CAAA,CAAY,CAAA,CAAA,CAAI,EAAA,IAAA1G,EACd,OAAK,CAAC,MAAA,KAAmC,SAAQ,CAAAiG,EAAA,GAAAjG,EAAA,OAAA,CAAM,SACvD,CAAAtJ,EAAA4C,EAAA,CAAA,KAAA,QAAyC,IAAA,UAE3C,KAAA,GAAA,CAAY,EAAA,IAAA5C,EAAA,OAAA,CACTuP,SAAexQ,GAAAwQ,CACd,CAAA,CAAA,CAAA,CACO,CAAA,EAAC,IAAKE,EAAA,GAAAnG,EAAA,OAAA,CAAA,SAAY,CAAAtJ,EAAA4C,EAAA,CAAU,KAAK,SAAM,IAC5C,SAAA,KAAA,GAAiC,CAAS,EAAA,IAAA5C,EAAA,OAAA,CAE3C,SACajB,GAAA0Q,CACd,CAAA,CAAA,CAAA,CACO,CAAA,EAAC,IAAKE,EAAA,GAAArG,EAAA,OAAA,CAAA,SAAa,CAAAtJ,EAAA4C,EAAA,CAAS,KAAK,QAAM,IAC5C,aAAA,KAAA,GAAiC,CAAS,EAAA,IAAA5C,EAAA,OAAA,CAE3C,SACgBjB,GAAA4Q,CACjB,CAAA,CAAA,CAAA,CACO,CAAA,CAAA,CAAM,CAAA,EAAA3P,EAAY,KAAA,CAAA,CAAA,EAAAgS,EAAA,CAAA,CAAA,EAAA1I,EAAkBiD,GAAA,CAAA,GAAGrZ,EAC5C,IAAAA,OAAAxB,IAAA,MAAAA,IAAA,SAAA,CAAAsO,EAAOjB,GAA6B,KAAS,aAAA,CAAA,EAEhD,uBAAA,CAAA,CAAA,CAAA,CAGa,CAAA,EAElB,CAAA,CAAAmR,IAAS5G,EAAAoJ,GAAA,CAAA,QAAKxf,IAAAA,CAA+Cme,EAC3D3f,CAAC,CAAI,EAAmB,SAAG,CAAAsO,EAAA4C,EAAA,CAElB,KAAA,SAAA,CAGd,EAAEsN,EAAAA,iBAEgB,CAAA,oBAAAlQ,EAAA,KAAA,EAAA,EAAAsJ,EAAA,QAAA,CACb+H,MAAAA,qBACF,SAAA,CAAA,WAAAa,EAAA,CAAA,CAAE,CAAA,CAEG,CAAA,CAAC,CAAc,CAAA,GACpB,CAAAC,IAAA,CAAA,CAAAjC,KAAAlQ,EAAA2S,GAAA,CAAA,CAAA,EAAA,CAAAR,IAAA7I,EAAAC,EAAA,CAAA,SAAA,CAAAD,EAEEoJ,GAAA,CACA,QAAaE,GAAoB,SAAA,CAAA5S,EAAA4C,EAAA,CAAiC,KAAA,OAAA,CAC7D,EAAA5C,EAAA,OAAA,CAGRmS,SAAAA,OAED,CAAA,CAAA,CACW,CAAA,EAAUS,IAAAA,EAAAA,GAAAA,CAAY,QAAA,SACxB,CAAC,GAAK,CACX,MAAAC,GAAA,EAAAV,IAAkBzI,GAAA8F,EAAA,YAAA,SAAA,CAGlB,MAAA,EAEQ,EACF,SAAMqD,CAAa7S,EAAA4C,EAAA,CACnB,KAAI,QACF8G,CAAU8F,EAAAA,EAAAA,OAAAA,CACd,SAAEA,EAAA,UAAA,QAAA,CAAW,CAAA,CAAA,CACf,EAAAlG,EAAAoJ,GAAA,CAAE,QAAA,IAEF,CAAM,GAAK,CACXH,KAAAJ,IAA+CzI,GAAAgG,EAAA,eAAA,YAAA,CAGnD,MAAA,EAEQ,EACe,SAAA,CAAA1P,EAAA4C,EAAA,CACjB,KAAI,OACF8G,CAAUgG,EAAAA,EAAAA,OAAAA,CACd,SAAEA,EAAA,cAAA,WAAA,CAAW,CAAA,CAAA,CACf,EAAApG,EAAAoJ,GAAA,CAAE,QAAA,IAEF,CAAM,GAAK,CACXI,KAAAX,IAAuDzI,GAAAkG,EAAA,eAAA,YAAA,CAEzD,MAAA,EAEQ,EACc,SAAA,CAAA5P,EAAA4C,EAAA,CAChB,KAAI,UACF8G,CAAUkG,EAAAA,EAAAA,OAAAA,CACd,SAAEA,EAAA,aAAA,UAAA,CAAW,CAAA,CACf,CAAA,EAAA5P,EAAA2S,GAAA,CAAA,CAAA,CAAA,CAAA,CAAE,EAAArJ,EAAAoJ,GAED,CAAI,KAAMne,GAAU,OACrB,SAAA,SAAA,CAAAyL,KAA6C,KAAQ,UAAA,CAC5C,EACXA,EAAC,OAAc,CAGnB,SAAS,mBAAA,CAAOzL,CAAAA,CAAAA,CAAAA,EAAY+U,EAAAoJ,GAAA,CAAQ,QAAA,IAClC,CAAM,GAAK,CACX,UAAA,UAAA,UAAAne,EAAA,EAAAmV,GAAA,aAAA,CAA8B,MAAA,CAEhCA,GAAS,qBAAA,EAGD,EACQqJ,SAAAA,CAAAA,EAAAA,EAAAA,CACVrJ,KAAAA,MAAuB,CAAA,WACvB,CACAtW,SAAQ4f,mBACRtJ,CAAAA,CAAAA,CACF,CAAA,GAAA,iCAAA,UAAA7T,GAAA,iCAAA,WAAA,YAAAA,GAAA,eAAA,CACF,IAAAtB,EAAA,KAAE+U,EAAAoJ,GAEG,CAAA,QAAM,IAAA,CACX,GAAA,CAAA,UAAA,MAAA,CAA8B,IAAAne,EAAA,CAEpBmO,CAERnO,MAAAA,CAEA,MAAC,+BAAQ,EAED,EACF0e,SAAAA,CAAAA,EAAgBrQ,EAAA,CACdrO,KAAAA,OAAAA,CAAAA,EACFyL,EAAC,OAAA,CACH,SAAE,QACA5M,CAAAA,CAAAA,CACA8f,CAAAA,EAAAA,GAAqC5J,EAAAC,EAAA,CACvC,SAAA,CAAAvJ,EAAA2S,GAAA,CAAA,CAAA,EAAArJ,EAAAoJ,GAAA,CACF,QAAA,IAAA,CAAEtY,EAEF,YAAK,CAAM,WAAA0C,CAAA,CACX,EAAmB,SAAA,CAAAkD,EAAA4C,EAAA,CAIvB,KAAA,QAAA,CAAA,EAAA5C,EACE,OAAC,UAEgB,MACb5F,CAAAA,CAAAA,CAAqB,CAAA,CAAA,CACP0C,CACd,CAAA,CAAA,CACF,EAAE,OAAAwM,EAAA,UAEG,CAAA,IAAAuI,GAAc,SACnB,KAAA,MAAA,UAAA,CAAAjD,GAAAmC,EAAA,kBAAA,iBAAAf,KAAAS,GAAA,gBAAA,MAAA,CAAA,EAAiB,QAAA,EACR,SAEd,EAAA,OAAA,EAEJ5Q,CAAA,IAED,aACEsR,EACE,SAAKU,CAAAA,IAAAA,KAAAA,EAAAA,MAAAA,CACI,MAAA,eACT,SACE,CAAArC,GAAkBuB,EAAAA,EAAAA,CAGb,MAAA,SACA,KAAA,SACA,KAAA,GAAA,CACC,EAAArB,GAAA1P,EAAA4C,EAAA,CAEMuO,MAAAA,YAEbtR,KAAAA,QACY,KAAA,GAAA,CACR2P,EAAAA,GAAaxP,EAAA4C,EAAC,CAAK,MAAM,WAAS,KAAK,WAAS,KAAK,GAAA,CAAG,EACxD8M,IAAc1P,EAAA4C,EAAK,CAAC,MAAM,MAAY,KAAK,MAAQ,KAAK,GAAA,CAAG,CAAA,CACxC,CAAA,EAAC/C,IAAM,KAAAG,EAAA,IAAA,CAAA,KAAgBqP,EAAA,SAAgB,KAAG,MAClD,IAAA7Q,IAAK,QAAOhL,GAAA,CAAMA,EAAK,eAAA,EAAMA,EAAK,gBAAA,EAAM4G,EAAA,YAAA,CAG9C,QAAA0C,UAEAuS,SAAAA,CAAAA,GAIN,SAAgBrP,EAAAJ,GAAA,CACdpM,IAAkBwV,EAClBxV,KAAmB,KACnB4G,CAAAA,CAAqB,CAAA,EAAAkP,QACH/W,CAChBW,MAAAA,YACF,SAAA,CAAAoW,EAAA,MAAA,CACF,MAAA,OAAE,YAEKX,GAAA,CAAMK,QAAAA,EAAAA,QAAmB,SAAA9V,EAAK,WAAA2M,IAAA,IAGzC,SAAAsS,EAAA,CAAW,EAAA,IAAAtS,IAAA,MAAAtL,GAAAyL,EAAAmT,GAAA,CAAW,OACpB,CAAW,OAAA,SAAA,cAAA,cAAA,GAAA,SAAA,IAAM,EAGb,YACA,QAAA,EACA,gBACA,WAAUhB,QAWI,mBAEb5d,UAEG,WAAQ+U,EAAApF,GAAA,CACNnG,GACEnH,EAAAA,IAAuB1D,OAAAxB,IAAA,UAC3B,QAAA8B,GAAA,CACMA,EAAA,eAAA,EACGA,EAAA,gBAAA,CACA,EACE,MAAA,OACQ,SAAA,CAAAwM,EAAA4C,EAAA,CACnB,KAAA4E,GACOwI,CAAA,EACC9c,IAAAA,GAAeA,CAAAA,UAEjBM,CAAAA,EAAEiL,IAAgBuB,EAAAmN,GAAA,CAClB3Z,SAAmBkd,GACX0C,OAAAA,OAAc,CACxB,CAAA,CAAA,CAAA,EACY,SAAAZ,EAEP,CACH,EAAAlJ,EAAA,QACA,MAAA,OAA8B,SACzB,CAAAtJ,EAAA4C,EAAA,CAAG,KAEV4E,GAAawI,CAAA,EAAA,IAAWU,GAAAA,CAAAA,EAAAA,KAAsB,GAAA,CAAA,EAAU,IAAA1Q,EAAAmN,GAAA,CAE3D,SAAAuD,GAEA8B,OAAAA,OAAAA,CAGH,CAAA,CAAA,CAAA,EAAY,CAAM,CAAA,EAAA,CAAA5D,GACX5O,EAAAuJ,EAAA,CACH,SAAM/B,OAA6B1R,GAAAgH,EAAA,UAAA,YAAAhH,GAAA,KAAAoZ,EAAA,mBAAAD,CAAA,EAAA3F,EAAA,MAAA,CACnC,MAAKoF,sBAAyB,SACzB,CAAA1O,EAAA4C,EAAA,CAAG,KAEV,SAAc,KAAU8N,GAAAA,CAAAA,EAAsB,SAAAxB,EAAA,mBAAAD,CAAA,EAAA,IAAAC,EAAA,mBAAAD,CAAA,MAAA,EAAA,CAAA,CAAA,EAAU,CAAA,CAAA5R,IAAA,CAAA,CAAA0T,IAAA,CAAA,CAAAhB,GAAA,CAAAjS,GAAA,KAAAS,GAE1DA,EAAA,KAAAjB,EACA,IACJsR,EAAAA,MACA,CACGtR,MAAAA,qBAEM,SAAM,CAAA0C,EAAA4C,EAAA,CAAqB,KAAA,OACzB,CAAA,EAAM,IAAA5C,EAAA2I,GAAA,CAAS,QAAKoI,EAAG,SAAA7d,EAItB,QAOJ,CAAA,CAAA,CAAsBoK,CACvB,CACD,CAAA,EAAKgM,EAAM,MAAA,CAAoB,MAAA,qBACxByG,GAAAD,GAAA,cAAA,MAAAoB,EAAA,eAAA,KAAA,2BAAMnC,EAAAsE,GAAA,EAAA,KAAA,OACXlB,IAASpD,IAAA,CAAA,wBACEgC,GAAAA,CACT,EAAA,SACK,CAAA,CAAA,CAAAhB,GAAAzG,EAAAC,EAAA,CAAA,SACL,CAAAvJ,EAAA,MAAA,CAAA,MAAA,UAMZ,KAAAiQ,MAEIF,GAEF,iBAAA6B,GACA,eACwC,WACD,CACrC,CAAA,KAGA,SAAC7B,CACD,MAAA,iBACEmB,EAAA,WAAA,KACE,KAAM,SACN,QAAMjB,GAAAA,CACDsB,EAAAA,eAAAA,EACWK,EAAAA,gBAAAA,EAAaV,EAEzBnB,OAAAA,EAAAA,SAAAA,CAAAA,EAEN3V,EAAA,SAAA1I,CAAA,EAAA,EAEO,EACL,SAAgB,CAAAsO,EAAA4C,EAAA,CACdpP,KAAkB0d,EAAA,WAAA,WAClB1d,CAAAA,EAAEkL,IAAiBwS,EAAA,YAAA,WAAA,CACnB,CAAA,CAAA,CACE,CAAO9W,EAAAA,EAAAA,MAAAA,CAAkB,MACpB,UACEgB,KAAAA,EACT,IAAAuW,EACF,iBAAAC,GAAE,QAAA/T,GAEG,CAAC,SAAAC,GAA6C,SAAA5K,CACX,CACjC,EAGb,wBAAA,CACQ,OAAA4D,GAAAC,GAAA,CACAkZ,OAAAA,GACD0B,eAAAA,GAAAA,CACWC,EAAAA,iBAAAA,0BAAAA,EAAAA,QAAAA,GAAAA,CACY,QAAA,KAAA5f,EAAA,UAAA,KAAA,CAAA,GAAE8L,EAAAA,gBAAAA,QAAAA,CAAU5K,CAAU,EACzBiE,EAAA,iBAAA,iDAAA,EAAA,QAAAnF,GAAA,IACSA,EAAA,IAAA,GAC9BoE,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,KAAAA,IAAAA,mBACyB,QAAA,CAEvBe,CACoB,CAGdnF,CAAAA,CACF,CAAA,CAAA,CAGJmF,CAKQmc,CAAAA,EAAAA,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CACFC,KAAAA,EACEvhB,KAAAA,GAA0B,SAC5B8c,GAAC,CAAAE,GAAA,CAAAhZ,EACH,SAAAwd,GAAA,CAAApZ,EACD,SAAA6U,CAAA,EAAA,KAAAuE,CACL,EAAA,QACD,IACH1e,EAAA,GAAA,MAAA,MAAAkM,GAAA,EAAA,EAAA,KAAAyS,GAAA,CAECzS,EAAAA,SACIiO,CAAA,EAAA,KAAAwE,CAAA,CACGxD,EAAAA,MAAAA,GAAAA,CAAAA,CACN,EAEA,SAAuByD,GACdlZ,EAAAA,GAASyU,MAAMjO,KAAOwS,GAAAA,GAAAA,CAC/B,QAAAE,CAAA,QACeD,GAAA,CACN3e,EAAAA,SACJE,CAAAA,EAAAA,MAECoF,CAAOI,EAAAA,MAAAA,GAAAA,CAAsBiZ,CAC9B,CACe,CACpB,EAAA,CAAA1D,GAAAD,IAAA,CAAA,CAAAQ,GAAA,QAAAhH,EAAA,SAAA,CACA,uBAAuB4H,EAAA,WAAA,KACrB,KAAA,SAEIwC,QAAAA,GAAAA,CACFlgB,EACCmgB,eAAuB,EACfnZ,EAAAA,gBAAAA,EAERoZ,EAAe,OAAAxZ,EAAA,SAAA1I,CAAA,EAIPoe,EAAAA,SAAAA,CAAAA,EAAAA,EAGR,EACL,SAAgB,CAAA9P,EAAA4C,EAAA,CACdpP,KAAkB0d,EAAA,WAAA,WAClB1d,CAAAA,EAAEkL,oBAAiB,CACnB,CAAA,EAAA,CAAA,CAAA4R,GAAiB,QAAAtQ,EAAA,MAAA,CACR5F,MAAAA,2BAAkBkW,GAAA,UAAAA,GAAA,OAAA,EAAA,YAAA,MAAAA,GAAA,OAAA,EAAA,YAAA,KAAA,SACpBA,GAAA,MAAA,EAAA6B,GAAA,OAAA,CAAA,EAAA,IAAA,CAAAlI,EAAA4J,IAAA7T,EAAAgK,GAAA,CACE5O,MAAAA,EACT,YAAA+W,GACF,QAAA3e,IAAA,CAAEA,GAAA,eAEG,EAACA,GAAA,kBAAgD4G,EAAA,eAAA,CAItC/D,iBAAAA,GAER,MAAAwd,EAIPvD,SAAAA,EAKK,SAAAxB,EAAA,KAAApd,CAAA,EAGE8B,EAAAA,EAAkB,EAAA,CAAA,CAClBA,CAAAA,EAAAA,CAAAA,CAAAA,IAAmB,CAAAsc,IAAA,CAAAC,GAAA,CAAA/O,IAAA,CAAAsP,GAAA,QAAAtQ,EAAA8T,GAAA,CACnB1Z,KAAAA,GACEkW,SAAAA,CAAAA,CAAAA,CAAAA,CACOuD,CACP3gB,EAAAA,IAAAA,EAAAA,EAAAA,CACAyJ,SAAAA,CAAAA,EAAAA,OACF,MAAA,aACF,SAAA,CAAAqD,EAAA4C,EAAA,CAAE,KAZSlR,GAcdse,CAAA,EAGN,KAKQ,CAAC,EAAA,IAAAhQ,EAAA,IAAA,CAAsBjN,KAAAA,GAC7B,OAAA,SAGH,SAAAiN,EAAA,OAAA,CAAA,MACE,UAAW,SAAA0Q,GAAA,YAAA,EAAY,SACrBsB,EAAK,CAAC,CAAmC,CAAA,EAAQhC,IAAAA,EAAAA,EAAAA,CAAc,SAC/D,CAAA,IAAA,KAAAhQ,EAAA4C,EAAA,CAASrO,KAAAA,SAAY,IAAA,QAAA,CAAQ,EAAA,IAAAyL,SAC3B,CAAM,MAAM,SAAU,SAAU0Q,cAA4B,EAAA,QACzDsB,IAAAA,CAAeX,EAAA3f,CAAA,CAIlB,EACG,SACMwgB,EAAK,CAAA,CAAC,CAAK,CAAA,CAAA,CAAa,CAAA,EAAQ5I,EACvC,MAAA,CAAA,MACQ,UACN,SAAA,CAAAtJ,SAAqC,yBAEnCqR,SAAAA,EAAAA,GAAgB,CAClB,MAAA,QAAE,IAEDa,WACI,MAAA,eAEV,KAAA,UAEH,MAAA3C,EAAW,QAAAqD,EAAA,CAAS,CAClB,CAAA,EAAWR,IAAApS,EAAA,MAAA,CAAkB,MAAA,mBACd,SACLA,EAAA+T,GAAA,CACN,QAAIvE,EACJ,MAAM,CAAA,QAAA,SAAA,EACN,IAAK,CAAA,QAAA,SAAA,EACL,MAAOD,gBACP,KAASqD,SAAY,MAAAnD,EAGxB2C,QACCS,EAAA,CAAW,CAAA,CAAkB,EAAA7S,EAAA,OACd,MACFwP,mBACT,SAAQxP,EAAA+T,GAAkB,CAC1B,QAAMrE,EACN,MAAM,CAAA,YAAA,aAAA,EACN,IAAK,CAAA,YAAA,YAAA,EACL,MAAOD,mBACP,KAASoD,QAAY,MAAAlD,EAI3B,QAAA4C,EAAA,CAAW,CAAA,CAAkB,EAAAvS,EAAA,OACd,MACF0P,SACT,SAAQ1P,EAAA+T,GAA0B,CAClC,QAAMnE,EACN,MAAM,CAAA,WAAA,YAAA,EACN,IAAK,CAAA,WAAA,YAAA,EACL,MAAOD,kBACP,KAAS4C,WAAgB,QAAAO,EAAA,CAG7B,CAAA,CAAA,EAAW9S,EAAAmT,GAAA,CAAQ,OAAA,CAEf,OAASvD,SAAAA,cAAAA,cAAAA,GAAAA,SAAAA,IACT,EACA,MAAK,MAAyB,QACxB,EAAA,SACD,OAAA,WACIkD,QAAe,mBAAA,UAG5B,WAAK9S,EAAA,MAAA,CACK,MAAA,SACNjC,SACEnH,EAAAA,SAAuB,CAC3B,KAAA,SACM,MAAA,OACG,MAAA,oBACA,SAAAoJ,EAAA4C,EAAA,CACE,KAAA,OACQ,KAAA,IACnB,IAAA,MACE,CAAW,CAAA,CAAQ,CACjB,CAAA,EACO,SACC4P,EAAA,CAAA,CAAA,CACA,CAAmB,CAAA,CAEpB,CAAA,CAAA,CAAM,CAAA,EAAA,CAAA,CAAApB,GAAYpR,EAAAkI,GAAA,CAAA,QAAA1U,GAAQ,OAAAA,EAAA,SAAMA,EAAA,gBAAA6d,EAAG,EAAA,GAAAxb,EAAAgc,GAG7C,UAH6C,MAAAhc,EAG7C,QAEA2c,EACI,SACHxS,EAAAgU,GAAA,CAET,SAAA5C,EAEF,SAAAle,qBAEmB,IACGM,EAAAA,GAAAA,SAAiB,YAAA4d,CAAA,EAEhCS,QAAAA,WACFR,EAAA,EAAA,GACFxb,EAAAgc,GAAA,UAAA,MAAAhc,EAAA,OAAE,CAEY,CAAA,CACFub,CACV,CAAA,CAAA,CAAA,CAEE,CAA+C,SACjD0C,GAAA,CAAA,KAAA1D,EAEEiB,SAAAA,CACAQ,EAAAA,CACF,KAAA,CAAA,SAAAzH,EACA,MAAAtH,EAGE,YAAAuH,EAEd,KAAAxS,EAEA,aAAAoc,EAAgB7D,WAAAA,EAAMld,MAAAA,EAAY,OAAAgN,EAC1B,MAAAgU,EACJ9J,IAAAA,EACAtH,KAAAA,EACAuH,SAAAA,CACAxS,EAAAA,EACAoc,EAAAA,GAAAA,GAAAA,EAEAhU,EADAkU,EAAAA,GAAAA,IACAlU,QAAAA,GACAC,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,IAAAA,EAuBiB,GAtBjBgU,EAAAA,IAAAA,CACA3f,GAAAA,GAAAA,GAAAA,CAAAA,GACAkW,GAAAA,EAAAA,CAAAA,EAAAA,KAAAA,GAAAA,CACA2J,GAAAA,CAAAA,EACEhE,OASEiE,KAAAA,CACAC,GAAAA,EACAzU,IAAOyU,CAENC,EAAAA,EAEP9Q,EAAgB,IAAA+Q,CAAA,CACd,CAAA,CAEI,EAAA,CAAAH,EAAKI,CAAAA,CAAAA,EAAQJ,GAAAH,EAAA,CACP,MAAA7e,EAAA,IAAA,IAAAd,CAAA,EAAA,SAAA,QAAA,SAAA,EAAA,EAAE7C,OAAAA,EAAAA,IAAAA,CAAAA,KAAI6C,GAAAA,EAAAA,OAAQkgB,EAAAA,KAAAA,SACpBC,IAAAA,+BASF,MAAC,aAAA7U,IACH,SAAA,CAAAG,EAAA,MAAA,CACWkU,MAAAA,sBAQSlU,EAAA,MAAA,CACd3K,IAAAA,EACN,MAAA4K,WAGI,eACI,IAAA,WACgBJ,GAAAA,CAAO,GAE3B,CAAWrM,EAAA,OAAA,MAAA,QAAA,MAAY,MAAA,CAEd0gB,CACL,CAAA,CACA,CAAA,CAAA,EACA5K,EAAQ,MAAA,CAAA,MACJ,iBAAA,UACM9V,EAAM,IAAA,CACV,MAAA,cACAuK,SAAAA,CAAuB,CAAA,EAC3BiC,MAAE,CAAW,MAAA,QACf,SAAA8C,CAAA,CAAE,EAAA9C,EAAA,IAAA,CAGN,MAAA,OAAW,SAAAqK,GAAA4J,GAAAE,CAAA,CAAgB,CAAA,CACzB,CAAA,CAAA,CAAS,CAAA,CAAe9e,KAAM,IAC9BoV,IAAA,QAAA,OAASzK,EAAA,IAAA,CAAA,KAAS8C,EAAK,OACvB,SAAA,IAAS,+BAAM,MAAA,aAAiCqR,SAAenU,EAAA,MAAA,CAC3D,IAAAoU,EACJ,MAAAnU,EAER,OAAAC,EACE,OACEmK,EACQ9V,QAAAA,OACC,MAAA,CACH,OAAA,OACE,YAAA,GAAA0L,KAAAC,GAAY,CAElB,CAAA,CACOkU,CACL,EACA,GAAA3J,IAAA,QAAA,SACcJ,MAAAA,CAAAA,MACN,aAAA,MACD,CAAA,YACG,GAAApK,KAAAC,GACRqL,EACF,wBAAA,CAAE,OAAA1T,CAEF,CAAA,CAER,EAEI,CACQ,SACC8c,GAAA,CACLpJ,KAAAA,EACF,KAAAqJ,EAAA,SAAA9F,EACyB,QAAA+F,EAAUhd,IAAAA,CAAK,EAAA,SAAAid,EACxC,IAAA,CAEN,CACF,EAAA,CAEA,KAAA,CAASH,EAAKI,CAAA,EAAAvR,EAAA,SAAA,EACZxC,CACA4T,QAAAA,EACA9F,UAAAA,OACiB,SAAAkG,YACC,SAAAC,EACjB,MAAAC,EACD,YAAAC,EAEM,WAAAC,CACJC,EAAAA,EACAC,EAAAA,CAAAA,CAAAA,GAAAA,IAAAA,KAAAA,CAAAA,EACA5jB,EAAAA,IAAAA,CACAsjB,IAAAA,EACAO,GAAAA,CAAAA,GAAAA,EAAAA,CACAN,MAAAA,EAAAA,EAAAA,QAAAA,EAAAA,KAAAA,IAAAA,EAAAA,EACAC,EAAAA,IACAC,EAAAA,WAAAA,IAAAA,CACAC,EAAAA,SAAAA,GACEpU,kBAEmB,EAGb+T,EAAM,SAAA,KAETM,KAEH,CACE1gB,MAAAA,IAAAA,CACEogB,aAAAA,CAAoB,CACpB,CACE,EAAA,CAAAM,EAAAG,CAAe,CAAA,EACfT,MAAAA,EAAoBI,GAAAC,EAAA,IAAAK,EAClB,EAAA,OAAAC,GACD,IACPD,EAAA,EACFC,GAAA,IACAD,EAAa,EACXhN,GAAoB,MACtBgN,EAAA,YAIF,KAAAb,EACA,gBAA4B,YAAA,MAAAe,IAAA,UAAA,UAAA,KACT,SAAA,CAAAT,GAAAG,EAAAE,EAAA,IAAA,CAAAK,EAAA/B,IAAA,CACnB,KAAA,CACmB,MAAA/Q,EACnB,YACmB,EAAA8S,EACnBC,EAAAH,GAAAI,EAAAJ,EAAA,KAAA,QAAAD,CAAA,EAAA,IAGEK,EAAA,GAAAA,IAAA,KAAA,IAAA,GAAAP,EAAA,IAAAQ,GAAAA,EAAA,UAAA,CAAA,EACE,OAAAzM,EAAA,MAAA,OACewF,eAAWkH,6BAEvB,MAEFd,CAES,eAAA,GAAAW,IAAE/S,EAAOsS,SAAYU,CAAAA,EAAAA,MAAAA,CAAqBF,MAAAA,oBAChD,YACME,GAAAA,EAAAA,SAAAA,CAAAA,GAAAA,KAKAE,SACJF,CAAAA,IAAAA,EAAAA,EAAAA,MAGA,cAAA,CAEE,CAAA,CAA0D,CACnD,CAAA,CAAA,CAAA,WAEP,MAAA,oBAAE,MAAA,GAEFA,SAAAA,IAAA,EAAA,GAAA,MAAK,SAAM,CAAAD,EAAA,GAAA,CAAA,CAAmB,CAAA,CAG1B,EAAA,GAAAhC,KACG/Q,KACDgT,GAAK,CAAA,CAAA,EAAAxM,EAAM,OAAA,CAAA,SAAiB,MAAA9V,GAAA,CAAAA,EAAA,eAE/B,EAAA,MAEHyiB,EAAAziB,EAAA,OACQ0iB,EAAA,IAAA,SAAAD,CAAA,EACEvC,EACNoC,CAAAA,EACCI,EAAA,QAEFL,CAAAA,EAAUxiB,IAAA,CACPA,IAAA,QAtBEwgB,EAAK/Q,KAAAA,CAA2B,CA2B9C,CACE,EACoB4Q,EAAA,SAEZwC,EAAAA,SAAeC,EACrB,MAAMzC,GAAY,EACTpd,EAAAA,SAAS7C,EAChB,EACEigB,SAAAA,CAAAA,EAAajgB,IAAK,CAAAmiB,EAAA/B,IAAA,CACpB,KAAA,CACD,MAAA/Q,CACD,EAAI8S,EAAiB,OAAA5V,EAAA,MAAA,CACrB+U,MAAAA,cACA,WAAsB,QAAA,CACtBA,MAAW,aACb,SAAA,CAAA/U,EAAA,QAAA,MAECuV,aAA2B,QACpB,KAAA,OAAEzS,MAAAA,EAAU8S,SAAAA,IAAAA,UAClB,SAAA9G,CACE,CAAW,EAAA9O,EAAA,OAAA,CAAa,0BACT,SAAA8C,CAAA,CAAY,CAAA,CACvB,CACE,CAA8B,CAAA,CACzB,CAAA,EAAA,CAAAgM,GACE+E,EAAAA,SAAAA,CAAAA,yBAEP,KAAA,SAAmB,SAErB8B,IAAA,UAAA,SAAY,MAAA,CAAA,CAAA,CAAqB7S,CAAAA,EAAAA,CAAAA,GAAawG,EAAA,IAAA,CAAA,MAAA,YAAA,SAE5C,CAAA,CAAA+L,GAAA/L,EAAAC,EAAA,CAET,SACCuF,CAAAA,WACA,CACQ,KAAA,SACD,MAAA,mBACiB6G,IAAA,UAAU,QAAAniB,GAAA,CAInCA,EAAA,eAAA,EAGHsb,WACA,GAAS,UACN,MAACuG,EAAAA,EACAN,EACE,SAAA,KAEQ,EACN,SAAUY,SAAY,CAAA,UACN,GAAA,CACdniB,CAAAA,EAAAA,EAAkB,OAAA,CAClBuhB,MAAAA,EACA,SAAahW,GAAAqW,CAAA,CACX,CAAA,EAAA,QAAAA,IAAe,EAAA,GAAA,IAAA,CAAA,CAAAD,GAAAA,IAAAC,GAAA9L,EAAAC,EAAA,CACfwL,SAAAA,CAAAA,IAAAA,IAAoB,IAAA/U,EAAA,OAAA,CAAA,MAClBmV,EACN,SAAApW,GAAAoW,CAAA,CAAA,CAAA,EAAE,IAAA,QAAAA,IAAA,EAAA,GAAA,GAAA,CAAA,CAAA,EAGK,IAAI,KAAAE,EACH,QAAA,SAAA,IAAA,CAAA,CAAAG,GAAAxV,EAAAmN,GAAA,CAGd,SAAAqI,CAAA,CAAA,CAAM,CAAOJ,CAAW,CAAA,CAA0B,CAAA,CAGhD,CAGE,SAAApB,GAAamB,CAAY,SAAAxY,EAA2B,SAAAzJ,EAEvB,mBAAAkjB,EAGf,IAAA,CACe,EAAWZ,QAAAA,EAAiB,IAAA,CAAA,CAEhE,EACG,CAEV,KAAA,CAAAG,EAAAZ,CAAA,EAAAvR,EAAA,SAAA,EAEA,CAASwQ,EAAcqC,CAAA,EAAA7S,EAAA,CAAA,CAAA,EACrB7G,EAAAA,IAAAA,CACAzJ,EAAAA,SAAAA,aAC4B,GAAA,OACZojB,EAAA,MAAAF,IAACC,EAAAC,CAAA,EAChBvB,EAAA,SAAA,CACD,MAAM,CACAA,EAAcsB,OAAAA,CAEpB5S,CACEsR,IACA,EAAC,CAAY,CAAA,EACP,MAAAzD,EAAA,IAAA,KAAA,EAAA,YAAA,EACIiF,OAAAA,EAAAA,MAAAA,CACNnjB,GAAAA,eACAijB,MAAAA,QACAtB,SAAAA,CAAAA,EAAoB,SAAA,CACtB,SAAE,CAAA/U,EAAA,KAAA,CACA5M,uBACA2hB,CAAAA,EAAAA,IAAkB,SAAA/U,EAAA,IAAA,CACpB,SAAA,wBACE,CAAA,EAAA2V,IAAA,WAAArM,EAAA,IAAA,CACD,SAAA,CAAAtJ,EAAA6H,GAAA,CAEe,OAAA,EAGlB,CAAA,aAAA,CAAA,CAAQ,CAAA,CAAA,CAAqB,EAAA7H,EAAA,OAAA,CAAO,SAClC,KAAA,SAIEuW,EAAA,OAAA,GAAAvW,EAAA,KAAA,CAAA,SAAAuW,EAAA,IAAAzZ,GAAA,CACC6Y,KAAY,CAAW,UAAAtF,CACX,EAAAvT,EACX4T,EACS,IAAA,KAAAL,CAAA,EAAC,OAAM/G,EAAA,KAAA,CAAG,MAAA,eAEpB,SAAA,CAAAtJ,EAAA,KAAA,CAEH,SAAAA,EAAA,OAAA,CAAe,SAAA,KAAA,eAAA,KAAA,CAGRuW,KAAYvd,EAAgB,YAAA,IAAAsY,EAAA,OAAA,UACrB,MAAA,QAAEjB,IAAAA,UAAcvT,QAAAA,QAChB4T,KAAAA,iBAEJ,UAA0B,OAAA,SAAA,CAAc,EAAA,OACtCA,CAAA,CAAA,CAAA,CACE,CAAA,EAAA1Q,EAAA2O,GACQzB,CAAqB,OAAApQ,EAAA,SAAA5J,EAKnB,KACC,IAAA,cACF,GAAA,SACI,EAAA,CAAA,CAAA,CACH,EAAAmd,CACE,CAAA,CAAA,CACA,CACV,CAAuB,CAAA,CAAA,CAAC,CACnB,CAEF,CACL,SACA0D,GAAA,CAAA,QAAAyC,EACK,MAAAC,EACQ,MAAAzT,EACL,MAAAF,EACR,IAAAhD,EAxBc,KAAA+C,EA2BrB,QAAA6B,EAAC,GAGD3E,CAAA,EACH,CAEV,OAAA+C,GAAA,WAEAA,EAAsB,CAAAA,EAAAA,CAAA,GAEpB2T,OAAAA,GAAAA,WACOzT,EAAAA,CAAAA,EAAAA,CAAAA,GAEPlD,KAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,EACA+C,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,EACA6B,OAAAA,EAAAA,IAAAA,CACG3E,GACF2W,EAAA5T,EAAA,CAAA,GAAA,EAAA,EACG6T,QAA2B,EAAA,IAE/BD,EAAA5T,EAAA,CAAA,GAAA,EAAA,EACI6T,IAAe,CAAU,GAAA,EAAA,EAE7B,EAAA,CAAAH,EAAA1T,EAAAhD,CAAA,CAAA,EAEO8W,WAA2B,CAC5B,cAENnT,MAAAA,EACE,MAAa,SAAAT,KAAAwT,EAAA,UAAA,KACI1T,QAAAA,GAAAA,CACJhD,EAAAA,eAAK,EACXtM,EAAA,gBAAA,EACUsP,EAAAA,CAAAA,CACJhD,EACb,GAAAC,EACC,SAAU+C,CAAAA,EAAAA,EAAW,CAExB,KAAAD,EAES,KAAA,IACE+T,IAAAA,CACC,CAAA,EAAA,CAAA,CAAAH,GAAAnN,EAAqBkN,EAAAA,UACb,CAAA,IAAAxW,EAAA,QAAA,CACZvB,MAAgBgY,EAChB/X,SAAiBK,GAAA0X,CAAA,CACnB/R,CAAAA,CAAAA,CAAS,CACX,CAAA,CAAA,CAAA,CACI3E,CAEE,SAAAmM,GAAA2K,EAAA,CAAA,GAAY,CAAKA,EAAA,OAASC,IAC/BC,EAAEN,KACD,MAAAI,EAAA,IAAA,EAAAG,EAAA,KAEE,MAAAH,EAAA,KAAA,EAAA,EAAAI,EAAcR,KAAAA,MAAAA,EAAAA,EAAAA,EAAM,OAAAM,IAAA,EAA+B,GAAAC,KAAAC,EAAA,WAAA,SAAA,EAAA,GAAA,IAGhD,GAAAF,KAAAC,EAAA,SAAA,EAAA,SAAA,EAAA,GAAA,KAAAC,EAAA,SAAA,EAAA,SAAA,EAAA,GAAA,GAIN,CACL,SAAKJ,GAAAA,EAAAA,CAAM,MAAA,uBAAA,KAAAtiB,CAAA,CACX,CACA,MAAIyiB,GAAsBH,yBACtBI,GAAqBJ,CAAAA,EAEzB,YAAiB3jB,EAAAqB,EAAA,OAMjB,GALE2iB,GAAqBD,KAAAA,CAAAA,GAKvBE,GAAA5iB,CAAA,EACF,OAIA,GADS,IAAA,SAA+B,GAAA,EACxC,MAAAsB,EAAAuE,EAAA,cAAA7F,CAAA,IAAA,YAAAsB,EAAA,GAAA,EAEA,OAAwB,QAAA,QAAAuE,EAAA,cAAA7F,CAAA,CAAA,EAGf6iB,KAAAA,CACHF,MAAAA,CACF,EAAAvhB,GAAA,CACF,SAAAzC,CACA,CAAIikB,EACF,OAAAriB,EAAA,GAAA,OAAA,CACF,EAAAP,EACA,KAAsB,WACtB,WACE,MAAOkJ,CAAyC,CAClD,EAAA,KAAA4Z,GAAA,CACQC,GAAAA,EAAM,kBAAuB,CAC/B,MAAAxa,EAAAua,EAAA,SAAA,CAAA,EAAEviB,CAAc,GAAApD,CAAEwB,EAAAA,EAAUqkB,EAAA,IAAArkB,OAAAxB,IAC3BoD,EACG,CACHP,GAAAA,EACG,IAAAgjB,CAAA,EAEC,OAAAnd,EAAA,cAAA7F,CAAA,EAAAkgB,EAEUA,CACjB,KACQ3X,OAAAA,GAAAA,CAAiBtC,EAAAA,GACjB,IAAA,MAAA,YAAA,CAAE9I,CAAAA,EAAAA,MAAOoL,GAAAA,CACTya,GAAAA,CAAAA,IACN,CAAA,CAAe,CACb7lB,MAAAA,GACK6lB,GAAAA,EAAAA,EACPC,GAAAA,GAAA7I,EAAA,ECp1CF8I,GAAwBC,GAAmBC,OAAO,CAACjlB,EAAK8M,IAAM,CAClE,KAAM,CAACoY,EAAMC,EAAQC,CAAM,EAAItY,EAC/B9M,OAAAA,EAAIklB,CAAI,EAAI,CACVC,OAAAA,EACAC,OAAAA,CAAAA,EAEKplB,CACT,EAAG,CAAE,CAAA,EAMCqlB,GAAgB,CACpB,YAAa,EAAI,GACjB,aAAc,GAAK,GACnB,SAAU,GAAK,GACf,UAAW,EAAI,GAAK,GACpB,WAAY,GAAK,GAAK,GACtB,QAAS,GAAK,GAAK,GACnB,SAAU,EAAI,GAAK,GAAK,GACxB,SAAU,EAAI,GAAK,GAAK,EAC1B,EACMC,GAAgBze,OAAO0e,OAAOF,EAAa,EAC3CG,GAAS,GAAK,GAAK,GAEnBC,GAAwC7C,GAAA,CAC5C,GAAI,CAACA,EAAkB4C,OAAAA,GACjBE,MAAAA,GAAS,IAAIzH,KAAK2E,CAAS,EAAE+C,UAAY1H,KAAKhD,IAAS,GAAA,IAC7D,OAAOqK,GAAcjmB,KAAYuN,GAAAA,GAAK8Y,CAAK,GAAKF,EAClD,EAEMlW,GAAOpL,SAASC,cAAc,IAAI,EACxCmL,GAAKsW,KAAO,UACZtW,GAAKgB,UAAY,qBAGjB,MAAMuV,GAAe,GACfC,GAAW,IAAIC,qBAAkCC,GAAA,CACrDA,EAAQpiB,QAAmBqiB,GAAA,CACzB,GAAIA,EAAMC,eAAgB,CAClB,KAAA,CAAElT,KAAAA,EAAMzF,MAAAA,CAAAA,EAAU0Y,EAAME,mBACxB,CAAEC,WAAAA,CAAexT,EAAAA,OACnBI,EAAOzF,EAAQ6Y,IACjB9W,GAAK+W,MAAMrT,KAAOoT,EAAa7Y,EAAQsY,GAAe,KAE1D,CAAA,CACD,CACH,CAAC,EACDC,GAASQ,QAAQhX,EAAI,EAErB,MAAMiX,GAAe,KAGfC,GAAc,IAAIxiB,OAAOyiB,GAASC,OAAQD,GAASE,KAAK,EACxDC,GAAgB,sDAChBC,GAAiB,4BACvB,SAASC,GAAcC,EAAW,CAChC,OAAOA,EACJnlB,QAAQ4kB,GAAaK,EAAc,EACnCjlB,QAAQglB,GAAe,OAAO,CACnC,CAEA,SAASI,GAAQ,CACfC,QAAAA,EACAC,cAAAA,EACAC,WAAAA,EACAC,YAAAA,EACAC,WAAAA,EACAC,UAAAA,CACF,EAAG,QACD5mB,KAAAA,CACM,MAAA0B,EAAEA,SAAAA,CAAO5B,EAAAA,GAAAA,EAAkB,CAAAyiB,EAAAZ,CAAA,EAAAvR,EAAA,SAAA,EAC3ByW,EAACtE,IAAmBmE,GAAA,YAAAA,QAAa9T,GAAS,CAAA,EAExCoN,EADwBpN,KACM,KAEhC7T,CACN,cAAAmD,CAEM,EAAAtC,GAAA,EAAEsC,UAAsC,CACtC8d,cAAAA,EAEF,oBAAA8G,EACM,yBAAAC,CAAEC,EAAeF,iBAAAA,CAAqBC,mBAAAA,EAAyB,eAAAE,EACvD,iBAAAC,EAChBC,eAAAA,EACAF,iBAAAA,EACAC,oBAAAA,CACAE,EACAC,MAAAA,CACAC,WAAAA,EACF,uBAAAC,EACO,cAAAC,EAAEC,cAAAA,CAAYF,CAAwBC,EAAAA,EAAeE,EAAAA,KAAcC,EAAA3T,KACxE9R,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,QAAAA,EAEE0lB,MAAsB,EAAAxX,EAAA,EAAA,EACtBuX,IAAyB,EAAAvX,EAAA5R,EAAA,QAAA,IAAA,iBAAA,GAAAqnB,EAAA,EACzB,CAACjJ,EAAyBiL,IAAqBzX,EAAA,CAAA,CAAA,EAC/C,CAACsM,GAAAA,EAAuB,EAAAtM,EAAA,MACxB0X,GAAWC,EAAAA,QAAW,IAAI3X,gBAChBnR,GAEV+oB,GAAmBH,IAAAA,CAClBja,EAAa,SAIpBga,wBAA8B,IAAA,MAAA,OAAA,CAAA,CAC5B,EAA0BK,GAAA,IAAA,CAC1BL,WAAAA,IAAoBM,QACtBzlB,EAAAmlB,EAAA,UAAA,MAAAnlB,EAAA,OACA,EAAA,IACEyS,EACElV,EAAAA,KACA4nB,GAAAA,QACI,CACR,YAAAjL,EAEAtM,WAAgB8X,EACV3B,SAAe4B,EACX,UAAAC,CAAE1L,EAAAA,EAAaC,GAAAA,EAAAA,UAAYC,EAAAA,QAAAA,MAAAA,GAC7BF,MAAAA,MADqD6J,IAAAA,IAAAA,CAAAA,EAAAA,QAAAA,KAAAA,GAAAA,EAAAA,SAAAA,IAAAA,GAAAA,EAAAA,IAAAA,CAAAA,CAAAA,GACvBvS,OAAS9H,GAAAA,IAAAmc,EAAA,IAAA,EACzCX,EAAAA,OAAuBtnB,IACzBunB,EAAA,QAAA,MAAA,GAAAW,EAAA,IAAApc,GAAA,IAAAA,GAAA,EAAA,KAAA,GAAA,KACA6b,MAOIO,KACUtU,GAAAA,CAAiB,EAGZ8T,EAAAK,GAAAN,GAAA,wBAAAjC,EAAA,EACnB2C,GAAAH,CAAA,CACe,SAAA5B,EAAA,CACfgC,KAAAA,CACY5L,WAAAA,EACZ2L,SAAAA,YACqBH,EACf,KAAAK,EAAE9L,iBAAAA,CAAAA,EAAYC,EAAUH,EAAAA,CAAAA,EAAAA,GAAAA,MAAAA,EAAAA,UAAAA,CAAW9O,GAAAA,EAAMsP,QAAAA,EAAAA,QAAAA,IAAAA,IAAAA,GAAAA,YAAAA,EAAAA,QAAAA,CAAAA,EAC7CuJ,WAAAA,GAAAA,YAAAA,EAAAA,YAAAA,GAAAA,EAAAA,SAAAA,CACF,EAA0C9E,EACrC/T,SAAAA,GAAAA,SACWuU,CACdwG,GAAW/a,CACb,MAAAgb,EAAA,MAAAlnB,EAAA,GAAA,SAAA,YAAA+kB,EAAA,EAAA,EACA9E,CACa,KAAA5e,EACP,YAAA4Z,CACF,EAAAiM,EAGA5oB,EAAY,QAAA,MAAA+C,EAAE6lB,EAAAA,QAAAA,QAAAA,OAAAA,EAAaZ,KACrBC,KAAEllB,EAAAA,QAAAA,MAAAA,EAAM4Z,GAAAA,CAAAA,EAAYoL,EAAIa,GAAAA,MAAAA,wBAAAA,EAAAA,EAC9BhB,IAA4B7kB,EAChBkR,GAAAA,GACK4T,GAAAgB,CAAA,EACFlH,EAAA,SAAA,CACfgG,OAAAA,EAAAA,CACAc,OAAAA,GAAAA,YAAAA,EAAAA,SAAwBroB,CAAA,EACZyc,EAAAA,OAAAA,CACZ2L,CACAM,IACAjB,MACAlG,kCAEA3hB,MAAe,wBAAA,EAEf2hB,GAAAA,wBACFoG,EAAAD,GAAA,sBAAA,EAEGA,GAAA,yBACUU,GAAAV,GAAA,uBAAA,EAGbW,GAAAA,EAAAA,CACF,KAAA,CACA,OAAA/e,EACEqe,YAAAA,EACF,WAAAI,EACA,SAAmCC,EACjCI,UAAAA,EACF,KAAAE,EACF,iBAAAG,CACA,EAAiBnC,EACTqC,EAAA,CAAA,EAAAL,GAAA,MAAAA,EAAA,UAAA,CACJhf,GAAAA,EACAiT,QAAAA,EAAAA,QAAAA,IAAAA,IAAAA,GAAAA,YAAAA,EAAAA,QAAAA,CAAAA,EACAC,WAAAA,GAAAA,YAAAA,EAAAA,YAAAA,GAAAA,EAAAA,SAAAA,CAAAA,EACAC,EACAH,QAAAA,MAAAA,EAAAA,KACA9O,KAEF+Z,EAAIjB,QAAAA,MAAAA,EACJ+B,GAAuBN,CAAEva,EAAiBma,EACrCna,GAAAA,GAAAA,wBAAAA,EAAAA,EAAAA,GACWuU,CAAAA,EAAgC2G,GACnClb,CAAmBmX,EAChC8C,GAAAgB,CAAA,CACAjB,CACiB,EAAA,CAAAlB,EAAAD,EAAAD,CAAA,CAAA,EACF,MAAAwC,GAAAhV,KACf2T,kDACAc,GAAAA,IAAwB,CACZ5L,KAAAA,CACZ2L,MAAAA,EACAM,QAAAA,CACAjB,EAAAA,EAAAA,QACF,GAAAtF,IAAA,UACEmE,MAAaD,GAIjB,MAAyBwC,EAAA/L,EAAA,OAAA,EAEA,GADnBgM,KAAWD,GACAE,EAAAA,OAAAA,GAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAGf,SAC4B5G,MAAAA,GAAAA,GAAAA,YAAAA,EAAAA,QAAAA,MAAAA,EAAAA,GAAS6G,EAAA5C,GAAAnmB,EAAA,KAAA,IAAA,IAAAmmB,EAAA,QAAA,OAOnCxmB,MANO,IAAAyd,GAAA2L,GAK2B/oB,KAAA8oB,GAAA,YAAAA,EAAA,QAElC,EACFE,GAAA,IAGMC,GAAAA,EAI6C,GADxB,QAAAC,EAAA,EAG3BlZ,EAAA,IAAA,CAGA,MAAMoN,EAAS+I,GAAuBloB,QAIlC8B,iBAAwB,EAC1BJ,EAAAA,YAAwBupB,GAAE9L,EAAQ2L,cAAa,iBAAA,eAAAI,EAAA,CACxC,QAAA,EAAA,CACT,EAGMC,IAAAA,OAAAA,oBAAoCzD,eAAAA,EAAAA,CAC1C,QAAoB,EAClBhmB,CAAAA,CAA0BypB,EAAAA,CAAAA,CAAAA,EAAAA,MAAgBC,GAAA,IAAA,CACnC,KAAA,CACT,MAAArpB,CAEAL,EAAAA,EAAwB,QACtBK,CACA4oB,MAAAA,CAAAA,EACAK,EAAAA,QACA1b,OAAAA,GAAAA,GAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAEAwb,GAAAA,IAAAA,CACAK,MAAAA,EAAAA,KACAlH,EAAAA,uBAAAA,CAAAA,EAGKlS,EAAAsZ,GAAA,CAAA,CAAA,EACTC,GAAA,MAAA,IAAA,CAEMP,IAAeA,MACf9C,GAEF,EAAOsD,CACT,iBAAA,GAEF,MAAA,EAEAxZ,CAAAA,EAEE,MAAAyZ,MAAkC,CAAA,CAAA,EAC5BC,OAEcR,GADErqB,QACFqqB,EAAAA,UAEpBS,GAAA,IAAA,CACOC,GAAAA,EACLC,OACF,MAACjqB,EAAA8pB,KACDI,EAC6B,CACzBD,IAAAA,EACD,QAAA1D,EAAA,CAKG,GAAAA,EAAA,GAAS7J,QAAAA,CAA+B1I,GAAAA,EAAAA,QAAAA,GAC9C,WAAkC5T,QAAAA,SACpC,KAAAmmB,EAAA,QAAA,KAEE,EAAMnD,KACNrc,YAAgCqc,CAClC,IAAAwD,EAAA,QACU8C,OAAAA,EAAAA,QAAmB,MAE7BC,YAEQjC,EAAA,QAAA,MACA,WAAA/K,EACO,SAAAC,EACX,UAAAH,GAEF,KAAA9O,GACoB,iBAAAsP,CAAA,CAAA,EAGnB,CAAAkN,GAAAD,EAAAL,GAAA,OAAA,GAAA,CAAAZ,OAGGY,GAAAA,OAAAA,IAAAA,EAAAA,CACAC,KACJ,MAAW7qB,UACH,eAAY+U,IAAAA,CAAAA,CACtB,EAAA,KAAA,IAAA,CAAA,CAAA,EAAA,MAAA7T,GAAA,CAAA,CAAA,EACA0pB,WAA+B,gBAAAK,CAAA,EAIb,EAChB,OAAAxW,MAAsB,GAAA,EACtBtD,EAAwB,KACtBpQ,SAEI,CAAA8R,GAAA,OAAA,IAAAgY,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA1Z,EAAA,IAAA,CAAA,MAAAga,EAAAjqB,GAAA,CAAA,KAMoB9B,QAAAA,EAAAA,CAClBa,MAAS,6BAAA2nB,UAAA,EACPxoB,MACA2M,CACAG,KAAAA,CACF,MAAAkf,CAEF,EAAAlqB,EAAA,eAAAA,EAAA,aACSmqB,EAAA,CAAA,EAAA,QACFtW,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CACTvK,MAAAA,KAA4BrJ,EAC5Bsc,GAAAA,EAAAA,eACAC,MAAAA,EAAAA,EAAAA,YACAC,GAAAA,EAAAA,SAAAA,EAAAA,IAAAA,GACAH,EAAAA,KAAAA,CAAAA,CAEAQ,CACF,CACF,GAAAqN,EAAA,OAAA,EAAA,CACInqB,iBAAwB0pB,EAC1B9pB,EAAAA,gBAAc,EACXyR,MAAAA,EACIxR,EAAKid,EAAA,OACLiN,EAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EACHK,GAAOC,EAAA,QAAA,EAAA,CACPC,MAAAA,6BAAmB5D,UAAA,EAEpBvG,MACS2D,CAET1D,MAAAA,EAAaiK,EAAA,IAAAE,IAAA,CACJ/K,KAAAA,EACT,KAAA+K,EAAA,KACiB1W,KAAAA,EAAAA,KACtB,IAAA,IAAA,gBAAA0W,CAAA,EACF,GAAA,KACAhX,gBACAtD,EAAAA,EACoBwX,GAAA,CAAA,GAAA3K,EAAA,GAAA0N,CAAA,CAAA,CAGlB,CACE7Y,EACF,OAAA,iBAAA,QAAAsY,CAAA,EACF,MAAKQ,EAAAzqB,GAAA,CAELiQ,EAAU,aAAM,MAAA,OAAA,IACdjQ,EAAMiqB,eAAejqB,EACf8c,EAAAA,gBAAAA,EAEF,EACF,cAAA,iBAAA,WAAA2N,CAAA,EACM,OAAA,iBAAA,OAAAR,CAAA,EAAEC,IAAAA,CAAM,OAAMQ,oBAAmBC,QAAAA,CAAAA,EACvC,2BAAgB,WAAAF,CAAA,EAChB,OAAA,oBAAoBP,QAAmB,CACrC,CACA,EAAIU,CAAAA,IACIL,EAAAA,MAAAA,CACN,GAAA,oBACEJ,MAAAA,EAAe,aAAA,GACjB,SAAA,CAAArU,EAAA,MAAA,CACF,MAAA,cACF,SAAA,EAAAoS,GAAA,YAAAA,EAAA,eAAA1b,EAAAJ,GAAA,CACAxM,IAAAA,EAAY,aAAEuqB,KAAAA,IAAO,IAAAjC,EAAA,QACjBiC,CAAAA,EAAAA,KA6C0Btf,EAAAA,SAAAA,CAE3B,KACC0b,SACA,MAAA,mBACE,SACOpE,IAAA,UAAA,QACC,IAAA,CACN,WAAsB,OAAA,iDACP,EAkBb,MACEkE,CACAD,OAAAA,OAAAA,WAAAA,aAEE5T,CADW,QAAA,iKAAA,GAIXgK,EAAAA,CACAC,GAAAA,IAAAA,CACAH,MAAAA,EAAAA,CACA9O,WAAAA,EACAsP,cAAAA,EACF,YAAA,CACD,IAAA2J,EAAA,QAEY,OAAAe,EAAA,QAAA,MACX9H,YAAmD6H,EAAA,QAAA,MACnD,WAAA/K,EACF,SAAAC,EAES,UAAAH,GACX,KAAA9O,GAAE,iBAAAsP,CAES,CAAA,EAAsB,OAAA,OAAA,YAAA+N,EAEnC,OAAA,OAAA,WAAA,YAAA,EACO,CAAA,CACC,CAAA,EACgB,WACPzb,EAAA,CACb,KAAI6Z,QACO,IAAA,QAAA,CACX,CAAA,CACF,IAzGc,OAAA,CACpBjpB,SAAkB,CAAAwM,EAAA,SAAA,CAChBtB,KAAiB,SAEbkH,MAAAA,mBACN,SAAqB+X,IAAAA,UACjBE,QAAAA,IAAaxnB,CAedgnB,GAAAA,KAbD,WAAAxD,EACF,cAAAD,EACMoE,YAAaH,CACjBE,IAAAA,EAAAA,QACMA,OAAKtT,EAAAA,QAAAA,MACLsT,YAAKle,EAAAA,QAAAA,MACFye,WAAAA,EACL,SAAArO,EACS,UAAAH,GACb,KAAA9O,GACFia,iBAAAA,CACF,CAAA,CACF,EACOoC,oDACuB,EAEtBc,MACc,CACCxE,GACrB,EACF,SAAA3Z,EAAA4C,EAAA,CACOya,KAAAA,SACAA,IAAAA,SACP,CAAO,CACL/X,CAAOiZ,EAAAA,IAAAA,EAAAA,SAAAA,CACAA,KAAAA,SACAA,MAAAA,qBACT,SAAA5I,IAAA,UACErF,QAAAA,IAAiB,CAGnBmM,GAAA,GAAQ9C,GAA0D,EACrD,SAAA3Z,EAAA4C,EAAA,CAAa,KACDoG,GACZ,EACmBA,CACnB,CAAA,CAAA,CAAA,CA6DH,CAAE,CAAA,EAAA,CAAA,CAAA4Q,GAEGtQ,EAAA,MAAA,CAAA,MAAM,iBAAA,SAAG,CAAAtJ,EAAA2O,GAAA,CAAG,OACViL,EACJ,KAGL,GAAA,CAAA,EACOtQ,EAAA,MAAA,CACL,MAAM,iCACN,SAAUqM,CAAY,gBAAAiE,EAAA,QAAA,MAAAA,EAAA,QAAA,SAAA,WAAA,CAAA,CAAA,CACtB,CAcM,CAAA,EAAA,CAAA,CAAAC,GAAgBvQ,EAAA,MAAA,CAClB4J,MAAAA,iBACA,SAAA,CAAAlT,EAAA2O,GAAA,CACF,OAAAkL,EAEIvU,KAAAA,GACF,CAAM2X,EAAAA,EAAAA,MAAAA,CAGN,MAAA,wBAAU,SAAA,uBAAA,CACZ,CAAA,CAMAtD,CAAQ,EAAArQ,EAAA,OAAA,CAAA,IAAA8S,GAEJ,MAAA,CACEvC,cAAAA,IAAAA,UAAAA,OAAAA,OACAD,QAAAA,IAAAA,UAAAA,GAAAA,CAAAA,EACa,UACX5T,GAASqB,CACTvK,EAAAA,MAAAA,qBAA4BrJ,EAAAA,UAC5Bsc,GAAAA,QAAAA,wBAAoCtc,SAAAA,CACpCuc,WAAAA,EACAC,CAAAA,CAAAA,CAEAjP,EACAsP,SAAAA,GAAAA,CACF9c,EAAA,eAAA,EACF,MAAA0iB,EAAA,IAAA,SAAA1iB,EAAA,MAAA,EACA8R,SAA4B+Y,YAAAA,EAAAA,QAAAA,CAAAA,EACrBG,GAAAA,CACT,OAAA1hB,EACF,WAACye,EACH,UAAAE,EAAE,YAAA1L,CAEG,EAAM2I,EAAoB,GAApB+C,EAAYA,IAAA,KAAQza,GAAA,CAGpC,GAAAA,GAAA,QAAA,OAAA,EAAA,CAEA4Y,MAAAA,mCACD,EAAW,MAAgB,CACTA,GAAAA,GAAAA,QAAAA,KAAAA,GAAAA,IAAAA,EAAAA,EAAAA,CAAoB,MAAA,6BAAA,EACpC,MAAW,CAAgC,CAIrC7J,EAAA0L,GAAA1L,GAAA,OAGTjT,EAAE+c,OACD,OAAA/c,EAAWiY,EAAA,SAAA,GAAgB,SACzB,CAAgB8E,GAAAA,CAAiB,GAAAvJ,EAAA,OAAA,EAAA,CACjC,MAAAmO,GAAAnO,EAAA,IAAAlP,GAAA,CAAW,KAAA,CAAuB,KAAA2c,GAA4B,YAAA1T,GAGlE,GAAA3Y,EACO0qB,EAAAA,EACE,GAAA1qB,GACLgtB,OAA2Btd,EACN,CACvB,MAAAud,GAAAC,GAAA,CACkB,KAAAb,GACF,YAAA1T,EACZ+R,CAAgBd,EACoB,OAAAxmB,EAAA,GAAA,iBAAA,OAAA6pB,EAAA,EAAA,KAAAE,KAAOA,GAAA,KAE7Czd,EAAA,GAAAyd,GAAA,IAEeA,GACG,CAED,CACjB,CAAgBtlB,EACJ8d,SAAkB,QAAA,WAAAoH,EAAA,EAC1B,GAAApH,GAAA,KAAA5C,GAAA,QAAE3X,OAAAA,EAAAA,SAAAA,YAAAA,GAAAA,GAAAA,EAAAA,QAAAA,MAAAA,GAAAA,GAAAA,CAAQkT,EAAAA,CAAYF,EAAAA,OAAAA,EAAWC,GAAAA,QAAAA,GAAAA,CAAgB2I,EAAAA,SAAAA,kBAG3BjE,EAAA,QAAA,eAAA,UAAA,CAmBxB,CAAIzT,EACFkS,MACA,CACF,CACA,MAAiB4L,CACf5L,OAAAA,EAEF,aAAAnD,EACF,SAAAE,EAIAF,YACSjT,KAAAA,GAGI,UAAAwT,EAAA,IAAAlP,IAAAA,GAAA,EAAA,CACX,EACUgS,uCAAyC,EAC7C9C,EAAAA,mBAA6B,IAAAlP,KAEzBqd,CACE,GAAArd,GAAA,GAAE2c,YAAAA,GAAAA,WAAmBrsB,EACnB0hB,EACAyG,IAECzY,EAAAA,WAAAA,EAAAA,EACF,gBAAAwY,GAAA,YAAAA,EAAA,KAAA,QAEHmE,EAAAA,GAAAA,CAAAA,EACA1T,IAAAA,EAAAA,GAEFgI,QAAgB/B,EAAAA,GAAAA,SAAAA,YAEPuO,CAAQ,EACblhB,KAAYzK,EAAA,CACVkO,cAAAA,EAAoB1P,CACtB,GACOmtB,EACR,MAAA/pB,EAAA,GAAA,SAAA,OAAAiqB,EAAA,CACL,eAAA9E,EAAA,OAAA,CACD,EAKC5C,EAAAA,SAAyB,EACvBsC,EAAA,CACF,UAAAtH,EAEA0C,SAAAA,CAEAsC,CAAAA,CACM5C,OAAAA,EAAAA,CACFrhB,OAAAA,GAAAA,YAAAA,EAAAA,UAAcqhB,EACRA,EAAAA,OAAAA,CACR,CAAA,IAEF,EACF,SAAA,CAAAnL,EAAA,MAAA,CAEAlW,MAAAA,kBAAcikB,SAAAA,CAAAA,EAAAA,QAAAA,CAAS/G,IAAAA,EAAAA,KAAkB,OAC3C,KAAA,cAMA,YAAa,kBACXxT,SAAAA,IAAAA,UAAAA,MAAAA,qBAAAA,KAEciT,EACdE,WAAAA,OAAAA,MACAH,CACA9O,QAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAAAA,OAAAA,MAAAA,EAGF,QAAA,IAAA,CACI6Y,IACKmF,CACL,CAAO,EAAA1V,EAAA,QAAA,CAAA,MAAA,iBACU5X,MAAAA,qCACS2Y,SAAAA,CAAAA,EAAAA,QAAAA,CAAAA,KAAAA,YAG1B,KAAA,WAAA,QACDyF,GACH,SAAA6F,IAAwB,UACtBoJ,SAAoB/O,GAAAA,SAEbiP,MAAAA,EAAAA,EAAAA,eACTrD,GAAAH,CAAA,EACAsD,GACQ3L,EAAAA,YAAAA,MAAAA,EAAkB,SAGtByG,EAAAA,EAAY,UAAZA,MAAAA,EAAY,OAKdlc,CAAgC,CAAA,EAAAqC,EACf4C,EAAA,CAAA,KAChB,OAAAkN,GAAA,QAAA,QAAA,CAAA,CACH,CACEuC,CAAAA,EAAAA,IAAAA,EAAAA,QAAkBvd,CAAiC,wBAC7BuS,IAAAA,UAAAA,CAAAA,GAAAA,aAAAA,KAAAA,MACrB,eAAA2I,IACH,SAAA,CAAAhQ,EAAA4C,EAAA,CACAmS,KAAAA,GAAoB/E,CAAA,EAGZ,IAAAA,CAAA,CACNqC,EAAAA,EAAAA,SAAAA,CACAnf,KAAAA,aACF,MAAC8c,WACDxc,GAAA,CACAJ,GAAeI,EAAA,OAAA,KAAA,CACTA,EACNuhB,SAAAA,IAAkB,WAAA,CAAA,CAAA8E,EACpB,SAAA,CAAAvQ,EAAA,SAAA,CACE,MAAA,SACN,SAAA,CAAA,UAAAtJ,EAAA4C,EAAA,CAEA,KAAA,OAAA,CAAW,CAAA,CAAA,CAAiB,EAAA5C,EAC1B,SAAA,CACO+a,MAAAA,WACA,SAAA,UAAA,CACA,EAAA/a,EAAA,SAAA,CACO,MAAA,mBACU,gBAAA,CAChB,EAAAA,EAAA,SAAA,CACAiQ,MAAAA,SACK,SAAA,QAAA,CACJ,CAAA,CAAA,CACLiP,CAAAA,CACAR,CAAAA,EAAAA,GAAAA,CAAoC,CACtC,EAAA1e,EAAAmf,GAAA,CAAA,MAEmB,YAAAvF,EAAA,kBAAAC,EAAA,mBAAA,sBACnB,SAAAvJ,EAAA,SAAA,EAAE,SAEJqF,IAAA,UAAA,KACQ1F,EAAA,QACA,IAAA,CAAoC8M,IAE1C,EACO,cAAA3C,EACA,cACItK,KACa,GAAA,OAAAiP,CAAA,CAEdjP,CAAAA,EAAAA,EAAAA,OAAqB0G,GAAAA,EAAAA,MAAAA,CAC3BoF,MAAAA,oBACA,SAAI9L,CAAWQ,EAAA,IAAA,CAAAlP,EAAAge,IAAA,CACbrE,KAAAA,CAA+B,GAAArpB,EAE/BspB,KAAAA,CACF,EAAA5Z,EACFie,GAAAtB,GAAA,YAAAA,EAAA,OAAAA,GAAA,YAAAA,EAAA,OAAAA,GAAA,YAAAA,EAAA,MAAE,OAEJ/d,EAAKsf,GAAA,CAAC,WAAAle,EAA+C,SAAAuU,IAAA,UAC9C,KACT1F,sBAEID,GAAAA,IAEoBA,GAAAA,CAAa,MAEnCuP,EAAK,CAAA,GAAAC,CAAA,EAAC,OAAAD,iBAAmC9rB,EAAQuc,CAAAA,CACjD,CACO,EACL,SAAOA,IAAAA,IACUwP,GACDhsB,SAAc,CAAAisB,EAAAC,IAAAA,IAAAN,CAAA,CAC9B,CACUzJ,CAA2BkE,EAAWnoB,GAAA2tB,GAEhDD,CAAA,CAAA,CAAA,EAAA9V,EAAc,QAAA,CAAA,MAAQ,kBACR,SAAM,CAAAtJ,EAAA,QAAA,CAAA,KAAU,YAAA,KAE9B,WAAA,QAAc8P,GAAA,SAAU6F,IAAA,UAAA,SACxBniB,GAAA,CAAQ,MAAMioB,EAAAjoB,EAAA,OAAA,QAASooB,GAAAH,CAAA,CAAA,CACvB,CAAA,EAAQ,IAAMzb,EAAA,OAAA,CAAA,SAAQ,yBAAA,CAAA,EAAgB,IAAAA,EAAA4C,EAAA,CAC/B,KAAA,OAAAkN,GAAA,QAAA,QAAA,EACF,CAAG,CAEd,CAAA,CAAS,CAAA,EACFkL,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CACL,KACEpB,EAMF,WAAAiB,EACA,cAAAD,EACA,cAAAE,EACA,uBAAAH,EACmB,KAAA3Z,GACnB,SAAA2U,IAAA,UACA,QAAAmG,GAAA,OAEShnB,MAAAA,EAASoN,CAClB,GAAA4Z,CAAA,EAGWI,GAAA1I,CAAA,CAAA,MAED0I,GAAA,IAAA,CAAM6B,CAAAA,CAAAA,EAAKzU,EAAIlI,MAAAA,CACrB,MAAA,UACA,YACkB,QAAA,CAEd,MAAA,iBAAA,YACsB,QAAA,CACtB,KAAM6O,OACN,SAAgC,KAAA,GAAA,EAC9BgL,SAAAA,EAAqC,OAAAf,EAAA,EAC7BqF,SAAAA,IAAAA,WAAgCjP,EAAA,QAAA4J,GAAA,CAAA,CAAAlZ,GACvB6S,SAAAA,GAAAA,CACR0L,MAAAA,EAAAA,EAAAA,OAAAA,MACT,GAAC,CAAA5B,EACH,eACgB,MAAA,KAAAA,CAAA,EAAA,IAAAI,IAAA,CACd9C,KAAAA,EACE,KAAA8C,OACD,KAAAA,EAAA,KACH,IAAA,IAAA,gBAAAA,CAAA,EAfWsB,GAAAA,KAmBJ,YAAA,IAAiB,EAAA,EAErB/O,EAAA,OAAA0N,EAAA,OAAA9D,EACA,MAAA,6BAAAA,UAAA,KAEiBsF,GACLA,EAAA,OAAAxB,CAAA,CACTlO,EAERtc,EAAA,OAAA,MAAA,EACA,CACF,CAAA,EAAAwM,EAAA4C,EAAA,CAAA,KACA,YAAK,CAAC,CAAA,CAAmC,CAAA,EAAY,IAAA5C,EAAA,SAAA,CAC/C,KAAA,SAGX,MAAEgB,iBAEOiP,SAAAA,IAAAA,WAAAA,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,OACN,QAAA,IAAA,CACAiM,GAAA,CACA,QAAA,CAAA,GAAA,EAAA,EACA,UAAA,GAAA,GAAA,YAEsB,EAAA,CACtB,CACE,EACE,SAAgBlc,EAAA4C,EAAA,CAAA,KAAK5B,OAAK,IAAA,UAC1Bkb,CAAAA,CAAe,CAAA,EACV,IAAAlc,EAAA,MAAA,CACLkc,MAAAA,QACF,CAAA,EAAAvG,IAAA,WAAA3V,EAAA6H,GAAA,CACF,OAAA,EAGJ,CAAA,EAAA,IAAA8N,IAAA,WAAA3V,EAAA2f,GAAA,CAAW,cAAAvF,CAAA,CAAS,EAAA9Q,EAClB,QAAA,CAAO,MAAM,iBAAgB,SAC3B,CAAAtJ,EAAA,OAAA,CACE,MAAK,YACL,UAA2B/G,GAAAA,GAAKgX,CAAG,IAARhX,YAAAA,GAAQ,MAAA,CACnC,EAAA+G,EAAA,SAA2B3J,CAC3B,gBAKA,QACQsnB,SAAAA,IACN,KAAKA,CAAO,MAAAlqB,CAEZ,EAAAD,EAAMwqB,OACJD,EAAAA,GAAAA,EAAAA,EAAAA,UACWtT,IAAAA,WAAAA,CAAAA,CAAAA,EAEXlW,SAAS+pB,IAAAA,UAAoB,SACzB5G,GAAA,KAAA,CAAA,CAAA,CAAAkI,CAAA,EAAA,CAAA,CAAAC,CAAA,IAAAD,EAAA,cAAAC,CAAA,CAAA,EAAA,IACS,CAAA,CAAAjI,EAAAC,EAAAC,CAAA,IAAAxO,EAAA,SAAA,CACf,MAAEsO,EACMxE,SAAAA,CAAAA,EAAyBuK,KAAAA,EAAAA,GAAAA,CAGjC,CAAA,CAAA,CAIEzK,CAAAA,CAAAA,CAC2D,CAAA,EAAA,IAEtDlT,EAAA,SAAA,CACLib,KAAAA,SACSuE,MAAAA,QAA6B,SACrC7J,IAAA,UACH,SAAAiE,EAAA,QAAAC,EAAA,SAAA,MAEArmB,CAAAA,CAAAA,CAAiB,CACnB,CAAA,CAAA,CAAE,CAAA,CAEC,CAAA,CAAM,CAAe,MAAA2rB,GAE5Bhb,GAAA,CAAApE,EAAAqE,IAAA,OAAA,KAAA,CACO,MAAAtP,CAEL,EAAAa,GAAA,EACwDU,CAAAA,GAEzC,EAAAmN,IAAA3N,EAAAuO,EAAA,UAAA,YAAAvO,EAAA,QAAA,EAAA,EACL,CACN0f,cAAAA,EACAwG,cAAAA,EAAAA,KAAqB,EAAA,GAAA+D,CACX,EAAA/f,EAEZggB,EAAF5Q,GAAA/U,CAAA,EAEK,uBAAA4lB,EAAM5Y,KAAA3D,EAAO,IAAI,EAAA,SAAU,CAAA,GACzB,CACT,MAAWrN,EAAA,MAAAtB,EAAA,GAAA,aAAA,KAAA,EAAQkrB,EACN,QAAA5pB,CAAoB,MAAA,CAAO,CAAA,IAEtB,EAAA,CAAA,CAAA,EAA6B,MAAA6pB,EAE/C7Y,KAAA8Y,EAAa9Y,GAAA,EAAA,EAAgB3D,OAAAA,EAAA,IAAA,CAC3B,IAAA0c,EAAYC,EAAAC,EAAW,OAAAJ,EACEhQ,UAAiBkQ,EAE1C3sB,GAAA,CAAA,KACO,CAAA,IAAAH,EACE4c,QAAAA,EAEC,KAAAqQ,CAAA,EAAE7sB,EAAAA,OACR0nB,GADQ1nB,EAAYsK,QAAAA,EACpBod,IAAAA,GAAY1nB,CACNrB,EAAAA,QAAAA,QAAY,CACpB,QAAA,EAAA,CAAA,CACA,EAAgC,MAIrBwtB,CACT,GAAAvsB,IACM,KACJ,MAAeukB,EAAAA,GAAAA,EAAAA,QAAAA,CAAAA,EAAAA,IAAK/f,EACjBggB,GAAgBzhB,EAEpB,QAAAG,GAAA,CACI,KAAA,CAEX,UAAAC,EAAa,IAAAjC,CAAe,EAAAgC,KAAkBof;AAAAA,gDACjBkE,GAAarjB,CAAW;AAAA,4BAC5C+pB,GAAAhsB,CAAA;AAAA,mBACLgsB,GAAA/pB,CAAA;AAAA,oBACD,CACH,EAEVwL,GAAA,UAAAnK,EAEiBsM,EAAAA,QAAAA,QAAYpE,CACrB,QAAA3J,EAAA,OAAA,EAAEtB,SAAAA,EAAe,CAAA,CAAA,QAEjB,CAAEslB,MAAAA,EAAAA,gBAAsC,IAAA,UAAM0F,EAAAA,CAAAA,EAAkB/f,EAAAA,IAAAA,QAAAA,GAAAA,GACjC,YAI3B,MAAM,CACd,CAAa,EACP,KAAAtM,GAAA,CACF,GAAe6sB,IAAAJ,UACf9sB,OAAsB,MAAAikB,EAAA5jB,EAAAgX,CAAA,EACtBuV,IAAAA,EAAuB5pB,KACvB,QAAAqe,GAAA,CAEArhB,MACF,KAAAsQ,EACE,aAAAsF,EACD,YAAAC,eAGCiX,KAAAA,GACU,OAAA9pB,OAEeF,GAAA+S,GAAA7S,CAAA,EAC3B+pB,GAEQtoB,GAAA;AAAA,oDAAExE,GAAAA,EAAAA;AAAAA;AAAAA,oCAAc8C,GAAAA,CAAAA;AAAAA;AAAAA;AAAAA,6BAGL+S,GAAA7K;AAAA,+BAEGkiB,GAAA/hB,EAAA;AAAA;AAAA;AAAA,uBAOH;AAAA,oDAI8B6I,GAAAA,CAAa;AAAA,kCAC/CkZ,GAAA7c,CAAA;AAAA;AAAA,oBAEUnP,GAAAA,UAAAA,CAAAA,CAAQgC,EAClBiqB,EAAA,CAAA,QAAAnJ,EAAA,OAAA,EAC+C,SAAArV,EAE/C,CAAA,CAEkB,CAAA,CAAA,CAAA,CAE7B,CAEAA,EACAye,UACkB,iBAAA,uBAAAN,CAAA,EACdO,EAAStqB,IAAgB,KACf4L,CACZ,IAAA3O,EAEF,KAAA+qB,CAAA,EACF5qB,EAAA,OAEAH,IAAa,IACXG,EAAK,OAAA,MAAA,IAAA4qB,EAAA,QAAA,SAEL/qB,EAAG,OAAA,MAAA,GAAAA,IAAA+qB,EAAA,QAAA,OAGD,EACE3T,EAAAA,QAAAA,iBAAAA,sBAAAA,CAAAA,EAAAA,EACGtU,GAAAA,CAAAA,KACI,CACT,MAAAwqB,CACAC,EAAAA,EAAAA,OACMzqB,EAAAA,EAAAA,MACF,EACF8pB,EAAA,QAAA,iBAAA,0BAAAI,CAAA,GACc5sB,IAAAA,CAAOgX,EAAAA,UAAMtO,EAAa,QAAA,oBAAA,uBAAAgkB,CAAA,EAAAF,EAAG,QAAA,oBAAA,sBAAAG,CAAA,EACrC/I,EAAAA,4BAAoB,0BAAAgJ,CAAA,EAE1B,CACAhJ,EAAAA,CAAAA,CAAAA,EACQrX,EAAA,gBAAA,CACJ0D,IAAAA,EACAsF,KAAAA,QACAC,SAAAA,EAAAA,WAAAA,CACA5K,eAAAA,YACAG,aAAAA,KACApI,YAAAA,KAAAA,WACEqe,OACEvL,IAAAA,OAEN,KAAA,IACW,KAAA,KAAA,GAAA4W,EACwC,IAAA1b,EAAA,KAAA,SAG7B,MAAAjO,EAAA,QAAA3C,GAAA,OAAA,KAAA,CAIe6K,aAAAA,EACP,aAAAwiB,EAAA,aAAAnP,EAAA,MAAAje,CAAA,EAAAD,EAI9B,OACWstB,EAAArtB,CAAA,EAAA,MAAAstB,EAAAF,EAAAnP,EACwCle,EAAA,OAAA,MAAA,OAAAC,IAClBstB,EAAA,KAAA,MAAAlrB,EAAAkK,EAAA,UAAA,MAAAlK,EAAA,KAAAkK,EAAAvM,EAAA,EAGjC,MAAA,CACAwO,MAAAA,OAAiBnK,OAClB,MACOub,iBAAYiE,EAAAA,EAAa,KAAA,QAAA,CAAA,GAAA,CACzB,CAAA,CACNqJ,CAA0B,CAAA,CAChB1e,CAAAA,EACX,SAAA2d,GACF,CAAA,cAAAvF,EACD,GAAA,EAEN,CAOAgG,MAAAA,EALgB/Y,GACdjN,CAAA,EAImB,uBACb4mB,EAAA5G,EAAA2F,EAAE1sB,OAAAA,GAAAA,EAAAA,EAAK+qB,KACbpe,UAAiB,CACfxM,MAAAA,SAASC,GAAY2qB,IAAa3qB,UAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,UAAAA,KAAAA,MAC7BssB,EACLvsB,IAAAA,EACF,YAAAwtB,EACF,MAAA,CAEgB3Z,eAAAA,EACd+S,EAAA,GAIFiG,CACE,CAAM,CAAA,CAAEM,YAAYjU,CACpBoU,WAAAA,EACF,SAAAG,EAEgB5Z,KAAAA,EAIlB,oBAAA6Z,EAAA,IAAA,CAEA,EACE,SAAAC,OACkB9Z,CAIhB4Y,EAAgB5Y,CAIAA,MAAAA,EAAAA,GAAQkX,iCACtB,EAGJ,CACF,IAAAhqB,EACF,KAAAkW,EAEA,GAAA/Y,CACE,EAAoBuuB,EAAsB,CAAA5V,EAAA+W,CAAA,EAAA5d,EAAApC,EAAA,WAAA,EAAOigB,EAC/C5W,EAAA,MAAA,GAAA,EAAA,CAAA,EACiB6W,EAAAC,GAAAL,EAAA,GAAA,EACF,CAAAM,EAAAC,CAAA,EAAAje,EAAA,EAAA,EACDwX,EAAA5T,GAAA,IAAA,EAAA3D,EACD,IAAA,CAAA,IACP4E,EAAA,OACCmZ,GAAAxG,EAAA,UACL3S,EAAK,WAAA,IAAA,CACDyX,EAAAA,QAAAA,OACJ,EAAA,GAAA,GAEO3pB,IAAAA,CACP,aAAgBkS,CAAA,CACd,CAAM,EAAEoJ,CAAAA,CAAAA,CAAAA,EAAcoP,MAAAA,EAAAA,EAAAA,EAAAA,CAAcnP,SAAAA,GAAAA,CAAAA,EAAAA,EAAAA,MAAAA,CAAcje,MAAAA,aAAAA,SAAYsK,CAAAA,EAAAA,OAAAA,CAC9D+iB,MAAAA,MACA,mBACAttB,CAAAA,EAAEuK,MAAamC,CACfH,QACF,SAAAqB,EAAA,aAAApB,EAAA,IAAA,CACO,SAAA,gBAAA,CACE,CAAA,CAAA,CACPE,CAAQ,CAAA,eACU,CACpB,IAAA8a,EAAE,MAAA3Q,GAAA,GAEU,KAAAuK,EAEnB,YAAA,CAED,MAAwB,oBAAkB,MAAA,oBAAO,MAAA,mBACzC1F,EAAAA,CAAAA,EACN,eAA6BwS,YAC7B,aAAkBtH,KACd2F,YAAa3F,KACR,WAAA,OACT,IAAA,OACA,SAAA6G,EAEI,UACED,OAQKjB,QAAAA,GAAAA,CACF3F,KAAAA,CACM4G,MAAAA,CAAAA,EACJxtB,EAAA,OACL4tB,KACFE,EAAA7tB,CAAA,CACA,CAEN,CAAA,CAEA,CAAA,EACE2N,OAAAA,EAAAA,EAAAA,CACA6f,SAAAA,CAAAA,EAAAA,MAAAA,CACArM,MAAAA,qCAC4B,CAAC,MAAA,wBACZ,IAAA,CAAC6M,EAAA,EAAA,CACjB,EACKE,SAAAA,IAAyD,QAAA3hB,EAAA,MAAA,CACzD,IAAAzL,EAAEA,IAAAA,EAAAA,CAAKkW,EAAAA,IAAAA,SAAAA,IAAAA,OAAAA,EAAAA,QAAAA,CAAM/Y,IAAAA,EAAO0P,YAAAA,GAClBgS,MAAI,EAAEhS,CAAAA,EAAAA,IAAAA,QAAAA,EAAAA,QAAAA,CAAY,IAAA7M,EACN6sB,SAAAA,EACD3W,CAAAA,EAAAA,IACnB,CAAM6W,EAAAA,EAAAA,EAAAA,MAAAA,CAKA,MAACE,cACDxG,SAAAA,WAAyB,CAC/BvX,KAAgB,SACV4E,MAAAA,qBACAmZ,SAAAA,EACFnZ,UACE2S,SAAY3T,IAAe,CACvB,KAAA,GAAA,CACR,CACA,CAAA,CACEoB,CAAAA,CAAAA,CAAkB,CACpB,EAAA+Y,GAAAxhB,EAAAkI,GAAA,CACEsZ,QAAUhuB,GAAA,CAERouB,EAAAA,4BAEQD,EAAAA,CACe,EACrB,SAAYrY,EAAA,MAAA,CAAK,GAAA,cACjB,MAAA,kBAAG,SAAOe,CAAAA,EAAAA,SAAAA,CACPjJ,SAAAA,EAAAA,KAA0B,CAAA,SAAA,CAAA,MAAA,yBACzB,MAAA,yBAGN,MAAA,wBACO4Z,EAAAA,CAAAA,CAAAA,EACiB,CACtB,EAAA1R,EAAA,OAAA,CAEE,SAAA,KACS,SAAA,CAAAtJ,EAAA,MAAA,CACA,MAAA,gBACA,SAAAqhB,IAAA,QAAArhB,EAAA,MAAA,CACG,IAAAzL,EAEC,IAAA,EAAA,CACF,EAAA8sB,IAAA,SAAAA,IAAA,OAAArhB,EAAA,QAAA,CACD,IAAAzL,EACD,YAAA,GACP,SAAA,EACJ,CAAA,EAAA8sB,IAAA,QAAArhB,EAAA,QAAA,CACU,IAAAzL,WAEM,EACR,CAAA,EAAA,IAAEd,CAAAA,EAAAA,CAAAA,CAAAA,GACR2tB,CAAAA,CACAE,CAAAA,CAAAA,CAAkC,CACpC,CAAA,CAAE,SAIT3M,GAAA,CAED,KAAAC,EACE,KAAA5T,EACE,SAAAigB,EAA6B,QAAAY,EAAA,IAC3B,CAAA,EACQ,WAAAhH,EAEJ4G,cAAAA,EACF,cAAA3G,EAAA,uBAAAH,CAGE,EAAA,CAAUpmB,KAAAA,CAAS,QAAAghB,EAEnB,UAAAwG,EAAYxnB,SAAAA,CAAgB,EAAAyM,EAAM,OAAAsI,EACjB,MAAA,CACjB,MAAY/U,QAAAA,EAAAA,WAAAA,KAAAA,SAAa,CAAAyL,EAAA,MAAA,CAAA,MACvB,eAAI,SAGVuV,EAAA,IAAA,CAAAK,EAAAwJ,IAAA9V,EAAA,MAAA,CAAK,MAAM,cAAa,SACtB,GAAA,QAAA,CACE,SAAK,GACL,KAAM,OACN,MAAAsM,EACA,SAAAqL,EAAkB,YAEb,YAAM,UAAA7B,EAAA,IAAG,KAAAxK,EAAG,WAAA,OAEf,QAAAphB,GAAA,CAGN,KAAA,QAEI,EAAiBA,EAAAA,OACfiuB,EAAAA,CAAAA,EAAkBhuB,EACpBouB,EAAA7gB,CAAA,CACF,CAAA,CAAE,EAAAhB,WAEF,CAAQ,KAAA,SAAoB,MAAA,qBAAiB,SAC3CihB,GAAA1L,EAAA,QAAA,EAAA,QAAA,IACE,CAAAA,EAEI,OAAA6J,EAAA,CAAA,EAAAyC,EACS7gB,CAAA,CAAA,EACA,SACAhB,EAAA4C,EAAA,CACT,KAAY,IAAC,KAAA,GAAA,CAInB,CAAA,CAAA,CAAM,CAAa,EAAAwc,CAAA,CAAA,CACjB,CAAA,EAAA9V,EAAW,MAAA,CAAA,MACR+X,eACC,SAAU9sB,CAAAA,EAAAA,SAAAA,CAAAA,KAAK,SAAI,MACjB8sB,qBACF,SAAY9sB,GAAAA,EAAAA,QAAAA,EAAAA,QAAgB,IAAA,CAAAghB,EAAS,KAAA,EAAA,EAAAsM,EACpB7gB,CAAA,CACjB,EAAYzM,SAAa,GAAA,CAAA,EAAA,IACvB+U,EAAA,QAAA,CAAI,MAEG,mBAAA,SACR,CAAAtJ,EAAA,QAAA,CAAA,KAAA,WAGZ,QAAAgV,EACA,SAAAiM,EAEP,SAAAztB,GAAA,CAEc,KAAA,CACZohB,QAAAA,CAAAA,EACA5T,EAAAA,OACAigB,EAAAA,SAAAA,EACUY,EAAM7gB,CAAA,CAAC,CAAA,CACjB6Z,EAAAA,IAAAA,kBAAAA,CAAAA,CACAD,EAAAA,EAAAA,QAAAA,CACAE,MAAAA,aACAH,SAAAA,CAAAA,WAAAA,IAAAA,EAAAA,SAAAA,CACC,MAAAoB,EACK,SAAAkF,EAAE1L,SAAAA,GAAAA,CAASwG,KAAAA,CAAW/G,MAAAA,CAAAA,EAAahU,EAAAA,SAGvC,UAAAvN,EAAoBuhB,EAAAA,CAAAA,CAA6B,EACpC,SAAA,OAAA,QAAA+C,EAAA,EAAA,OAAA,CAAA,CAAA+J,EAAAruB,CAAA,IACAuF,GAAI8hB,MACXF,CAAW,EAAA,IAAA,CAAA,CAAAkH,EAAAruB,CAAA,IAAAuM,EAAA,SAAA,CAAa,MAAAvM,EAEZ,SAAAquB,CACH,EAAAruB,CAAA,CAAA,CAAA,CAAA,CACL,CAAOmiB,CACP,CAAA,CAAA,CAAA,EAAA5V,EACW2a,MAAAA,CACX,MAAA,eACA,SAAA3a,EAAA,SAAA,CAAA,KACW,SAAA,iCAEH,SAAAihB,EAAExtB,QAAAA,IAAAA,CAAAA,EAAYsK,IAAAA,CACpBwX,EACAsM,SAAAA,aAAY,CACd,CAAA,CAAE,CAAA,CAEJ,CAAA,CACO,CACC,SACNE,GAAsBxM,EAAAA,EAAkB,CAAA,OAAAyM,IACzB,cACLC,EAAAA,KAAAA,CAAAA,EAAAA,IAAU,CAClBJ,IAAAA,EAAAA,EAAAA,UAAY,YAAA,EACdK,EAAAC,EAAA,UAAA,YAAA,EAAEC,IAEG,WAAAJ,CAAA,EAAAK,EAAMH,EAAA,WAAAF,CAAA,EAAAM,EAASC,EAAA,SAAAP,CAAA,EAAAQ,EAAGN,EAAA,SAAAF,CAAA,EAG3B,OAFWI,GAAAC,EAIfrwB,EAAA,OAAAmwB,EAAA,OAAAC,EAAA,GAAAC,EAAA,EAFGC,GAAAE,EAEHxwB,EAAA,OAAAmwB,EAAA,OAAAG,EAAA,GAAAE,EAAA,EAAA,CAAA,CAAA,EAAA,MAAW,EAAA,CAAA,CAAA,CACT,SACOjC,GAAA7S,EAAA,CAAA,OACCA,EAAA,QAAA,WAAA,SAAA+U,EAAA,CACN,MAAA,KAAUxB,EAAY1L,WAAAA,CAAAA,EAAkBsF,GAAAA,CAAAA,CAEtCtF,CACAsM,SAAAA,GAAYa,EAAA,CACd,QAAArvB,KAAAqvB,GAAEA,EAAArvB,CAAA,IAAA,MAAAqvB,EAAArvB,CAAA,IAAA,SAAA,OAIJqvB,EAAArvB,CAAA,EACE,OAAAqvB,CACO,CC77CjB,KAAM,CAAEC,iBAAkBC,EAAY,EAAIC,CAAAA,iBAAAA,SAAAA,aAAAA,wBAAAA,aAAAA,aAAAA,SAAAA,IAAAA,KAAAA,aAAAA,IAAAA,GAAAA,KAAAA,GAAAA,IAAAA,EAAAA,EAE3B,SAASC,GAAShgB,EAAOvG,EAAM,CAC5C,MAAM2S,EAAaC,GAAY/U,CAAM,EAC/B,CAAEG,gBAAAA,CAAiB,EAAG2U,EACtB6T,EAAW1rB,MAAMgM,QAAQ9G,CAAI,EACnC,IAAIymB,EAAQD,EAAWxmB,EAAO,GAG1B,CAACwmB,GAAY,UAAU1uB,KAAKkI,CAAI,IAClCymB,EAAMpwB,KAAK2J,EAAKjI,QAAQ,YAAa,IAAI,CAAC,EAC1C0uB,EAAMpwB,KAAK2J,EAAKjI,QAAQ,aAAc,EAAE,CAAC,GAE3C,IAAIosB,EAAU,GACVsC,EAAM3sB,OACRqqB,EAAUsC,EAAMlE,KAAM3mB,GAAM8qB,GAAU9qB,EAAGoC,CAAe,CAAC,EAChDgC,IACTmkB,EAAUuC,GAAU1mB,EAAMhC,CAAe,GAE3CnH,MAAc,CAAOstB,IAAEA,SAAO,MAAA5d,EAAA,GAAAA,OAAA8f,KAAAA,GAAEroB,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAgB"}